{"abi": [{"inputs": [{"internalType": "address", "name": "_owner", "type": "address"}, {"internalType": "uint256", "name": "_sumVotingPowers", "type": "uint256"}, {"internalType": "bytes32", "name": "_merkleRoot", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address", "name": "actual", "type": "address"}, {"internalType": "address", "name": "expected", "type": "address"}], "name": "NotAuthorized", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": false, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "VotesDelegated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": false, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "VotesUndelegated", "type": "event"}, {"inputs": [{"internalType": "address", "name": "_oldDelegate", "type": "address"}, {"internalType": "address", "name": "_newDelegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "changeDelegate", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "nftOwner", "type": "address"}, {"internalType": "address", "name": "delegate", "type": "address"}, {"internalType": "uint128", "name": "multiplier", "type": "uint128"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}, {"internalType": "bytes", "name": "signature", "type": "bytes"}], "name": "claimNFT", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_delegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "delegateVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getCurrentRecord", "outputs": [{"components": [{"internalType": "uint256", "name": "at", "type": "uint256"}, {"internalType": "uint256", "name": "baseVotingPower", "type": "uint256"}, {"internalType": "uint256", "name": "multiplier", "type": "uint256"}, {"internalType": "int256", "name": "netDelegatedVotes", "type": "int256"}], "internalType": "struct VotingPowerHistory.Record", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getDelegations", "outputs": [{"components": [{"internalType": "address", "name": "delegate", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.Delegation[]", "name": "delegations", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "name": "getRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVaultType", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_delegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "undelegateVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address[]", "name": "users", "type": "address[]"}, {"internalType": "uint128", "name": "_multiplier", "type": "uint128"}], "name": "updateMultiplier", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "11": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol", "13": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/math/Math.sol", "18": "contracts/access/ImmutableOwner.sol", "22": "contracts/vaults/BaseDelegatingVault.sol", "23": "contracts/vaults/BaseVault.sol", "25": "contracts/vaults/FoundingMemberVault.sol", "28": "contracts/vaults/NFTVault.sol", "31": "interfaces/IDelegatingVault.sol", "37": "interfaces/IVault.sol", "46": "libraries/Merkle.sol", "47": "libraries/ScaledMath.sol", "49": "libraries/VotingPowerHistory.sol", "9": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/Strings.sol"}, "ast": {"absolutePath": "contracts/vaults/FoundingMemberVault.sol", "exportedSymbols": {"BaseDelegatingVault": [2401], "BaseVault": [7234], "DataTypes": [6201], "ECDSA": [7638], "EIP712": [7792], "EnumerableMap": [5210], "EnumerableSet": [5823], "Errors": [6228], "FoundingMemberVault": [2799], "IDelegatingVault": [6468], "ITierStrategy": [5931], "IVault": [5983], "ImmutableOwner": [7181], "Math": [10479], "Merkle": [7866], "NFTVault": [3589], "ScaledMath": [6308], "Strings": [8762], "VotingPowerHistory": [7148]}, "id": 2800, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 2546, "literals": ["solidity", "^", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "45:24:25"}, {"absolutePath": "contracts/vaults/NFTVault.sol", "file": "./NFTVault.sol", "id": 2547, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 3590, "src": "71:24:25", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/DataTypes.sol", "file": "../../libraries/DataTypes.sol", "id": 2548, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 6202, "src": "96:39:25", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../../libraries/ScaledMath.sol", "id": 2549, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 6309, "src": "136:40:25", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Merkle.sol", "file": "../../libraries/Merkle.sol", "id": 2550, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 7867, "src": "177:36:25", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/VotingPowerHistory.sol", "file": "../../libraries/VotingPowerHistory.sol", "id": 2551, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 7149, "src": "214:48:25", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol", "file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol", "id": 2552, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 7793, "src": "263:63:25", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "id": 2553, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2800, "sourceUnit": 7639, "src": "327:62:25", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 2554, "name": "NFTVault", "nameLocations": ["423:8:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 3589, "src": "423:8:25"}, "id": 2555, "nodeType": "InheritanceSpecifier", "src": "423:8:25"}, {"baseName": {"id": 2556, "name": "EIP712", "nameLocations": ["433:6:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 7792, "src": "433:6:25"}, "id": 2557, "nodeType": "InheritanceSpecifier", "src": "433:6:25"}], "canonicalName": "FoundingMemberVault", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 2799, "linearizedBaseContracts": [2799, 7792, 3589, 7181, 2401, 6468, 7234, 5983], "name": "FoundingMemberVault", "nameLocation": "400:19:25", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 2561, "libraryName": {"id": 2558, "name": "Merkle", "nameLocations": ["452:6:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 7866, "src": "452:6:25"}, "nodeType": "UsingForDirective", "src": "446:29:25", "typeName": {"id": 2560, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2559, "name": "Merkle.Root", "nameLocations": ["463:6:25", "470:4:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 7797, "src": "463:11:25"}, "referencedDeclaration": 7797, "src": "463:11:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_storage_ptr", "typeString": "struct Merkle.Root"}}}, {"global": false, "id": 2565, "libraryName": {"id": 2562, "name": "VotingPowerHistory", "nameLocations": ["486:18:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 7148, "src": "486:18:25"}, "nodeType": "UsingForDirective", "src": "480:56:25", "typeName": {"id": 2564, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2563, "name": "VotingPowerHistory.History", "nameLocations": ["509:18:25", "528:7:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 6552, "src": "509:26:25"}, "referencedDeclaration": 6552, "src": "509:26:25", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$6552_storage_ptr", "typeString": "struct VotingPowerHistory.History"}}}, {"constant": true, "id": 2568, "mutability": "constant", "name": "_VAULT_TYPE", "nameLocation": "567:11:25", "nodeType": "VariableDeclaration", "scope": 2799, "src": "542:55:25", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2566, "name": "string", "nodeType": "ElementaryTypeName", "src": "542:6:25", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": {"hexValue": "466f756e64696e674d656d626572", "id": 2567, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "581:16:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_575610213678189e9d9cc250fbc82a34c5b4a706a5bd8dd693a7026f7b20ba5e", "typeString": "literal_string \"FoundingMember\""}, "value": "FoundingMember"}, "visibility": "internal"}, {"constant": false, "id": 2572, "mutability": "mutable", "name": "_claimed", "nameLocation": "637:8:25", "nodeType": "VariableDeclaration", "scope": 2799, "src": "604:41:25", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 2571, "keyType": {"id": 2569, "name": "address", "nodeType": "ElementaryTypeName", "src": "612:7:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "604:24:25", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 2570, "name": "bool", "nodeType": "ElementaryTypeName", "src": "623:4:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "private"}, {"constant": false, "id": 2577, "mutability": "immutable", "name": "_TYPE_HASH", "nameLocation": "678:10:25", "nodeType": "VariableDeclaration", "scope": 2799, "src": "652:173:25", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2573, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "652:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"arguments": [{"hexValue": "50726f6f662861646472657373206163636f756e742c616464726573732072656365697665722c616464726573732064656c65676174652c75696e74313238206d756c7469706c6965722c627974657333325b5d2070726f6f6629", "id": 2575, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "722:93:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_015ae317ea3996e775b7592a4e654e819d68b83313f09c429f495e6e95002d4c", "typeString": "literal_string \"Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)\""}, "value": "Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_015ae317ea3996e775b7592a4e654e819d68b83313f09c429f495e6e95002d4c", "typeString": "literal_string \"Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)\""}], "id": 2574, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "699:9:25", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 2576, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "699:126:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "private"}, {"constant": false, "id": 2580, "mutability": "mutable", "name": "merkleRoot", "nameLocation": "851:10:25", "nodeType": "VariableDeclaration", "scope": 2799, "src": "831:30:25", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_storage", "typeString": "struct Merkle.Root"}, "typeName": {"id": 2579, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2578, "name": "Merkle.Root", "nameLocations": ["831:6:25", "838:4:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 7797, "src": "831:11:25"}, "referencedDeclaration": 7797, "src": "831:11:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_storage_ptr", "typeString": "struct Merkle.Root"}}, "visibility": "private"}, {"body": {"id": 2607, "nodeType": "Block", "src": "1025:98:25", "statements": [{"expression": {"id": 2598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2596, "name": "sumVotingPowers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3455, "src": "1035:15:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2597, "name": "_sumVotingPowers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2584, "src": "1053:16:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1035:34:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2599, "nodeType": "ExpressionStatement", "src": "1035:34:25"}, {"expression": {"id": 2605, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2600, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2580, "src": "1079:10:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_storage", "typeString": "struct Merkle.Root storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 2603, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2586, "src": "1104:11:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2601, "name": "Merkle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7866, "src": "1092:6:25", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Merkle_$7866_$", "typeString": "type(library Merkle)"}}, "id": 2602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1099:4:25", "memberName": "Root", "nodeType": "MemberAccess", "referencedDeclaration": 7797, "src": "1092:11:25", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Root_$7797_storage_ptr_$", "typeString": "type(struct Merkle.Root storage pointer)"}}, "id": 2604, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1092:24:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_memory_ptr", "typeString": "struct Merkle.Root memory"}}, "src": "1079:37:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_storage", "typeString": "struct Merkle.Root storage ref"}}, "id": 2606, "nodeType": "ExpressionStatement", "src": "1079:37:25"}]}, "id": 2608, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "466f756e64696e674d656d6265725661756c74", "id": 2589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "980:21:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d945dcc7dfbed5d3356470391443bd1dd249890d921be9b988337b4affa22ca9", "typeString": "literal_string \"FoundingMemberVault\""}, "value": "FoundingMemberVault"}, {"hexValue": "31", "id": 2590, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1003:3:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}, "value": "1"}], "id": 2591, "kind": "baseConstructorSpecifier", "modifierName": {"id": 2588, "name": "EIP712", "nameLocations": ["973:6:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 7792, "src": "973:6:25"}, "nodeType": "ModifierInvocation", "src": "973:34:25"}, {"arguments": [{"id": 2593, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2582, "src": "1017:6:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 2594, "kind": "baseConstructorSpecifier", "modifierName": {"id": 2592, "name": "NFTVault", "nameLocations": ["1008:8:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 3589, "src": "1008:8:25"}, "nodeType": "ModifierInvocation", "src": "1008:16:25"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 2587, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2582, "mutability": "mutable", "name": "_owner", "nameLocation": "897:6:25", "nodeType": "VariableDeclaration", "scope": 2608, "src": "889:14:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2581, "name": "address", "nodeType": "ElementaryTypeName", "src": "889:7:25", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2584, "mutability": "mutable", "name": "_sumVotingPowers", "nameLocation": "921:16:25", "nodeType": "VariableDeclaration", "scope": 2608, "src": "913:24:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2583, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "913:7:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2586, "mutability": "mutable", "name": "_merkleRoot", "nameLocation": "955:11:25", "nodeType": "VariableDeclaration", "scope": 2608, "src": "947:19:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2585, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "947:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "879:93:25"}, "returnParameters": {"id": 2595, "nodeType": "ParameterList", "parameters": [], "src": "1025:0:25"}, "scope": 2799, "src": "868:255:25", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2746, "nodeType": "Block", "src": "1310:1307:25", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 2629, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 2625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2623, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2614, "src": "1341:10:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "31653138", "id": 2624, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1355:4:25", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "1341:18:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 2628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2626, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2614, "src": "1363:10:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "3230653138", "id": 2627, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1377:5:25", "typeDescriptions": {"typeIdentifier": "t_rational_20000000000000000000_by_1", "typeString": "int_const 20000000000000000000"}, "value": "20e18"}, "src": "1363:19:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1341:41:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6d756c7469706c696572206d7573742062652067726561746572206f7220657175616c207468616e203165313820616e64206c6f776572206f7220657175616c207468616e203230653138", "id": 2630, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1396:77:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_821154174ccb8e1f14d5c162aa8fa1e75e9343fbe7f9145af13532d18fefdd2d", "typeString": "literal_string \"multiplier must be greater or equal than 1e18 and lower or equal than 20e18\""}, "value": "multiplier must be greater or equal than 1e18 and lower or equal than 20e18"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_821154174ccb8e1f14d5c162aa8fa1e75e9343fbe7f9145af13532d18fefdd2d", "typeString": "literal_string \"multiplier must be greater or equal than 1e18 and lower or equal than 20e18\""}], "id": 2622, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1320:7:25", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1320:163:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2632, "nodeType": "ExpressionStatement", "src": "1320:163:25"}, {"assignments": [2634], "declarations": [{"constant": false, "id": 2634, "mutability": "mutable", "name": "hash", "nameLocation": "1502:4:25", "nodeType": "VariableDeclaration", "scope": 2746, "src": "1494:12:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2633, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1494:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 2651, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"id": 2639, "name": "_TYPE_HASH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2577, "src": "1598:10:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 2640, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2610, "src": "1630:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 2641, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1660:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2642, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1664:6:25", "memberName": "sender", "nodeType": "MemberAccess", "src": "1660:10:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2643, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2612, "src": "1692:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2644, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2614, "src": "1722:10:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"arguments": [{"id": 2646, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2617, "src": "1767:5:25", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "id": 2645, "name": "_encodeProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2790, "src": "1754:12:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes32[] memory) pure returns (bytes32)"}}, "id": 2647, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1754:19:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2637, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1566:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 2638, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "1570:6:25", "memberName": "encode", "nodeType": "MemberAccess", "src": "1566:10:25", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 2648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1566:225:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 2636, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1539:9:25", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 2649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1539:266:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 2635, "name": "_hashTypedDataV4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7791, "src": "1509:16:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$", "typeString": "function (bytes32) view returns (bytes32)"}}, "id": 2650, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1509:306:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1494:321:25"}, {"assignments": [2653], "declarations": [{"constant": false, "id": 2653, "mutability": "mutable", "name": "claimant", "nameLocation": "1833:8:25", "nodeType": "VariableDeclaration", "scope": 2746, "src": "1825:16:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2652, "name": "address", "nodeType": "ElementaryTypeName", "src": "1825:7:25", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 2659, "initialValue": {"arguments": [{"id": 2656, "name": "hash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2634, "src": "1858:4:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 2657, "name": "signature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2619, "src": "1864:9:25", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"id": 2654, "name": "ECDSA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7638, "src": "1844:5:25", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ECDSA_$7638_$", "typeString": "type(library ECDSA)"}}, "id": 2655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1850:7:25", "memberName": "recover", "nodeType": "MemberAccess", "referencedDeclaration": 7404, "src": "1844:13:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes memory) pure returns (address)"}}, "id": 2658, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1844:30:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "1825:49:25"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2661, "name": "claimant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2653, "src": "1892:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 2662, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2610, "src": "1904:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1892:20:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c6964207369676e6174757265", "id": 2664, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1914:19:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a", "typeString": "literal_string \"invalid signature\""}, "value": "invalid signature"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a", "typeString": "literal_string \"invalid signature\""}], "id": 2660, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1884:7:25", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2665, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1884:50:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2666, "nodeType": "ExpressionStatement", "src": "1884:50:25"}, {"expression": {"arguments": [{"id": 2671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1953:19:25", "subExpression": {"baseExpression": {"id": 2668, "name": "_claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2572, "src": "1954:8:25", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 2670, "indexExpression": {"id": 2669, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2610, "src": "1963:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1954:18:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e465420616c726561647920636c61696d6564", "id": 2672, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1974:21:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_46701596dcdc7e86cd8888b7ac11ee441a0383c712b82ff649d7f1f515c62759", "typeString": "literal_string \"NFT already claimed\""}, "value": "NFT already claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_46701596dcdc7e86cd8888b7ac11ee441a0383c712b82ff649d7f1f515c62759", "typeString": "literal_string \"NFT already claimed\""}], "id": 2667, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1945:7:25", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2673, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1945:51:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2674, "nodeType": "ExpressionStatement", "src": "1945:51:25"}, {"assignments": [2676], "declarations": [{"constant": false, "id": 2676, "mutability": "mutable", "name": "node", "nameLocation": "2015:4:25", "nodeType": "VariableDeclaration", "scope": 2746, "src": "2007:12:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2675, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2007:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 2684, "initialValue": {"arguments": [{"arguments": [{"id": 2680, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2610, "src": "2049:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2681, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2614, "src": "2059:10:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"id": 2678, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2032:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 2679, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2036:12:25", "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "2032:16:25", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 2682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2032:38:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 2677, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2022:9:25", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 2683, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2022:49:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "2007:64:25"}, {"expression": {"arguments": [{"arguments": [{"id": 2688, "name": "node", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2676, "src": "2113:4:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 2689, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2617, "src": "2119:5:25", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "expression": {"id": 2686, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2580, "src": "2089:10:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$7797_storage", "typeString": "struct Merkle.Root storage ref"}}, "id": 2687, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2100:12:25", "memberName": "isProofValid", "nodeType": "MemberAccess", "referencedDeclaration": 7865, "src": "2089:23:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Root_$7797_storage_ptr_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Root_$7797_storage_ptr_$", "typeString": "function (struct Merkle.Root storage pointer,bytes32,bytes32[] memory) view returns (bool)"}}, "id": 2690, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2089:36:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c69642070726f6f66", "id": 2691, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2127:15:25", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}, "value": "invalid proof"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}], "id": 2685, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2081:7:25", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2692, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2081:62:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2693, "nodeType": "ExpressionStatement", "src": "2081:62:25"}, {"expression": {"id": 2698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2694, "name": "_claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2572, "src": "2154:8:25", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 2696, "indexExpression": {"id": 2695, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2610, "src": "2163:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2154:18:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 2697, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2175:4:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2154:25:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2699, "nodeType": "ExpressionStatement", "src": "2154:25:25"}, {"assignments": [2704], "declarations": [{"constant": false, "id": 2704, "mutability": "mutable", "name": "current", "nameLocation": "2223:7:25", "nodeType": "VariableDeclaration", "scope": 2746, "src": "2190:40:25", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$6491_memory_ptr", "typeString": "struct VotingPowerHistory.Record"}, "typeName": {"id": 2703, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2702, "name": "VotingPowerHistory.Record", "nameLocations": ["2190:18:25", "2209:6:25"], "nodeType": "IdentifierPath", "referencedDeclaration": 6491, "src": "2190:25:25"}, "referencedDeclaration": 6491, "src": "2190:25:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$6491_storage_ptr", "typeString": "struct VotingPowerHistory.Record"}}, "visibility": "internal"}], "id": 2710, "initialValue": {"arguments": [{"expression": {"id": 2707, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2268:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2708, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2272:6:25", "memberName": "sender", "nodeType": "MemberAccess", "src": "2268:10:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 2705, "name": "history", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7196, "src": "2233:7:25", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$6552_storage", "typeString": "struct VotingPowerHistory.History storage ref"}}, "id": 2706, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2241:13:25", "memberName": "currentRecord", "nodeType": "MemberAccess", "referencedDeclaration": 6715, "src": "2233:21:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_History_$6552_storage_ptr_$_t_address_$returns$_t_struct$_Record_$6491_memory_ptr_$bound_to$_t_struct$_History_$6552_storage_ptr_$", "typeString": "function (struct VotingPowerHistory.History storage pointer,address) view returns (struct VotingPowerHistory.Record memory)"}}, "id": 2709, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2233:55:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$6491_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "nodeType": "VariableDeclarationStatement", "src": "2190:98:25"}, {"expression": {"arguments": [{"expression": {"id": 2714, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2337:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2341:6:25", "memberName": "sender", "nodeType": "MemberAccess", "src": "2337:10:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2716, "name": "current", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2704, "src": "2361:7:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$6491_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 2717, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2369:15:25", "memberName": "baseVotingPower", "nodeType": "MemberAccess", "referencedDeclaration": 6486, "src": "2361:23:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 2718, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6308, "src": "2387:10:25", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$6308_$", "typeString": "type(library ScaledMath)"}}, "id": 2719, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2398:3:25", "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 6233, "src": "2387:14:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2361:40:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2721, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2614, "src": "2415:10:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"expression": {"id": 2722, "name": "current", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2704, "src": "2439:7:25", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$6491_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 2723, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2447:17:25", "memberName": "netDelegatedVotes", "nodeType": "MemberAccess", "referencedDeclaration": 6490, "src": "2439:25:25", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 2711, "name": "history", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7196, "src": "2298:7:25", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$6552_storage", "typeString": "struct VotingPowerHistory.History storage ref"}}, "id": 2713, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2306:17:25", "memberName": "updateVotingPower", "nodeType": "MemberAccess", "referencedDeclaration": 6648, "src": "2298:25:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_History_$6552_storage_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_struct$_Record_$6491_memory_ptr_$bound_to$_t_struct$_History_$6552_storage_ptr_$", "typeString": "function (struct VotingPowerHistory.History storage pointer,address,uint256,uint256,int256) returns (struct VotingPowerHistory.Record memory)"}}, "id": 2724, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2298:176:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$6491_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 2725, "nodeType": "ExpressionStatement", "src": "2298:176:25"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 2736, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2726, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2612, "src": "2489:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2509:1:25", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2728, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2501:7:25", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2727, "name": "address", "nodeType": "ElementaryTypeName", "src": "2501:7:25", "typeDescriptions": {}}}, "id": 2730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2501:10:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2489:22:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2732, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2612, "src": "2515:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 2733, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2527:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2531:6:25", "memberName": "sender", "nodeType": "MemberAccess", "src": "2527:10:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2515:22:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2489:48:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2745, "nodeType": "IfStatement", "src": "2485:126:25", "trueBody": {"id": 2744, "nodeType": "Block", "src": "2539:72:25", "statements": [{"expression": {"arguments": [{"expression": {"id": 2738, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2567:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2571:6:25", "memberName": "sender", "nodeType": "MemberAccess", "src": "2567:10:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2740, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2612, "src": "2579:8:25", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2741, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2614, "src": "2589:10:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 2737, "name": "_delegateVote", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2350, "src": "2553:13:25", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2742, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2553:47:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2743, "nodeType": "ExpressionStatement", "src": "2553:47:25"}]}}]}, "functionSelector": "0ddf940d", "id": 2747, "implemented": true, "kind": "function", "modifiers": [], "name": "claimNFT", "nameLocation": "1138:8:25", "nodeType": "FunctionDefinition", "parameters": {"id": 2620, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2610, "mutability": "mutable", "name": "nftOwner", "nameLocation": "1164:8:25", "nodeType": "VariableDeclaration", "scope": 2747, "src": "1156:16:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2609, "name": "address", "nodeType": "ElementaryTypeName", "src": "1156:7:25", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2612, "mutability": "mutable", "name": "delegate", "nameLocation": "1190:8:25", "nodeType": "VariableDeclaration", "scope": 2747, "src": "1182:16:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2611, "name": "address", "nodeType": "ElementaryTypeName", "src": "1182:7:25", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2614, "mutability": "mutable", "name": "multiplier", "nameLocation": "1216:10:25", "nodeType": "VariableDeclaration", "scope": 2747, "src": "1208:18:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 2613, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1208:7:25", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 2617, "mutability": "mutable", "name": "proof", "nameLocation": "1255:5:25", "nodeType": "VariableDeclaration", "scope": 2747, "src": "1236:24:25", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 2615, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1236:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2616, "nodeType": "ArrayTypeName", "src": "1236:9:25", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}, {"constant": false, "id": 2619, "mutability": "mutable", "name": "signature", "nameLocation": "1285:9:25", "nodeType": "VariableDeclaration", "scope": 2747, "src": "1270:24:25", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 2618, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1270:5:25", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1146:154:25"}, "returnParameters": {"id": 2621, "nodeType": "ParameterList", "parameters": [], "src": "1310:0:25"}, "scope": 2799, "src": "1129:1488:25", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 2789, "nodeType": "Block", "src": "2715:198:25", "statements": [{"assignments": [2756], "declarations": [{"constant": false, "id": 2756, "mutability": "mutable", "name": "proofB", "nameLocation": "2738:6:25", "nodeType": "VariableDeclaration", "scope": 2789, "src": "2725:19:25", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 2755, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2725:5:25", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 2757, "nodeType": "VariableDeclarationStatement", "src": "2725:19:25"}, {"body": {"id": 2783, "nodeType": "Block", "src": "2797:76:25", "statements": [{"expression": {"id": 2781, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2769, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2756, "src": "2811:6:25", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 2773, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2756, "src": "2833:6:25", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"arguments": [{"baseExpression": {"id": 2776, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2750, "src": "2852:5:25", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 2778, "indexExpression": {"id": 2777, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2759, "src": "2858:1:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2852:8:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2774, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2841:3:25", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 2775, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2845:6:25", "memberName": "encode", "nodeType": "MemberAccess", "src": "2841:10:25", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 2779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2841:20:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 2771, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2820:5:25", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 2770, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2820:5:25", "typeDescriptions": {}}}, "id": 2772, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2826:6:25", "memberName": "concat", "nodeType": "MemberAccess", "src": "2820:12:25", "typeDescriptions": {"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 2780, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2820:42:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "src": "2811:51:25", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 2782, "nodeType": "ExpressionStatement", "src": "2811:51:25"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2765, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2762, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2759, "src": "2774:1:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2763, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2750, "src": "2778:5:25", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 2764, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2784:6:25", "memberName": "length", "nodeType": "MemberAccess", "src": "2778:12:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2774:16:25", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2784, "initializationExpression": {"assignments": [2759], "declarations": [{"constant": false, "id": 2759, "mutability": "mutable", "name": "i", "nameLocation": "2767:1:25", "nodeType": "VariableDeclaration", "scope": 2784, "src": "2759:9:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2758, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2759:7:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2761, "initialValue": {"hexValue": "30", "id": 2760, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2771:1:25", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2759:13:25"}, "loopExpression": {"expression": {"id": 2767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2792:3:25", "subExpression": {"id": 2766, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2759, "src": "2792:1:25", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2768, "nodeType": "ExpressionStatement", "src": "2792:3:25"}, "nodeType": "ForStatement", "src": "2754:119:25"}, {"expression": {"arguments": [{"id": 2786, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2756, "src": "2899:6:25", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 2785, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2889:9:25", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 2787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2889:17:25", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 2754, "id": 2788, "nodeType": "Return", "src": "2882:24:25"}]}, "id": 2790, "implemented": true, "kind": "function", "modifiers": [], "name": "_encodeProof", "nameLocation": "2632:12:25", "nodeType": "FunctionDefinition", "parameters": {"id": 2751, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2750, "mutability": "mutable", "name": "proof", "nameLocation": "2671:5:25", "nodeType": "VariableDeclaration", "scope": 2790, "src": "2654:22:25", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 2748, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2654:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2749, "nodeType": "ArrayTypeName", "src": "2654:9:25", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "2644:38:25"}, "returnParameters": {"id": 2754, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2753, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2790, "src": "2706:7:25", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2752, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2706:7:25", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2705:9:25"}, "scope": 2799, "src": "2623:290:25", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5982], "body": {"id": 2797, "nodeType": "Block", "src": "2981:35:25", "statements": [{"expression": {"id": 2795, "name": "_VAULT_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2568, "src": "2998:11:25", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 2794, "id": 2796, "nodeType": "Return", "src": "2991:18:25"}]}, "functionSelector": "75baf37f", "id": 2798, "implemented": true, "kind": "function", "modifiers": [], "name": "getVaultType", "nameLocation": "2928:12:25", "nodeType": "FunctionDefinition", "parameters": {"id": 2791, "nodeType": "ParameterList", "parameters": [], "src": "2940:2:25"}, "returnParameters": {"id": 2794, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2793, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2798, "src": "2966:13:25", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2792, "name": "string", "nodeType": "ElementaryTypeName", "src": "2966:6:25", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2965:15:25"}, "scope": 2799, "src": "2919:97:25", "stateMutability": "pure", "virtual": false, "visibility": "external"}], "scope": 2800, "src": "391:2627:25", "usedErrors": [6217]}], "src": "45:2974:25"}, "bytecode": "6101806040527f015ae317ea3996e775b7592a4e654e819d68b83313f09c429f495e6e95002d4c610160523480156200003757600080fd5b50604051620023e1380380620023e18339810160408190526200005a9162000170565b604080518082018252601381527f466f756e64696e674d656d6265725661756c74000000000000000000000000006020808301918252835180850190945260018452603160f81b9084019081526001600160a01b038716608052825190912083519091206101008290526101208190524660c0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001428184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60a0523060e05261014052505050600592909255604080516020810190915281905260075550620001b59050565b6000806000606084860312156200018657600080fd5b83516001600160a01b03811681146200019e57600080fd5b602085015160409095015190969495509392505050565b60805160a05160c05160e051610100516101205161014051610160516121b86200022960003960006102f50152600061111f0152600061116e01526000611149015260006110a2015260006110cc015260006110f60152600081816101970152818161076f01526107b101526121b86000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610192578063926f7327146101d15780639f1acf08146101e4578063cead0481146101f7578063de1ec4031461020a578063e2fcf5501461021d57600080fd5b80630ddf940d146100b957806319ad0eba146100ce57806331cc13ba1461011d578063344ff1d01461013d57806371fbcca51461014f57806375baf37f14610162575b600080fd5b6100cc6100c7366004611dd2565b610230565b005b6100e16100dc366004611ea1565b61062d565b60405161011491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b61013061012b366004611ea1565b610669565b6040516101149190611ebc565b6005545b604051908152602001610114565b6100cc61015d366004611f14565b610764565b604080518082018252600e81526d2337bab73234b733a6b2b6b132b960911b602082015290516101149190611f8c565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6100cc6101df366004611fbf565b610a51565b6101416101f2366004611ea1565b610a60565b6100cc610205366004611fe9565b610a6c565b610141610218366004611fbf565b610a87565b6100cc61022b366004611fbf565b610a9b565b670de0b6b3a7640000856001600160801b03161015801561026357506801158e460913d00000856001600160801b031611155b6102ee5760405162461bcd60e51b815260206004820152604b60248201527f6d756c7469706c696572206d7573742062652067726561746572206f7220657160448201527f75616c207468616e203165313820616e64206c6f776572206f7220657175616c60648201526a040e8d0c2dc406460ca62760ab1b608482015260a4015b60405180910390fd5b60006103b17f000000000000000000000000000000000000000000000000000000000000000089338a8a6103548b8b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa692505050565b6040805160208101979097526001600160a01b03958616908701529284166060860152921660808401526001600160801b0390911660a083015260c082015260e00160405160208183030381529060405280519060200120610b34565b905060006103f58285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b8292505050565b9050886001600160a01b0316816001600160a01b03161461044c5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016102e5565b6001600160a01b03891660009081526006602052604090205460ff16156104ab5760405162461bcd60e51b815260206004820152601360248201527213919508185b1c9958591e4818db185a5b5959606a1b60448201526064016102e5565b6040516bffffffffffffffffffffffff1960608b901b1660208201526fffffffffffffffffffffffffffffffff19608089901b1660348201526000906044016040516020818303038152906040528051906020012090506105448188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060079493925050610ba69050565b6105805760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016102e5565b6001600160a01b038a166000908152600660205260408120805460ff191660011790556105ad8133610c2e565b90506105e533670de0b6b3a764000083602001516105cb919061203b565b606084015160009291906001600160801b038e1690610d3c565b506001600160a01b038a161580159061060757506001600160a01b038a163314155b1561062057610620338b8b6001600160801b0316610e80565b5050505050505050505050565b6106586040518060800160405280600081526020016000815260200160008152602001600081525090565b610663600083610c2e565b92915050565b6001600160a01b038116600090815260046020526040812060609161068d82610efb565b90508067ffffffffffffffff8111156106a8576106a861204e565b6040519080825280602002602001820160405280156106ed57816020015b60408051808201909152600080825260208201528152602001906001900390816106c65790505b50925060005b8181101561075c576000806107088584610f06565b915091506040518060400160405280836001600160a01b031681526020018281525086848151811061073c5761073c612064565b6020026020010181905250505080806107549061207a565b9150506106f3565b505050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107de5760405163c55ddc9760e01b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016102e5565b670de0b6b3a7640000816001600160801b0316101561083f5760405162461bcd60e51b815260206004820181905260248201527f6d756c7469706c6965722063616e6e6f74206265206c657373207468616e203160448201526064016102e5565b6801158e460913d00000816001600160801b031611156108ab5760405162461bcd60e51b815260206004820152602160248201527f6d756c7469706c6965722063616e6e6f74206265206d6f7265207468616e20326044820152600360fc1b60648201526084016102e5565b60005b82811015610a4b5760006108ea8585848181106108cd576108cd612064565b90506020020160208101906108e29190611ea1565b600090610c2e565b9050670de0b6b3a7640000816020015110156109535760405162461bcd60e51b815260206004820152602260248201527f616c6c207573657273206d7573742068617665206174206c656173742031204e604482015261119560f21b60648201526084016102e5565b826001600160801b03168160400151106109af5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520766f74696e6720706f7765720000000060448201526064016102e5565b60006109ba82610f24565b90506000610a078787868181106109d3576109d3612064565b90506020020160208101906109e89190611ea1565b6020850151606086015160009291906001600160801b038a1690610d3c565b905081610a1382610f24565b610a1d9190612093565b60056000828254610a2e919061203b565b925050819055505050508080610a439061207a565b9150506108ae565b50505050565b610a5c338383610e80565b5050565b60006106638242610a87565b610a77338483610f50565b610a82338383610e80565b505050565b6000610a94818484610fe4565b9392505050565b610a5c338383610f50565b6000606060005b8351811015610b255781848281518110610ac957610ac9612064565b6020026020010151604051602001610ae391815260200190565b60408051601f1981840301815290829052610b0192916020016120a6565b60405160208183030381529060405291508080610b1d9061207a565b915050610aad565b50805160209091012092915050565b6000610663610b41611095565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b9185856111bc565b91509150610b9e816111fe565b509392505050565b600082815b8351811015610c215760008083868481518110610bca57610bca612064565b60200260200101519150915080821115610be057905b604080516020810184905290810182905260600160405160208183030381529060405280519060200120935050508080610c199061207a565b915050610bab565b5084541490509392505050565b610c596040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083529192909190849084015b82821015610ce7578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610c8d565b5050505090508051600003610d0657610cfe61134b565b915050610663565b8060018251610d159190612093565b81518110610d2557610d25612064565b6020026020010151915050610663565b5092915050565b610d676040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03851660009081526020878152604080832081516080810183524281529283018890529082018690526060820185905291610da98989610c2e565b805190915042148015610dbc5750825415155b15610e2157825482908490610dd390600190612093565b81548110610de357610de3612064565b906000526020600020906004020160008201518160000155602082015181600101556040820151816002015560608201518160030155905050610e74565b6001600160a01b038816600090815260208a815260408083208054600181810183559185529383902086516004909502019384559185015191830191909155830151600282015560608301516003909101555b50979650505050505050565b610e8d60008484846113a7565b6001600160a01b03831660009081526004602052604081208190610eb19085611592565b91509150600082610ec25783610ecc565b610ecc848361203b565b6001600160a01b0387166000908152600460205260409020909150610ef29086836115aa565b50505050505050565b6000610663826115c8565b6000808080610f1586866115d3565b909450925050505b9250929050565b60008160600151610f46836040015184602001516115fe90919063ffffffff16565b61066391906120d5565b610f5d600084848461161d565b6001600160a01b0383166000908152600460205260408120610f7f9084611800565b9050818103610fb0576001600160a01b0384166000908152600460205260409020610faa9084611815565b50610a4b565b610fdd83610fbe8484612093565b6001600160a01b038716600090815260046020526040902091906115aa565b5050505050565b6001600160a01b0382166000908152602084815260408083208054825181850281018501909352808352849361108093929190859084015b8282101561107657838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061101c565b505050508461182a565b91505061108c81610f24565b95945050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156110ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561111857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036111f25760208301516040840151606085015160001a6111e687828585611870565b94509450505050610f1d565b50600090506002610f1d565b6000816004811115611212576112126120fd565b0361121a5750565b600181600481111561122e5761122e6120fd565b0361127b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102e5565b600281600481111561128f5761128f6120fd565b036112dc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102e5565b60038160048111156112f0576112f06120fd565b036113485760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102e5565b50565b6113766040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001670de0b6b3a764000081526020016000815250905090565b60006113b38585610c2e565b6001600160a01b0385166000908152600287016020908152604080832054908401519184015193945091926113e7916115fe565b6113f19190612093565b9050828110156114435760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e742062616c616e636520746f2064656c656761746560448201526064016102e5565b6001600160a01b03841660009081526003870160205260408120805485929061146d90849061203b565b90915550506001600160a01b03851660009081526002870160205260408120805485929061149c90849061203b565b90915550506001600160a01b0380861660009081526001880160209081526040808320938816835292905290812080548592906114da90849061203b565b9091555050602082015160408301516115039187916114f98a84611934565b8a93929190610d3c565b5060006115108786610c2e565b905061153d8582602001518360400151611533898c61193490919063ffffffff16565b8b93929190610d3c565b50604080516001600160a01b038089168252871660208201529081018590527fff825f9424124effc5ce1d9f4803d58ede8a2bda4da2324810f74834715c4c599060600160405180910390a150505050505050565b6000808080610f15866001600160a01b038716611966565b60006115c0846001600160a01b038516846119a0565b949350505050565b6000610663826119bd565b600080806115e185856119c7565b600081815260029690960160205260409095205494959350505050565b6000670de0b6b3a76400006116138385612113565b610a94919061212a565b6001600160a01b0380841660009081526001860160209081526040808320938616835292905220548111156116a65760405162461bcd60e51b815260206004820152602960248201527f7573657220686173206e6f742064656c65676174656420656e6f75676820746f6044820152682064656c656761746560b81b60648201526084016102e5565b6001600160a01b0382166000908152600385016020526040812080548392906116d0908490612093565b90915550506001600160a01b0383166000908152600285016020526040812080548392906116ff908490612093565b90915550506001600160a01b03808416600090815260018601602090815260408083209386168352929052908120805483929061173d908490612093565b909155506000905061174f8585610c2e565b905061177c8482602001518360400151611772888a61193490919063ffffffff16565b8993929190610d3c565b5060006117898685610c2e565b90506117ac84826020015183604001516114f9888b61193490919063ffffffff16565b50604080516001600160a01b038088168252861660208201529081018490527fde5aa493a93d4351631c1991a0aeecfd52d6b51cf1b61f1a3c48f97e268086539060600160405180910390a1505050505050565b6000610a94836001600160a01b0384166119d3565b6000610a94836001600160a01b038416611a43565b60006118576040518060800160405280600081526020016000815260200160008152602001600081525090565b611865848460008751611a60565b915091509250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118a7575060009050600361192b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156118fb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119245760006001925092505061192b565b9150600090505b94509492505050565b6001600160a01b038116600090815260028301602090815260408083205460038601909252822054610a94919061214c565b6000818152600283016020526040812054819080611995576119888585611bb2565b925060009150610f1d9050565b600192509050610f1d565b600082815260028401602052604081208290556115c08484611bbe565b6000610663825490565b6000610a948383611bca565b6000818152600283016020526040812054801515806119f757506119f78484611bb2565b610a945760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016102e5565b60008181526002830160205260408120819055610a948383611bf4565b6000611a8d6040518060800160405280600081526020016000815260200160008152602001600081525090565b828410611aa7576000611a9e61134b565b9150915061192b565b611ab18484612093565b600103611aff576000868581518110611acc57611acc612064565b602002602001015190508581600001511115611af1576000611aec61134b565b611af5565b6001815b925092505061192b565b60006002611b0d868661203b565b611b17919061212a565b9050600087611b27600184612093565b81518110611b3757611b37612064565b602002602001015190506000888381518110611b5557611b55612064565b6020026020010151905087826000015111158015611b735750805188105b15611b86575060019350915061192b9050565b80518810611ba657611b9a89898589611a60565b9450945050505061192b565b611b9a89898986611a60565b6000610a948383611c00565b6000610a948383611c18565b6000826000018281548110611be157611be1612064565b9060005260206000200154905092915050565b6000610a948383611c67565b60008181526001830160205260408120541515610a94565b6000818152600183016020526040812054611c5f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610663565b506000610663565b60008181526001830160205260408120548015611d50576000611c8b600183612093565b8554909150600090611c9f90600190612093565b9050818114611d04576000866000018281548110611cbf57611cbf612064565b9060005260206000200154905080876000018481548110611ce257611ce2612064565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d1557611d1561216c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610663565b6000915050610663565b80356001600160a01b0381168114611d7157600080fd5b919050565b80356001600160801b0381168114611d7157600080fd5b60008083601f840112611d9f57600080fd5b50813567ffffffffffffffff811115611db757600080fd5b6020830191508360208260051b8501011115610f1d57600080fd5b600080600080600080600060a0888a031215611ded57600080fd5b611df688611d5a565b9650611e0460208901611d5a565b9550611e1260408901611d76565b9450606088013567ffffffffffffffff80821115611e2f57600080fd5b611e3b8b838c01611d8d565b909650945060808a0135915080821115611e5457600080fd5b818a0191508a601f830112611e6857600080fd5b813581811115611e7757600080fd5b8b6020828501011115611e8957600080fd5b60208301945080935050505092959891949750929550565b600060208284031215611eb357600080fd5b610a9482611d5a565b602080825282518282018190526000919060409081850190868401855b82811015611f0757815180516001600160a01b03168552860151868501529284019290850190600101611ed9565b5091979650505050505050565b600080600060408486031215611f2957600080fd5b833567ffffffffffffffff811115611f4057600080fd5b611f4c86828701611d8d565b9094509250611f5f905060208501611d76565b90509250925092565b60005b83811015611f83578181015183820152602001611f6b565b50506000910152565b6020815260008251806020840152611fab816040850160208701611f68565b601f01601f19169190910160400192915050565b60008060408385031215611fd257600080fd5b611fdb83611d5a565b946020939093013593505050565b600080600060608486031215611ffe57600080fd5b61200784611d5a565b925061201560208501611d5a565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066357610663612025565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161208c5761208c612025565b5060010190565b8181038181111561066357610663612025565b600083516120b8818460208801611f68565b8351908301906120cc818360208801611f68565b01949350505050565b80820182811260008312801582168215821617156120f5576120f5612025565b505092915050565b634e487b7160e01b600052602160045260246000fd5b808202811582820484141761066357610663612025565b60008261214757634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610d3557610d35612025565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c5bd65586d3e71a2d9a40bbae48f9b1b80380349a4962117d434b063690b0cde64736f6c63430008110033", "bytecodeSha1": "26fad5e04e36f33ad6f9d76819cbd8db80154d94", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.17+commit.8df45f5f"}, "contractName": "FoundingMemberVault", "coverageMap": {"branches": {"10": {"ECDSA._throwError": {"93": [638, 667, false], "94": [734, 772, false], "95": [843, 887, false], "96": [965, 1004, false]}, "ECDSA.tryRecover": {"92": [2263, 2285, false], "97": [6106, 6185, false], "98": [6412, 6432, false]}}, "11": {"EIP712._domainSeparatorV4": {"99": [3228, 3257, false], "100": [3261, 3294, false]}}, "13": {}, "18": {"NFTVault.updateMultiplier": {"101": [211, 230, false]}}, "22": {"BaseDelegatingVault._delegateVote": {"90": [2111, 2117, true]}, "BaseDelegatingVault._undelegateVote": {"91": [2443, 2460, false]}}, "23": {}, "25": {"FoundingMemberVault.claimNFT": {"83": [1341, 1359, false], "84": [1363, 1382, true], "85": [1892, 1912, true], "86": [1953, 1972, true], "87": [2089, 2125, true], "88": [2489, 2511, false], "89": [2515, 2537, false]}}, "28": {"NFTVault.updateMultiplier": {"103": [1056, 1075, true], "104": [1130, 1150, true], "105": [1389, 1427, true], "106": [1534, 1573, true]}}, "31": {}, "37": {}, "46": {"Merkle.isProofValid": {"102": [477, 489, false]}}, "47": {}, "49": {"VotingPowerHistory._binarySearch": {"112": [3105, 3123, false], "113": [3192, 3214, false], "114": [3288, 3300, true], "115": [3521, 3540, false], "116": [3544, 3562, false], "117": [3624, 3643, false]}, "VotingPowerHistory.currentRecord": {"107": [2561, 2580, false]}, "VotingPowerHistory.delegateVote": {"110": [4202, 4231, true]}, "VotingPowerHistory.undelegateVote": {"111": [5106, 5146, true]}, "VotingPowerHistory.updateVotingPower": {"108": [1876, 1908, false], "109": [1912, 1931, false]}}, "9": {}}, "statements": {"10": {"ECDSA._throwError": {"54": [788, 822], "55": [903, 944], "56": [1020, 1064]}, "ECDSA.recover": {"31": [3837, 3855], "32": [3865, 3881]}, "ECDSA.toTypedDataHash": {"30": [8453, 8528]}, "ECDSA.tryRecover": {"52": [2739, 2771], "53": [2802, 2858], "74": [6201, 6252], "75": [6448, 6498], "76": [6519, 6556]}}, "11": {"EIP712._buildDomainSeparator": {"50": [3625, 3716]}, "EIP712._domainSeparatorV4": {"49": [3310, 3341], "51": [3372, 3443]}, "EIP712._hashTypedDataV4": {"29": [4444, 4506]}}, "13": {}, "18": {}, "22": {"BaseDelegatingVault._delegateVote": {"42": [1964, 2002], "43": [2155, 2199]}, "BaseDelegatingVault._undelegateVote": {"45": [2328, 2368], "46": [2476, 2512], "47": [2575, 2626]}, "BaseDelegatingVault.changeDelegate": {"22": [1200, 1250], "23": [1260, 1308]}, "BaseDelegatingVault.delegateVote": {"20": [869, 914]}, "BaseDelegatingVault.getDelegations": {"10": [1605, 1650], "11": [1774, 1829], "12": [1689, 1692], "13": [1849, 1867]}, "BaseDelegatingVault.undelegateVote": {"25": [1006, 1053]}}, "23": {"BaseVault.getCurrentRecord": {"9": [517, 554]}, "BaseVault.getRawVotingPower": {"21": [667, 717]}}, "25": {"FoundingMemberVault._encodeProof": {"26": [2811, 2862], "27": [2792, 2795], "28": [2882, 2906]}, "FoundingMemberVault.claimNFT": {"2": [1320, 1483], "3": [1884, 1934], "4": [1945, 1996], "5": [2081, 2143], "6": [2154, 2179], "7": [2298, 2474], "8": [2553, 2600]}, "FoundingMemberVault.getVaultType": {"1": [2991, 3009]}}, "28": {"NFTVault.getRawVotingPower": {"24": [747, 793]}, "NFTVault.getTotalRawVotingPower": {"0": [889, 911]}, "NFTVault.updateMultiplier": {"14": [1048, 1112], "15": [1122, 1188], "16": [1364, 1495], "17": [1509, 1635], "18": [1998, 2052], "19": [1233, 1236]}}, "31": {}, "37": {}, "46": {"Merkle.isProofValid": {"33": [491, 520], "34": [534, 581], "35": [383, 386], "36": [602, 627]}}, "47": {"ScaledMath.mulDown": {"65": [220, 240]}}, "49": {"VotingPowerHistory._binarySearch": {"78": [3139, 3167], "79": [3281, 3338], "80": [3578, 3603], "81": [3659, 3708], "82": [3739, 3790]}, "VotingPowerHistory.binarySearch": {"73": [2844, 2896]}, "VotingPowerHistory.currentRecord": {"37": [2596, 2615], "38": [2646, 2680]}, "VotingPowerHistory.delegateVote": {"58": [4181, 4289], "59": [4300, 4338], "60": [4348, 4390], "61": [4400, 4440], "62": [4451, 4632], "63": [4703, 4876], "64": [4887, 4924]}, "VotingPowerHistory.getVotingPower": {"48": [2336, 2357]}, "VotingPowerHistory.netDelegatedVotingPower": {"77": [6062, 6172]}, "VotingPowerHistory.total": {"44": [736, 898]}, "VotingPowerHistory.undelegateVote": {"66": [5085, 5213], "67": [5224, 5262], "68": [5272, 5314], "69": [5324, 5364], "70": [5440, 5621], "71": [5692, 5865], "72": [5876, 5915]}, "VotingPowerHistory.updateVotingPower": {"39": [1947, 1992], "40": [2023, 2062], "41": [2082, 2102]}, "VotingPowerHistory.zeroRecord": {"57": [462, 644]}}, "9": {}}}, "dependencies": ["BaseDelegatingVault", "BaseVault", "node_modules/@openzeppelin/ECDSA", "node_modules/@openzeppelin/EIP712", "IDelegatingVault", "IVault", "ImmutableOwner", "node_modules/@openzeppelin/Math", "Merkle", "NFTVault", "ScaledMath", "node_modules/@openzeppelin/Strings", "VotingPowerHistory"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610192578063926f7327146101d15780639f1acf08146101e4578063cead0481146101f7578063de1ec4031461020a578063e2fcf5501461021d57600080fd5b80630ddf940d146100b957806319ad0eba146100ce57806331cc13ba1461011d578063344ff1d01461013d57806371fbcca51461014f57806375baf37f14610162575b600080fd5b6100cc6100c7366004611dd2565b610230565b005b6100e16100dc366004611ea1565b61062d565b60405161011491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b61013061012b366004611ea1565b610669565b6040516101149190611ebc565b6005545b604051908152602001610114565b6100cc61015d366004611f14565b610764565b604080518082018252600e81526d2337bab73234b733a6b2b6b132b960911b602082015290516101149190611f8c565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6100cc6101df366004611fbf565b610a51565b6101416101f2366004611ea1565b610a60565b6100cc610205366004611fe9565b610a6c565b610141610218366004611fbf565b610a87565b6100cc61022b366004611fbf565b610a9b565b670de0b6b3a7640000856001600160801b03161015801561026357506801158e460913d00000856001600160801b031611155b6102ee5760405162461bcd60e51b815260206004820152604b60248201527f6d756c7469706c696572206d7573742062652067726561746572206f7220657160448201527f75616c207468616e203165313820616e64206c6f776572206f7220657175616c60648201526a040e8d0c2dc406460ca62760ab1b608482015260a4015b60405180910390fd5b60006103b17f000000000000000000000000000000000000000000000000000000000000000089338a8a6103548b8b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa692505050565b6040805160208101979097526001600160a01b03958616908701529284166060860152921660808401526001600160801b0390911660a083015260c082015260e00160405160208183030381529060405280519060200120610b34565b905060006103f58285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b8292505050565b9050886001600160a01b0316816001600160a01b03161461044c5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016102e5565b6001600160a01b03891660009081526006602052604090205460ff16156104ab5760405162461bcd60e51b815260206004820152601360248201527213919508185b1c9958591e4818db185a5b5959606a1b60448201526064016102e5565b6040516bffffffffffffffffffffffff1960608b901b1660208201526fffffffffffffffffffffffffffffffff19608089901b1660348201526000906044016040516020818303038152906040528051906020012090506105448188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060079493925050610ba69050565b6105805760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016102e5565b6001600160a01b038a166000908152600660205260408120805460ff191660011790556105ad8133610c2e565b90506105e533670de0b6b3a764000083602001516105cb919061203b565b606084015160009291906001600160801b038e1690610d3c565b506001600160a01b038a161580159061060757506001600160a01b038a163314155b1561062057610620338b8b6001600160801b0316610e80565b5050505050505050505050565b6106586040518060800160405280600081526020016000815260200160008152602001600081525090565b610663600083610c2e565b92915050565b6001600160a01b038116600090815260046020526040812060609161068d82610efb565b90508067ffffffffffffffff8111156106a8576106a861204e565b6040519080825280602002602001820160405280156106ed57816020015b60408051808201909152600080825260208201528152602001906001900390816106c65790505b50925060005b8181101561075c576000806107088584610f06565b915091506040518060400160405280836001600160a01b031681526020018281525086848151811061073c5761073c612064565b6020026020010181905250505080806107549061207a565b9150506106f3565b505050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107de5760405163c55ddc9760e01b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016102e5565b670de0b6b3a7640000816001600160801b0316101561083f5760405162461bcd60e51b815260206004820181905260248201527f6d756c7469706c6965722063616e6e6f74206265206c657373207468616e203160448201526064016102e5565b6801158e460913d00000816001600160801b031611156108ab5760405162461bcd60e51b815260206004820152602160248201527f6d756c7469706c6965722063616e6e6f74206265206d6f7265207468616e20326044820152600360fc1b60648201526084016102e5565b60005b82811015610a4b5760006108ea8585848181106108cd576108cd612064565b90506020020160208101906108e29190611ea1565b600090610c2e565b9050670de0b6b3a7640000816020015110156109535760405162461bcd60e51b815260206004820152602260248201527f616c6c207573657273206d7573742068617665206174206c656173742031204e604482015261119560f21b60648201526084016102e5565b826001600160801b03168160400151106109af5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520766f74696e6720706f7765720000000060448201526064016102e5565b60006109ba82610f24565b90506000610a078787868181106109d3576109d3612064565b90506020020160208101906109e89190611ea1565b6020850151606086015160009291906001600160801b038a1690610d3c565b905081610a1382610f24565b610a1d9190612093565b60056000828254610a2e919061203b565b925050819055505050508080610a439061207a565b9150506108ae565b50505050565b610a5c338383610e80565b5050565b60006106638242610a87565b610a77338483610f50565b610a82338383610e80565b505050565b6000610a94818484610fe4565b9392505050565b610a5c338383610f50565b6000606060005b8351811015610b255781848281518110610ac957610ac9612064565b6020026020010151604051602001610ae391815260200190565b60408051601f1981840301815290829052610b0192916020016120a6565b60405160208183030381529060405291508080610b1d9061207a565b915050610aad565b50805160209091012092915050565b6000610663610b41611095565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b9185856111bc565b91509150610b9e816111fe565b509392505050565b600082815b8351811015610c215760008083868481518110610bca57610bca612064565b60200260200101519150915080821115610be057905b604080516020810184905290810182905260600160405160208183030381529060405280519060200120935050508080610c199061207a565b915050610bab565b5084541490509392505050565b610c596040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083529192909190849084015b82821015610ce7578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610c8d565b5050505090508051600003610d0657610cfe61134b565b915050610663565b8060018251610d159190612093565b81518110610d2557610d25612064565b6020026020010151915050610663565b5092915050565b610d676040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03851660009081526020878152604080832081516080810183524281529283018890529082018690526060820185905291610da98989610c2e565b805190915042148015610dbc5750825415155b15610e2157825482908490610dd390600190612093565b81548110610de357610de3612064565b906000526020600020906004020160008201518160000155602082015181600101556040820151816002015560608201518160030155905050610e74565b6001600160a01b038816600090815260208a815260408083208054600181810183559185529383902086516004909502019384559185015191830191909155830151600282015560608301516003909101555b50979650505050505050565b610e8d60008484846113a7565b6001600160a01b03831660009081526004602052604081208190610eb19085611592565b91509150600082610ec25783610ecc565b610ecc848361203b565b6001600160a01b0387166000908152600460205260409020909150610ef29086836115aa565b50505050505050565b6000610663826115c8565b6000808080610f1586866115d3565b909450925050505b9250929050565b60008160600151610f46836040015184602001516115fe90919063ffffffff16565b61066391906120d5565b610f5d600084848461161d565b6001600160a01b0383166000908152600460205260408120610f7f9084611800565b9050818103610fb0576001600160a01b0384166000908152600460205260409020610faa9084611815565b50610a4b565b610fdd83610fbe8484612093565b6001600160a01b038716600090815260046020526040902091906115aa565b5050505050565b6001600160a01b0382166000908152602084815260408083208054825181850281018501909352808352849361108093929190859084015b8282101561107657838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061101c565b505050508461182a565b91505061108c81610f24565b95945050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156110ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561111857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036111f25760208301516040840151606085015160001a6111e687828585611870565b94509450505050610f1d565b50600090506002610f1d565b6000816004811115611212576112126120fd565b0361121a5750565b600181600481111561122e5761122e6120fd565b0361127b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102e5565b600281600481111561128f5761128f6120fd565b036112dc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102e5565b60038160048111156112f0576112f06120fd565b036113485760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102e5565b50565b6113766040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001670de0b6b3a764000081526020016000815250905090565b60006113b38585610c2e565b6001600160a01b0385166000908152600287016020908152604080832054908401519184015193945091926113e7916115fe565b6113f19190612093565b9050828110156114435760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e742062616c616e636520746f2064656c656761746560448201526064016102e5565b6001600160a01b03841660009081526003870160205260408120805485929061146d90849061203b565b90915550506001600160a01b03851660009081526002870160205260408120805485929061149c90849061203b565b90915550506001600160a01b0380861660009081526001880160209081526040808320938816835292905290812080548592906114da90849061203b565b9091555050602082015160408301516115039187916114f98a84611934565b8a93929190610d3c565b5060006115108786610c2e565b905061153d8582602001518360400151611533898c61193490919063ffffffff16565b8b93929190610d3c565b50604080516001600160a01b038089168252871660208201529081018590527fff825f9424124effc5ce1d9f4803d58ede8a2bda4da2324810f74834715c4c599060600160405180910390a150505050505050565b6000808080610f15866001600160a01b038716611966565b60006115c0846001600160a01b038516846119a0565b949350505050565b6000610663826119bd565b600080806115e185856119c7565b600081815260029690960160205260409095205494959350505050565b6000670de0b6b3a76400006116138385612113565b610a94919061212a565b6001600160a01b0380841660009081526001860160209081526040808320938616835292905220548111156116a65760405162461bcd60e51b815260206004820152602960248201527f7573657220686173206e6f742064656c65676174656420656e6f75676820746f6044820152682064656c656761746560b81b60648201526084016102e5565b6001600160a01b0382166000908152600385016020526040812080548392906116d0908490612093565b90915550506001600160a01b0383166000908152600285016020526040812080548392906116ff908490612093565b90915550506001600160a01b03808416600090815260018601602090815260408083209386168352929052908120805483929061173d908490612093565b909155506000905061174f8585610c2e565b905061177c8482602001518360400151611772888a61193490919063ffffffff16565b8993929190610d3c565b5060006117898685610c2e565b90506117ac84826020015183604001516114f9888b61193490919063ffffffff16565b50604080516001600160a01b038088168252861660208201529081018490527fde5aa493a93d4351631c1991a0aeecfd52d6b51cf1b61f1a3c48f97e268086539060600160405180910390a1505050505050565b6000610a94836001600160a01b0384166119d3565b6000610a94836001600160a01b038416611a43565b60006118576040518060800160405280600081526020016000815260200160008152602001600081525090565b611865848460008751611a60565b915091509250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118a7575060009050600361192b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156118fb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119245760006001925092505061192b565b9150600090505b94509492505050565b6001600160a01b038116600090815260028301602090815260408083205460038601909252822054610a94919061214c565b6000818152600283016020526040812054819080611995576119888585611bb2565b925060009150610f1d9050565b600192509050610f1d565b600082815260028401602052604081208290556115c08484611bbe565b6000610663825490565b6000610a948383611bca565b6000818152600283016020526040812054801515806119f757506119f78484611bb2565b610a945760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016102e5565b60008181526002830160205260408120819055610a948383611bf4565b6000611a8d6040518060800160405280600081526020016000815260200160008152602001600081525090565b828410611aa7576000611a9e61134b565b9150915061192b565b611ab18484612093565b600103611aff576000868581518110611acc57611acc612064565b602002602001015190508581600001511115611af1576000611aec61134b565b611af5565b6001815b925092505061192b565b60006002611b0d868661203b565b611b17919061212a565b9050600087611b27600184612093565b81518110611b3757611b37612064565b602002602001015190506000888381518110611b5557611b55612064565b6020026020010151905087826000015111158015611b735750805188105b15611b86575060019350915061192b9050565b80518810611ba657611b9a89898589611a60565b9450945050505061192b565b611b9a89898986611a60565b6000610a948383611c00565b6000610a948383611c18565b6000826000018281548110611be157611be1612064565b9060005260206000200154905092915050565b6000610a948383611c67565b60008181526001830160205260408120541515610a94565b6000818152600183016020526040812054611c5f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610663565b506000610663565b60008181526001830160205260408120548015611d50576000611c8b600183612093565b8554909150600090611c9f90600190612093565b9050818114611d04576000866000018281548110611cbf57611cbf612064565b9060005260206000200154905080876000018481548110611ce257611ce2612064565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d1557611d1561216c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610663565b6000915050610663565b80356001600160a01b0381168114611d7157600080fd5b919050565b80356001600160801b0381168114611d7157600080fd5b60008083601f840112611d9f57600080fd5b50813567ffffffffffffffff811115611db757600080fd5b6020830191508360208260051b8501011115610f1d57600080fd5b600080600080600080600060a0888a031215611ded57600080fd5b611df688611d5a565b9650611e0460208901611d5a565b9550611e1260408901611d76565b9450606088013567ffffffffffffffff80821115611e2f57600080fd5b611e3b8b838c01611d8d565b909650945060808a0135915080821115611e5457600080fd5b818a0191508a601f830112611e6857600080fd5b813581811115611e7757600080fd5b8b6020828501011115611e8957600080fd5b60208301945080935050505092959891949750929550565b600060208284031215611eb357600080fd5b610a9482611d5a565b602080825282518282018190526000919060409081850190868401855b82811015611f0757815180516001600160a01b03168552860151868501529284019290850190600101611ed9565b5091979650505050505050565b600080600060408486031215611f2957600080fd5b833567ffffffffffffffff811115611f4057600080fd5b611f4c86828701611d8d565b9094509250611f5f905060208501611d76565b90509250925092565b60005b83811015611f83578181015183820152602001611f6b565b50506000910152565b6020815260008251806020840152611fab816040850160208701611f68565b601f01601f19169190910160400192915050565b60008060408385031215611fd257600080fd5b611fdb83611d5a565b946020939093013593505050565b600080600060608486031215611ffe57600080fd5b61200784611d5a565b925061201560208501611d5a565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066357610663612025565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161208c5761208c612025565b5060010190565b8181038181111561066357610663612025565b600083516120b8818460208801611f68565b8351908301906120cc818360208801611f68565b01949350505050565b80820182811260008312801582168215821617156120f5576120f5612025565b505092915050565b634e487b7160e01b600052602160045260246000fd5b808202811582820484141761066357610663612025565b60008261214757634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610d3557610d35612025565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c5bd65586d3e71a2d9a40bbae48f9b1b80380349a4962117d434b063690b0cde64736f6c63430008110033", "deployedSourceMap": "391:2627:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:1488;;;;;;:::i;:::-;;:::i;:::-;;393:168:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;2296:13:50;;2278:32;;2366:4;2354:17;;;2348:24;2326:20;;;2319:54;2429:4;2417:17;;;2411:24;2389:20;;;2382:54;2492:4;2480:17;;;2474:24;2452:20;;;2445:54;;;;2265:3;2250:19;;2083:422;393:168:23;;;;;;;;1321:553:22;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;806:112:28:-;896:15;;806:112;;;3481:25:50;;;3469:2;3454:18;806:112:28;3335:177:50;924:1145:28;;;;;;:::i;:::-;;:::i;2919:97:25:-;2998:11;;;;;;;;;;;-1:-1:-1;;;2998:11:25;;;;2919:97;;;;2998:11;2919:97;:::i;139:30:18:-;;;;;;;;-1:-1:-1;;;;;4853:32:50;;;4835:51;;4823:2;4808:18;139:30:18;4689:203:50;792:129:22;;;;;;:::i;:::-;;:::i;567:157:23:-;;;;;;:::i;:::-;;:::i;1066:249:22:-;;;;;;:::i;:::-;;:::i;616:184:28:-;;;;;;:::i;:::-;;:::i;927:133:22:-;;;;;;:::i;:::-;;:::i;1129:1488:25:-;1355:4;1341:10;-1:-1:-1;;;;;1341:18:25;;;:41;;;;;1377:5;1363:10;-1:-1:-1;;;;;1363:19:25;;;1341:41;1320:163;;;;-1:-1:-1;;;1320:163:25;;5691:2:50;1320:163:25;;;5673:21:50;5730:2;5710:18;;;5703:30;5769:34;5749:18;;;5742:62;5840:34;5820:18;;;5813:62;-1:-1:-1;;;5891:19:50;;;5884:42;5943:19;;1320:163:25;;;;;;;;;1494:12;1509:306;1598:10;1630:8;1660:10;1692:8;1722:10;1754:19;1767:5;;1754:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1754:12:25;;-1:-1:-1;;;1754:19:25:i;:::-;1566:225;;;;;;6260:25:50;;;;-1:-1:-1;;;;;6359:15:50;;;6339:18;;;6332:43;6411:15;;;6391:18;;;6384:43;6463:15;;6443:18;;;6436:43;-1:-1:-1;;;;;6516:47:50;;;6495:19;;;6488:76;6580:19;;;6573:35;6232:19;;1566:225:25;;;;;;;;;;;;1539:266;;;;;;1509:16;:306::i;:::-;1494:321;;1825:16;1844:30;1858:4;1864:9;;1844:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1844:13:25;;-1:-1:-1;;;1844:30:25:i;:::-;1825:49;;1904:8;-1:-1:-1;;;;;1892:20:25;:8;-1:-1:-1;;;;;1892:20:25;;1884:50;;;;-1:-1:-1;;;1884:50:25;;6821:2:50;1884:50:25;;;6803:21:50;6860:2;6840:18;;;6833:30;-1:-1:-1;;;6879:18:50;;;6872:47;6936:18;;1884:50:25;6619:341:50;1884:50:25;-1:-1:-1;;;;;1954:18:25;;;;;;:8;:18;;;;;;;;1953:19;1945:51;;;;-1:-1:-1;;;1945:51:25;;7167:2:50;1945:51:25;;;7149:21:50;7206:2;7186:18;;;7179:30;-1:-1:-1;;;7225:18:50;;;7218:49;7284:18;;1945:51:25;6965:343:50;1945:51:25;2032:38;;-1:-1:-1;;7490:2:50;7486:15;;;7482:53;2032:38:25;;;7470:66:50;-1:-1:-1;;7574:3:50;7570:16;;;7566:62;7552:12;;;7545:84;2007:12:25;;7645::50;;2032:38:25;;;;;;;;;;;;2022:49;;;;;;2007:64;;2089:36;2113:4;2119:5;;2089:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2089:10:25;;:36;;-1:-1:-1;;2089:23:25;:36;-1:-1:-1;2089:36:25:i;:::-;2081:62;;;;-1:-1:-1;;;2081:62:25;;7870:2:50;2081:62:25;;;7852:21:50;7909:2;7889:18;;;7882:30;-1:-1:-1;;;7928:18:50;;;7921:43;7981:18;;2081:62:25;7668:337:50;2081:62:25;-1:-1:-1;;;;;2154:18:25;;;;;;:8;:18;;;;;:25;;-1:-1:-1;;2154:25:25;2175:4;2154:25;;;2233:55;2154:18;2268:10;2233:21;:55::i;:::-;2190:98;;2298:176;2337:10;128:4:47;2361:7:25;:23;;;:40;;;;:::i;:::-;2439:25;;;;2298:7;;:176;;-1:-1:-1;;;;;2298:176:25;;;:25;:176::i;:::-;-1:-1:-1;;;;;;2489:22:25;;;;;;:48;;-1:-1:-1;;;;;;2515:22:25;;2527:10;2515:22;;2489:48;2485:126;;;2553:47;2567:10;2579:8;2589:10;-1:-1:-1;;;;;2553:47:25;:13;:47::i;:::-;1310:1307;;;;1129:1488;;;;;;;:::o;393:168:23:-;473:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:32:23;524:30;:7;546;524:21;:30::i;:::-;517:37;393:168;-1:-1:-1;;393:168:23:o;1321:553:22:-;-1:-1:-1;;;;;1503:50:22;;1452:48;1503:50;;;:19;:50;;;;;1399:41;;1577:18;1503:50;1577:16;:18::i;:::-;1563:32;;1646:3;1619:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1619:31:22;;;;;;;;;;;;;;;;1605:45;;1665:9;1660:180;1684:3;1680:1;:7;1660:180;;;1709:16;;1745:15;:9;1758:1;1745:12;:15::i;:::-;1708:52;;;;1791:38;;;;;;;;1812:8;-1:-1:-1;;;;;1791:38:22;;;;;1822:6;1791:38;;;1774:11;1786:1;1774:14;;;;;;;;:::i;:::-;;;;;;:55;;;;1694:146;;1689:3;;;;;:::i;:::-;;;;1660:180;;;;1849:18;;1321:553;;;:::o;924:1145:28:-;211:10:18;-1:-1:-1;;;;;225:5:18;211:19;;207:71;;239:39;;-1:-1:-1;;;239:39:18;;260:10;239:39;;;8888:34:50;-1:-1:-1;;;;;272:5:18;8958:15:50;8938:18;;;8931:43;8823:18;;239:39:18;8676:304:50;207:71:18;1071:4:28::1;1056:11;-1:-1:-1::0;;;;;1056:19:28::1;;;1048:64;;;::::0;-1:-1:-1;;;1048:64:28;;9187:2:50;1048:64:28::1;::::0;::::1;9169:21:50::0;;;9206:18;;;9199:30;9265:34;9245:18;;;9238:62;9317:18;;1048:64:28::1;8985:356:50::0;1048:64:28::1;1145:5;1130:11;-1:-1:-1::0;;;;;1130:20:28::1;;;1122:66;;;::::0;-1:-1:-1;;;1122:66:28;;9548:2:50;1122:66:28::1;::::0;::::1;9530:21:50::0;9587:2;9567:18;;;9560:30;9626:34;9606:18;;;9599:62;-1:-1:-1;;;9677:18:50;;;9670:31;9718:19;;1122:66:28::1;9346:397:50::0;1122:66:28::1;1203:6;1198:865;1215:16:::0;;::::1;1198:865;;;1252:47;1302:48;1341:5;;1347:1;1341:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1302:7;::::0;:38:::1;:48::i;:::-;1252:98;;1423:4;1389:14;:30;;;:38;;1364:131;;;::::0;-1:-1:-1;;;1364:131:28;;9950:2:50;1364:131:28::1;::::0;::::1;9932:21:50::0;9989:2;9969:18;;;9962:30;10028:34;10008:18;;;10001:62;-1:-1:-1;;;10079:18:50;;;10072:32;10121:19;;1364:131:28::1;9748:398:50::0;1364:131:28::1;1562:11;-1:-1:-1::0;;;;;1534:39:28::1;:14;:25;;;:39;1509:126;;;::::0;-1:-1:-1;;;1509:126:28;;10353:2:50;1509:126:28::1;::::0;::::1;10335:21:50::0;10392:2;10372:18;;;10365:30;10431;10411:18;;;10404:58;10479:18;;1509:126:28::1;10151:352:50::0;1509:126:28::1;1650:16;1669:22;:14;:20;:22::i;:::-;1650:41;;1705:47;1755:229;1819:5;;1825:1;1819:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1849:30;::::0;::::1;::::0;1934:32:::1;::::0;::::1;::::0;1755:7:::1;::::0;:229;1849:30;-1:-1:-1;;;;;1755:229:28;::::1;::::0;:42:::1;:229::i;:::-;1705:279;;2043:8;2018:22;:14;:20;:22::i;:::-;:33;;;;:::i;:::-;1998:15;;:54;;;;;;;:::i;:::-;;;;;;;;1238:825;;;1233:3;;;;;:::i;:::-;;;;1198:865;;;;924:1145:::0;;;:::o;792:129:22:-;869:45;883:10;895:9;906:7;869:13;:45::i;:::-;792:129;;:::o;567:157:23:-;648:7;674:43;692:7;701:15;674:17;:43::i;1066:249:22:-;1200:50;1216:10;1228:12;1242:7;1200:15;:50::i;:::-;1260:48;1274:10;1286:12;1300:7;1260:13;:48::i;:::-;1066:249;;;:::o;616:184:28:-;728:7;754:39;728:7;777:4;783:9;754:22;:39::i;:::-;747:46;616:184;-1:-1:-1;;;616:184:28:o;927:133:22:-;1006:47;1022:10;1034:9;1045:7;1006:15;:47::i;2623:290:25:-;2706:7;2725:19;2759:9;2754:119;2778:5;:12;2774:1;:16;2754:119;;;2833:6;2852:5;2858:1;2852:8;;;;;;;;:::i;:::-;;;;;;;2841:20;;;;;;3481:25:50;;3469:2;3454:18;;3335:177;2841:20:25;;;;-1:-1:-1;;2841:20:25;;;;;;;;;;2820:42;;;2841:20;2820:42;;:::i;:::-;;;;;;;;;;;;;2811:51;;2792:3;;;;;:::i;:::-;;;;2754:119;;;-1:-1:-1;2889:17:25;;;;;;;;2623:290;-1:-1:-1;;2623:290:25:o;4348:165:11:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:10;;-1:-1:-1;;;8470:57:10;;;12051:27:50;12094:11;;;12087:27;;;12130:12;;;12123:28;;;8434:7:10;;12167:12:50;;8470:57:10;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;3661:227;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:10;3661:227;-1:-1:-1;;;3661:227:10:o;140:494:46:-;286:4;317:9;286:4;336:256;360:14;:21;356:1;:25;336:256;;;403:12;417:13;435:4;441:14;456:1;441:17;;;;;;;;:::i;:::-;;;;;;;402:57;;;;484:5;477:4;:12;473:47;;;508:5;473:47;551:29;;;;;;11477:19:50;;;11512:12;;;11505:28;;;11549:12;;551:29:46;;;;;;;;;;;;541:40;;;;;;534:47;;388:204;;383:3;;;;;:::i;:::-;;;;336:256;;;-1:-1:-1;617:10:46;;609:18;;-1:-1:-1;140:494:46;;;;;:::o;2370:327:49:-;2477:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:13:49;-1:-1:-1;;;;;2528:19:49;;2502:23;2528:19;;;;;;;;;;;2502:45;;;;;;;;;;;;;;;;;;;2528:19;;2502:45;:23;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:7;:14;2579:1;2561:19;2557:134;;2603:12;:10;:12::i;:::-;2596:19;;;;;2557:134;2653:7;2678:1;2661:7;:14;:18;;;;:::i;:::-;2653:27;;;;;;;;:::i;:::-;;;;;;;2646:34;;;;;2557:134;2492:205;2370:327;;;;:::o;1302:807::-;1503:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1503:13:49;-1:-1:-1;;;;;1556:19:49;;1528:25;1556:19;;;;;;;;;;;1615:183;;;;;;;1640:15;1615:183;;;;;;;;;;;;;;;;;;;;1556:19;1835:27;1556:7;1570:4;1835:21;:27::i;:::-;1876:13;;1808:54;;-1:-1:-1;1893:15:49;1876:32;:55;;;;-1:-1:-1;1912:15:49;;:19;;1876:55;1872:201;;;1956:15;;1979:13;;1947:8;;1956:19;;1974:1;;1956:19;:::i;:::-;1947:29;;;;;;;;:::i;:::-;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:201;;;-1:-1:-1;;;;;2023:19:49;;:13;:19;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:201;-1:-1:-1;2089:13:49;1302:807;-1:-1:-1;;;;;;;1302:807:49:o;1880:326:22:-;1964:38;:7;1985:4;1991:2;1995:6;1964:20;:38::i;:::-;-1:-1:-1;;;;;2045:25:22;;2013:11;2045:25;;;:19;:25;;;;;2013:11;;2045:36;;2078:2;2045:32;:36::i;:::-;2012:69;;;;2091:17;2111:6;:34;;2139:6;2111:34;;;2120:16;2130:6;2120:7;:16;:::i;:::-;-1:-1:-1;;;;;2155:25:22;;;;;;:19;:25;;;;;2091:54;;-1:-1:-1;2155:44:22;;2185:2;2091:54;2155:29;:44::i;:::-;;1954:252;;;1880:326;;;:::o;12614:120:14:-;12683:7;12709:18;12716:3;12709:6;:18::i;13071:232::-;13151:7;;;;13210:21;13213:3;13225:5;13210:2;:21::i;:::-;13179:52;;-1:-1:-1;13179:52:14;-1:-1:-1;;;13071:232:14;;;;;;:::o;657:248:49:-;717:7;860:6;:24;;;787:49;818:6;:17;;;787:6;:22;;;:30;;:49;;;;:::i;:::-;780:104;;;;:::i;2212:431:22:-;2328:40;:7;2351:4;2357:2;2361:6;2328:22;:40::i;:::-;-1:-1:-1;;;;;2396:25:22;;2378:15;2396:25;;;:19;:25;;;;;:33;;2426:2;2396:29;:33::i;:::-;2378:51;;2454:6;2443:7;:17;2439:198;;-1:-1:-1;;;;;2476:25:22;;;;;;:19;:25;;;;;:36;;2509:2;2476:32;:36::i;:::-;;2439:198;;;2575:51;2605:2;2609:16;2619:6;2609:7;:16;:::i;:::-;-1:-1:-1;;;;;2575:25:22;;;;;;:19;:25;;;;;;:51;:29;:51::i;:::-;;2318:325;2212:431;;;:::o;2115:249:49:-;-1:-1:-1;;;;;2302:19:49;;2243:7;2302:19;;;;;;;;;;;2289:37;;;;;;;;;;;;;;;;;2243:7;;2289:37;;;2302:19;2289:37;2243:7;;2289:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2323:2;2289:12;:37::i;:::-;2262:64;;;2343:14;:6;:12;:14::i;:::-;2336:21;2115:249;-1:-1:-1;;;;;2115:249:49:o;3152:308:11:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:11;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:11;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:11;;;3401:10;3642:73;;;;15243:25:50;;;;3413:12:11;15284:18:50;;;15277:34;3427:15:11;15327:18:50;;;15320:34;3686:13:11;15370:18:50;;;15363:34;3709:4:11;15413:19:50;;;;15406:61;;;;3642:73:11;;;;;;;;;;15215:19:50;;;;3642:73:11;;;3632:84;;;;;;3152:308::o;2145:730:10:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:10;;-1:-1:-1;2822:35:10;2802:56;;570:511;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:10;;12524:2:50;788:34:10;;;12506:21:50;12563:2;12543:18;;;12536:30;12602:26;12582:18;;;12575:54;12646:18;;788:34:10;12322:348:50;730:345:10;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:10;;12877:2:50;903:41:10;;;12859:21:50;12916:2;12896:18;;;12889:30;12955:33;12935:18;;;12928:61;13006:18;;903:41:10;12675:355:50;839:236:10;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:10;;13237:2:50;1020:44:10;;;13219:21:50;13276:2;13256:18;;;13249:30;13315:34;13295:18;;;13288:62;-1:-1:-1;;;13366:18:50;;;13359:32;13408:19;;1020:44:10;13035:398:50;961:114:10;570:511;:::o;392:259:49:-;437:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;437:13:49;481:163;;;;;;;;510:1;481:163;;;;546:1;481:163;;;;128:4:47;481:163:49;;;;628:1;481:163;;;462:182;;392:259;:::o;3813:1118::-;3959:25;3987:27;:7;4009:4;3987:21;:27::i;:::-;-1:-1:-1;;;;;4139:32:49;;4025:27;4139:32;;;:26;;;:32;;;;;;;;;4104:22;;;;4055:27;;;;3959:55;;-1:-1:-1;4025:27:49;;4055:81;;:35;:81::i;:::-;:116;;;;:::i;:::-;4025:146;;4225:6;4202:19;:29;;4181:108;;;;-1:-1:-1;;;4181:108:49;;13640:2:50;4181:108:49;;;13622:21:50;;;13659:18;;;13652:30;13718:34;13698:18;;;13691:62;13770:18;;4181:108:49;13438:356:50;4181:108:49;-1:-1:-1;;;;;4300:28:49;;;;;;:24;;;:28;;;;;:38;;4332:6;;4300:28;:38;;4332:6;;4300:38;:::i;:::-;;;;-1:-1:-1;;;;;;;4348:32:49;;;;;;:26;;;:32;;;;;:42;;4384:6;;4348:32;:42;;4384:6;;4348:42;:::i;:::-;;;;-1:-1:-1;;;;;;;4400:26:49;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;;:40;;4434:6;;4400:26;:40;;4434:6;;4400:40;:::i;:::-;;;;-1:-1:-1;;4508:27:49;;;;4549:22;;;;4451:181;;4490:4;;4585:37;:7;4490:4;4585:31;:37::i;:::-;4451:7;;:181;;;:25;:181::i;:::-;-1:-1:-1;4642:23:49;4668:25;:7;4690:2;4668:21;:25::i;:::-;4642:51;;4703:173;4742:2;4758:9;:25;;;4797:9;:20;;;4831:35;4863:2;4831:7;:31;;:35;;;;:::i;:::-;4703:7;;:173;;;:25;:173::i;:::-;-1:-1:-1;4892:32:49;;;-1:-1:-1;;;;;14057:15:50;;;14039:34;;14109:15;;14104:2;14089:18;;14082:43;14141:18;;;14134:34;;;4892:32:49;;13989:2:50;13974:18;4892:32:49;;;;;;;3949:982;;;3813:1118;;;;:::o;13444:238:14:-;13526:4;;;;13583:50;13590:3;-1:-1:-1;;;;;13610:21:14;;13583:6;:50::i;11758:212::-;11877:4;11900:63;11904:3;-1:-1:-1;;;;;11924:21:14;;11956:5;11900:3;:63::i;:::-;11893:70;11758:212;-1:-1:-1;;;;11758:212:14:o;3380:123::-;3452:7;3478:18;:3;:16;:18::i;3856:191::-;3939:7;;;3981:19;:3;3994:5;3981:12;:19::i;:::-;4023:16;;;;:11;;;;;:16;;;;;;;;;3856:191;-1:-1:-1;;;;3856:191:14:o;139:108:47:-;201:7;128:4;228:5;232:1;228;:5;:::i;:::-;227:13;;;;:::i;4937:985:49:-;-1:-1:-1;;;;;5106:26:49;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;:40;-1:-1:-1;5106:40:49;5085:128;;;;-1:-1:-1;;;5085:128:49;;14776:2:50;5085:128:49;;;14758:21:50;14815:2;14795:18;;;14788:30;14854:34;14834:18;;;14827:62;-1:-1:-1;;;14905:18:50;;;14898:39;14954:19;;5085:128:49;14574:405:50;5085:128:49;-1:-1:-1;;;;;5224:28:49;;;;;;:24;;;:28;;;;;:38;;5256:6;;5224:28;:38;;5256:6;;5224:38;:::i;:::-;;;;-1:-1:-1;;;;;;;5272:32:49;;;;;;:26;;;:32;;;;;:42;;5308:6;;5272:32;:42;;5308:6;;5272:42;:::i;:::-;;;;-1:-1:-1;;;;;;;5324:26:49;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;;:40;;5358:6;;5324:26;:40;;5358:6;;5324:40;:::i;:::-;;;;-1:-1:-1;5375:25:49;;-1:-1:-1;5403:27:49;:7;5425:4;5403:21;:27::i;:::-;5375:55;;5440:181;5479:4;5497:11;:27;;;5538:11;:22;;;5574:37;5606:4;5574:7;:31;;:37;;;;:::i;:::-;5440:7;;:181;;;:25;:181::i;:::-;-1:-1:-1;5631:23:49;5657:25;:7;5679:2;5657:21;:25::i;:::-;5631:51;;5692:173;5731:2;5747:9;:25;;;5786:9;:20;;;5820:35;5852:2;5820:7;:31;;:35;;;;:::i;5692:173::-;-1:-1:-1;5881:34:49;;;-1:-1:-1;;;;;14057:15:50;;;14039:34;;14109:15;;14104:2;14089:18;;14082:43;14141:18;;;14134:34;;;5881::49;;13989:2:50;13974:18;5881:34:49;;;;;;;5075:847;;4937:985;;;;:::o;13833:168:14:-;13912:7;13946:47;13950:3;-1:-1:-1;;;;;13970:21:14;;13946:3;:47::i;12129:157::-;12206:4;12229:50;12236:3;-1:-1:-1;;;;;12256:21:14;;12229:6;:50::i;2703:200:49:-;2807:10;2819:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:13:49;2851:45;2865:7;2874:2;2878:1;2881:7;:14;2851:13;:45::i;:::-;2844:52;;;;2703:200;;;;;:::o;5069:1494:10:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:10;;-1:-1:-1;6221:30:10;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;15705:25:50;;;15778:4;15766:17;;15746:18;;;15739:45;;;;15800:18;;;15793:34;;;15843:18;;;15836:34;;;6374:24:10;;15677:19:50;;6374:24:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:10;;-1:-1:-1;;6374:24:10;;;-1:-1:-1;;;;;;;6412:20:10;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:10;;-1:-1:-1;5069:1494:10;;;;;;;;:::o;5928:251:49:-;-1:-1:-1;;;;;6140:31:49;;6044:6;6140:31;;;:26;;;:31;;;;;;;;;6088:24;;;:29;;;;;;6081:91;;6140:31;6081:91;:::i;4188:298:14:-;4273:4;4314:16;;;:11;;;:16;;;;;;4273:4;;4314:16;4340:140;;4387:18;4396:3;4401;4387:8;:18::i;:::-;4379:39;-1:-1:-1;4415:1:14;;-1:-1:-1;4379:39:14;;-1:-1:-1;4379:39:14;4340:140;4457:4;;-1:-1:-1;4463:5:14;-1:-1:-1;4449:20:14;;2535:204;2657:4;2673:16;;;:11;;;:16;;;;;:24;;;2714:18;2673:3;2685;2714:13;:18::i;6631:115:15:-;6694:7;6720:19;6728:3;4537:18;;4455:107;7088:129;7162:7;7188:22;7192:3;7204:5;7188:3;:22::i;4637:247:14:-;4719:7;4754:16;;;:11;;;:16;;;;;;4788:10;;;;:32;;;4802:18;4811:3;4816;4802:8;:18::i;:::-;4780:75;;;;-1:-1:-1;;;4780:75:14;;16288:2:50;4780:75:14;;;16270:21:50;16327:2;16307:18;;;16300:30;16366:32;16346:18;;;16339:60;16416:18;;4780:75:14;16086:354:50;2907:164:14;2987:4;3010:16;;;:11;;;:16;;;;;3003:23;;;3043:21;3010:3;3022;3043:16;:21::i;2909:898:49:-;3064:10;3076:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3076:13:49;3117:6;3105:8;:18;3101:77;;3147:5;3154:12;:10;:12::i;:::-;3139:28;;;;;;3101:77;3192:17;3201:8;3192:6;:17;:::i;:::-;3213:1;3192:22;3188:161;;3230:17;3250:7;3258:8;3250:17;;;;;;;;:::i;:::-;;;;;;;3230:37;;3298:2;3288:3;:6;;;:12;;:50;;3318:5;3325:12;:10;:12::i;:::-;3288:50;;;3304:4;3310:3;3288:50;3281:57;;;;;;;3188:161;3359:14;3398:1;3377:17;3386:8;3377:6;:17;:::i;:::-;3376:23;;;;:::i;:::-;3359:40;-1:-1:-1;3409:24:49;3436:7;3444:10;3453:1;3359:40;3444:10;:::i;:::-;3436:19;;;;;;;;:::i;:::-;;;;;;;3409:46;;3465:24;3492:7;3500:6;3492:15;;;;;;;;:::i;:::-;;;;;;;3465:42;;3538:2;3521:10;:13;;;:19;;:41;;;;-1:-1:-1;3549:13:49;;3544:18;;3521:41;3517:284;;;-1:-1:-1;3586:4:49;;-1:-1:-1;3592:10:49;-1:-1:-1;3578:25:49;;-1:-1:-1;3578:25:49;3517:284;3624:13;;:19;-1:-1:-1;3620:181:49;;3666:42;3680:7;3689:2;3693:6;3701;3666:13;:42::i;:::-;3659:49;;;;;;;;;3620:181;3746:44;3760:7;3769:2;3773:8;3783:6;3746:13;:44::i;3150:140:14:-;3237:4;3260:23;:3;3279;3260:18;:23::i;5911:123:15:-;5981:4;6004:23;6009:3;6021:5;6004:4;:23::i;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;6202:129::-;6275:4;6298:26;6306:3;6318:5;6298:7;:26::i;6412:138::-;6492:4;4343:19;;;:12;;;:19;;;;;;:24;;6515:28;4247:127;2206:404;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:15;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:15;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:15;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;14:173:50;82:20;;-1:-1:-1;;;;;131:31:50;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:188::-;260:20;;-1:-1:-1;;;;;309:46:50;;299:57;;289:85;;370:1;367;360:12;385:367;448:8;458:6;512:3;505:4;497:6;493:17;489:27;479:55;;530:1;527;520:12;479:55;-1:-1:-1;553:20:50;;596:18;585:30;;582:50;;;628:1;625;618:12;582:50;665:4;657:6;653:17;641:29;;725:3;718:4;708:6;705:1;701:14;693:6;689:27;685:38;682:47;679:67;;;742:1;739;732:12;757:1130;890:6;898;906;914;922;930;938;991:3;979:9;970:7;966:23;962:33;959:53;;;1008:1;1005;998:12;959:53;1031:29;1050:9;1031:29;:::i;:::-;1021:39;;1079:38;1113:2;1102:9;1098:18;1079:38;:::i;:::-;1069:48;;1136:38;1170:2;1159:9;1155:18;1136:38;:::i;:::-;1126:48;;1225:2;1214:9;1210:18;1197:32;1248:18;1289:2;1281:6;1278:14;1275:34;;;1305:1;1302;1295:12;1275:34;1344:70;1406:7;1397:6;1386:9;1382:22;1344:70;:::i;:::-;1433:8;;-1:-1:-1;1318:96:50;-1:-1:-1;1521:3:50;1506:19;;1493:33;;-1:-1:-1;1538:16:50;;;1535:36;;;1567:1;1564;1557:12;1535:36;1605:8;1594:9;1590:24;1580:34;;1652:7;1645:4;1641:2;1637:13;1633:27;1623:55;;1674:1;1671;1664:12;1623:55;1714:2;1701:16;1740:2;1732:6;1729:14;1726:34;;;1756:1;1753;1746:12;1726:34;1801:7;1796:2;1787:6;1783:2;1779:15;1775:24;1772:37;1769:57;;;1822:1;1819;1812:12;1769:57;1853:2;1849;1845:11;1835:21;;1875:6;1865:16;;;;;757:1130;;;;;;;;;;:::o;1892:186::-;1951:6;2004:2;1992:9;1983:7;1979:23;1975:32;1972:52;;;2020:1;2017;2010:12;1972:52;2043:29;2062:9;2043:29;:::i;2510:820::-;2737:2;2789:21;;;2859:13;;2762:18;;;2881:22;;;2708:4;;2737:2;2922;;2940:18;;;;2981:15;;;2708:4;3024:280;3038:6;3035:1;3032:13;3024:280;;;3097:13;;3139:9;;-1:-1:-1;;;;;3135:35:50;3123:48;;3211:11;;3205:18;3191:12;;;3184:40;3244:12;;;;3279:15;;;;3167:1;3053:9;3024:280;;;-1:-1:-1;3321:3:50;;2510:820;-1:-1:-1;;;;;;;2510:820:50:o;3517:511::-;3612:6;3620;3628;3681:2;3669:9;3660:7;3656:23;3652:32;3649:52;;;3697:1;3694;3687:12;3649:52;3737:9;3724:23;3770:18;3762:6;3759:30;3756:50;;;3802:1;3799;3792:12;3756:50;3841:70;3903:7;3894:6;3883:9;3879:22;3841:70;:::i;:::-;3930:8;;-1:-1:-1;3815:96:50;-1:-1:-1;3984:38:50;;-1:-1:-1;4018:2:50;4003:18;;3984:38;:::i;:::-;3974:48;;3517:511;;;;;:::o;4033:250::-;4118:1;4128:113;4142:6;4139:1;4136:13;4128:113;;;4218:11;;;4212:18;4199:11;;;4192:39;4164:2;4157:10;4128:113;;;-1:-1:-1;;4275:1:50;4257:16;;4250:27;4033:250::o;4288:396::-;4437:2;4426:9;4419:21;4400:4;4469:6;4463:13;4512:6;4507:2;4496:9;4492:18;4485:34;4528:79;4600:6;4595:2;4584:9;4580:18;4575:2;4567:6;4563:15;4528:79;:::i;:::-;4668:2;4647:15;-1:-1:-1;;4643:29:50;4628:45;;;;4675:2;4624:54;;4288:396;-1:-1:-1;;4288:396:50:o;4897:254::-;4965:6;4973;5026:2;5014:9;5005:7;5001:23;4997:32;4994:52;;;5042:1;5039;5032:12;4994:52;5065:29;5084:9;5065:29;:::i;:::-;5055:39;5141:2;5126:18;;;;5113:32;;-1:-1:-1;;;4897:254:50:o;5156:328::-;5233:6;5241;5249;5302:2;5290:9;5281:7;5277:23;5273:32;5270:52;;;5318:1;5315;5308:12;5270:52;5341:29;5360:9;5341:29;:::i;:::-;5331:39;;5389:38;5423:2;5412:9;5408:18;5389:38;:::i;:::-;5379:48;;5474:2;5463:9;5459:18;5446:32;5436:42;;5156:328;;;;;:::o;8010:127::-;8071:10;8066:3;8062:20;8059:1;8052:31;8102:4;8099:1;8092:15;8126:4;8123:1;8116:15;8142:125;8207:9;;;8228:10;;;8225:36;;;8241:18;;:::i;8272:127::-;8333:10;8328:3;8324:20;8321:1;8314:31;8364:4;8361:1;8354:15;8388:4;8385:1;8378:15;8404:127;8465:10;8460:3;8456:20;8453:1;8446:31;8496:4;8493:1;8486:15;8520:4;8517:1;8510:15;8536:135;8575:3;8596:17;;;8593:43;;8616:18;;:::i;:::-;-1:-1:-1;8663:1:50;8652:13;;8536:135::o;10508:128::-;10575:9;;;10596:11;;;10593:37;;;10610:18;;:::i;10823:492::-;10998:3;11036:6;11030:13;11052:66;11111:6;11106:3;11099:4;11091:6;11087:17;11052:66;:::i;:::-;11181:13;;11140:16;;;;11203:70;11181:13;11140:16;11250:4;11238:17;;11203:70;:::i;:::-;11289:20;;10823:492;-1:-1:-1;;;;10823:492:50:o;11572:216::-;11636:9;;;11664:11;;;11611:3;11694:9;;11722:10;;11718:19;;11747:10;;11739:19;;11715:44;11712:70;;;11762:18;;:::i;:::-;11712:70;;11572:216;;;;:::o;12190:127::-;12251:10;12246:3;12242:20;12239:1;12232:31;12282:4;12279:1;12272:15;12306:4;12303:1;12296:15;14179:168;14252:9;;;14283;;14300:15;;;14294:22;;14280:37;14270:71;;14321:18;;:::i;14352:217::-;14392:1;14418;14408:132;;14462:10;14457:3;14453:20;14450:1;14443:31;14497:4;14494:1;14487:15;14525:4;14522:1;14515:15;14408:132;-1:-1:-1;14554:9:50;;14352:217::o;15881:200::-;15947:9;;;15920:4;15975:9;;16003:10;;16015:12;;;15999:29;16038:12;;;16030:21;;15996:56;15993:82;;;16055:18;;:::i;16445:127::-;16506:10;16501:3;16497:20;16494:1;16487:31;16537:4;16534:1;16527:15;16561:4;16558:1;16551:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {}, "version": 1}, "offset": [391, 3018], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x926F7327 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x9F1ACF08 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCEAD0481 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xDE1EC403 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xE2FCF550 EQ PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDDF940D EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x19AD0EBA EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x31CC13BA EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x344FF1D0 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x71FBCCA5 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x75BAF37F EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x2337BAB73234B733A6B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x1B9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI POP PUSH9 0x1158E460913D00000 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO JUMPDEST PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C696572206D7573742062652067726561746572206F72206571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75616C207468616E203165313820616E64206C6F776572206F7220657175616C PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x40E8D0C2DC406460CA627 PUSH1 0xAB SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B1 PUSH32 0x0 DUP10 CALLER DUP11 DUP11 PUSH2 0x354 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xAA6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP1 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x60 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F5 DUP3 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xB82 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13919508185B1C9958591E4818DB185A5B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x80 DUP10 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x544 DUP2 DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x7 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0xBA6 SWAP1 POP JUMP JUMPDEST PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x5AD DUP2 CALLER PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP PUSH2 0x5E5 CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP15 AND SWAP1 PUSH2 0xD3C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x607 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x620 JUMPI PUSH2 0x620 CALLER DUP12 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xE80 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x658 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x663 PUSH1 0x0 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x68D DUP3 PUSH2 0xEFB JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6ED JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6C6 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 PUSH2 0x708 DUP6 DUP5 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x754 SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6F3 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH4 0xC55DDC97 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C6965722063616E6E6F74206265206C657373207468616E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH9 0x1158E460913D00000 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C6965722063616E6E6F74206265206D6F7265207468616E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 PUSH2 0x8EA DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C6C207573657273206D7573742068617665206174206C656173742031204E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1195 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E5 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH1 0x40 ADD MLOAD LT PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420646563726561736520766F74696E6720706F77657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BA DUP3 PUSH2 0xF24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA07 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x9D3 JUMPI PUSH2 0x9D3 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND SWAP1 PUSH2 0xD3C JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xA13 DUP3 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xA43 SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA5C CALLER DUP4 DUP4 PUSH2 0xE80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 TIMESTAMP PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA77 CALLER DUP5 DUP4 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0xA82 CALLER DUP4 DUP4 PUSH2 0xE80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP2 DUP5 DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA5C CALLER DUP4 DUP4 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB25 JUMPI DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC9 JUMPI PUSH2 0xAC9 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xB01 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP DUP1 DUP1 PUSH2 0xB1D SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAD JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 PUSH2 0xB41 PUSH2 0x1095 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB91 DUP6 DUP6 PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB9E DUP2 PUSH2 0x11FE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 DUP4 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBCA JUMPI PUSH2 0xBCA PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBE0 JUMPI SWAP1 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xC19 SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAB JUMP JUMPDEST POP DUP5 SLOAD EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC59 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCE7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD06 JUMPI PUSH2 0xCFE PUSH2 0x134B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x663 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x2093 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD25 JUMPI PUSH2 0xD25 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP PUSH2 0x663 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE TIMESTAMP DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH2 0xDA9 DUP10 DUP10 PUSH2 0xC2E JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP TIMESTAMP EQ DUP1 ISZERO PUSH2 0xDBC JUMPI POP DUP3 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE21 JUMPI DUP3 SLOAD DUP3 SWAP1 DUP5 SWAP1 PUSH2 0xDD3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2093 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xDE3 JUMPI PUSH2 0xDE3 PUSH2 0x2064 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP7 MLOAD PUSH1 0x4 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 DUP6 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE8D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0xEB1 SWAP1 DUP6 PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH2 0xEC2 JUMPI DUP4 PUSH2 0xECC JUMP JUMPDEST PUSH2 0xECC DUP5 DUP4 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xEF2 SWAP1 DUP7 DUP4 PUSH2 0x15AA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF15 DUP7 DUP7 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0xF46 DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x15FE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0xF5D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xF7F SWAP1 DUP5 PUSH2 0x1800 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0xFB0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFAA SWAP1 DUP5 PUSH2 0x1815 JUMP JUMPDEST POP PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xFDD DUP4 PUSH2 0xFBE DUP5 DUP5 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 PUSH2 0x1080 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1076 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101C JUMP JUMPDEST POP POP POP POP DUP5 PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x108C DUP2 PUSH2 0xF24 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x10EE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1118 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x11F2 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x11E6 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1870 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xF1D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1212 PUSH2 0x20FD JUMP JUMPDEST SUB PUSH2 0x121A JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122E PUSH2 0x20FD JUMP JUMPDEST SUB PUSH2 0x127B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x128F JUMPI PUSH2 0x128F PUSH2 0x20FD JUMP JUMPDEST SUB PUSH2 0x12DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12F0 JUMPI PUSH2 0x12F0 PUSH2 0x20FD JUMP JUMPDEST SUB PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1376 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B3 DUP6 DUP6 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH2 0x13E7 SWAP2 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x13F1 SWAP2 SWAP1 PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742062616C616E636520746F2064656C6567617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x146D SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x149C SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x14DA SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1503 SWAP2 DUP8 SWAP2 PUSH2 0x14F9 DUP11 DUP5 PUSH2 0x1934 JUMP JUMPDEST DUP11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1510 DUP8 DUP7 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP PUSH2 0x153D DUP6 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1533 DUP10 DUP13 PUSH2 0x1934 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xFF825F9424124EFFC5CE1D9F4803D58EDE8A2BDA4DA2324810F74834715C4C59 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF15 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x19A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x15E1 DUP6 DUP6 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP7 SWAP1 SWAP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 SLOAD SWAP5 SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1613 DUP4 DUP6 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x16A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7573657220686173206E6F742064656C65676174656420656E6F75676820746F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2064656C6567617465 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x16D0 SWAP1 DUP5 SWAP1 PUSH2 0x2093 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x16FF SWAP1 DUP5 SWAP1 PUSH2 0x2093 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x173D SWAP1 DUP5 SWAP1 PUSH2 0x2093 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x174F DUP6 DUP6 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP PUSH2 0x177C DUP5 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1772 DUP9 DUP11 PUSH2 0x1934 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1789 DUP7 DUP6 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP5 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x14F9 DUP9 DUP12 PUSH2 0x1934 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xDE5AA493A93D4351631C1991A0AEECFD52D6B51CF1B61F1A3C48F97E26808653 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1857 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x1865 DUP5 DUP5 PUSH1 0x0 DUP8 MLOAD PUSH2 0x1A60 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x18A7 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1924 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x192B JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x1995 JUMPI PUSH2 0x1988 DUP6 DUP6 PUSH2 0x1BB2 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0xF1D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x15C0 DUP5 DUP5 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP4 DUP4 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x19F7 JUMPI POP PUSH2 0x19F7 DUP5 DUP5 PUSH2 0x1BB2 JUMP JUMPDEST PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xA94 DUP4 DUP4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 PUSH2 0x1A9E PUSH2 0x134B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x192B JUMP JUMPDEST PUSH2 0x1AB1 DUP5 DUP5 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x1 SUB PUSH2 0x1AFF JUMPI PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1ACC JUMPI PUSH2 0x1ACC PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x1AF1 JUMPI PUSH1 0x0 PUSH2 0x1AEC PUSH2 0x134B JUMP JUMPDEST PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x192B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x1B0D DUP7 DUP7 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1B17 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH2 0x1B27 PUSH1 0x1 DUP5 PUSH2 0x2093 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1B37 JUMPI PUSH2 0x1B37 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B55 JUMPI PUSH2 0x1B55 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP8 DUP3 PUSH1 0x0 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x1B73 JUMPI POP DUP1 MLOAD DUP9 LT JUMPDEST ISZERO PUSH2 0x1B86 JUMPI POP PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x192B SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP9 LT PUSH2 0x1BA6 JUMPI PUSH2 0x1B9A DUP10 DUP10 DUP6 DUP10 PUSH2 0x1A60 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x192B JUMP JUMPDEST PUSH2 0x1B9A DUP10 DUP10 DUP10 DUP7 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP4 DUP4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP4 DUP4 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BE1 JUMPI PUSH2 0x1BE1 PUSH2 0x2064 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP4 DUP4 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1C5F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x663 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1D50 JUMPI PUSH1 0x0 PUSH2 0x1C8B PUSH1 0x1 DUP4 PUSH2 0x2093 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1C9F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1D04 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CBF JUMPI PUSH2 0x1CBF PUSH2 0x2064 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1CE2 JUMPI PUSH2 0x1CE2 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1D15 JUMPI PUSH2 0x1D15 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x663 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x663 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF6 DUP9 PUSH2 0x1D5A JUMP JUMPDEST SWAP7 POP PUSH2 0x1E04 PUSH1 0x20 DUP10 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP6 POP PUSH2 0x1E12 PUSH1 0x40 DUP10 ADD PUSH2 0x1D76 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3B DUP12 DUP4 DUP13 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP12 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA94 DUP3 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F07 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1ED9 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F4C DUP7 DUP3 DUP8 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1F5F SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0x1D76 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F83 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F6B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FAB DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1F68 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FDB DUP4 PUSH2 0x1D5A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2007 DUP5 PUSH2 0x1D5A JUMP JUMPDEST SWAP3 POP PUSH2 0x2015 PUSH1 0x20 DUP6 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x663 JUMPI PUSH2 0x663 PUSH2 0x2025 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x208C JUMPI PUSH2 0x208C PUSH2 0x2025 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x663 JUMPI PUSH2 0x663 PUSH2 0x2025 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x20B8 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1F68 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x20CC DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1F68 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 SLT PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP3 AND DUP3 ISZERO DUP3 AND OR ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F5 PUSH2 0x2025 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x663 JUMPI PUSH2 0x663 PUSH2 0x2025 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2147 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD35 PUSH2 0x2025 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xBD PUSH6 0x586D3E71A2D9 LOG4 SIGNEXTEND 0xBA 0xE4 DUP16 SWAP12 SHL DUP1 CODESIZE SUB 0x49 LOG4 SWAP7 0x21 OR 0xD4 CALLVALUE 0xB0 PUSH4 0x690B0CDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sha1": "1d9bd4005364e8358ab5f0f35e664b1a6db805a7", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.17;\n\nimport \"./NFTVault.sol\";\nimport \"../../libraries/DataTypes.sol\";\nimport \"../../libraries/ScaledMath.sol\";\nimport \"../../libraries/Merkle.sol\";\nimport \"../../libraries/VotingPowerHistory.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract FoundingMemberVault is NFTVault, EIP712 {\n    using Merkle for Merkle.Root;\n    using VotingPowerHistory for VotingPowerHistory.History;\n\n    string internal constant _VAULT_TYPE = \"FoundingMember\";\n\n    mapping(address => bool) private _claimed;\n\n    bytes32 private immutable _TYPE_HASH =\n        keccak256(\n            \"Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)\"\n        );\n    Merkle.Root private merkleRoot;\n\n    constructor(\n        address _owner,\n        uint256 _sumVotingPowers,\n        bytes32 _merkleRoot\n    ) EIP712(\"FoundingMemberVault\", \"1\") NFTVault(_owner) {\n        sumVotingPowers = _sumVotingPowers;\n        merkleRoot = Merkle.Root(_merkleRoot);\n    }\n\n    function claimNFT(\n        address nftOwner,\n        address delegate,\n        uint128 multiplier,\n        bytes32[] calldata proof,\n        bytes calldata signature\n    ) external {\n        require(\n            multiplier >= 1e18 && multiplier <= 20e18,\n            \"multiplier must be greater or equal than 1e18 and lower or equal than 20e18\"\n        );\n\n        bytes32 hash = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _TYPE_HASH,\n                    nftOwner,\n                    msg.sender,\n                    delegate,\n                    multiplier,\n                    _encodeProof(proof)\n                )\n            )\n        );\n        address claimant = ECDSA.recover(hash, signature);\n        require(claimant == nftOwner, \"invalid signature\");\n\n        require(!_claimed[nftOwner], \"NFT already claimed\");\n\n        bytes32 node = keccak256(abi.encodePacked(nftOwner, multiplier));\n        require(merkleRoot.isProofValid(node, proof), \"invalid proof\");\n\n        _claimed[nftOwner] = true;\n\n        VotingPowerHistory.Record memory current = history.currentRecord(\n            msg.sender\n        );\n        history.updateVotingPower(\n            msg.sender,\n            current.baseVotingPower + ScaledMath.ONE,\n            multiplier,\n            current.netDelegatedVotes\n        );\n\n        if (delegate != address(0) && delegate != msg.sender) {\n            _delegateVote(msg.sender, delegate, multiplier);\n        }\n    }\n\n    function _encodeProof(\n        bytes32[] memory proof\n    ) internal pure returns (bytes32) {\n        bytes memory proofB;\n        for (uint256 i = 0; i < proof.length; i++) {\n            proofB = bytes.concat(proofB, abi.encode(proof[i]));\n        }\n        return keccak256(proofB);\n    }\n\n    function getVaultType() external pure returns (string memory) {\n        return _VAULT_TYPE;\n    }\n}\n", "sourceMap": "391:2627:25:-:0;;;699:126;652:173;;868:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2464:602:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:11;;;;;;-1:-1:-1;;;;;340:14:18;;;;2550:22:11;;;;;2606:25;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;2464:602;;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;690:25:50;;;731:18;;;724:34;;;774:18;;;767:34;;;3686:13:11;817:18:50;;;810:34;3709:4:11;860:19:50;;;853:61;3606:7:11;;662:19:50;;3642:73:11;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;;1035:15:25::2;:34:::0;;;;1092:24:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;1079:10:::2;:37:::0;-1:-1:-1;391:2627:25;;-1:-1:-1;391:2627:25;14:412:50;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:50;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;351:25;416:2;401:18;;;395:25;327:5;;351:25;;-1:-1:-1;395:25:50;14:412;-1:-1:-1;;;14:412:50:o;431:489::-;391:2627:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/vaults/FoundingMemberVault.sol", "type": "contract", "deployment": {"address": "0x52beb0A083CA0fB84F6408e63C4c5a896C1993fB", "chainid": "1", "blockHeight": 18685820}}