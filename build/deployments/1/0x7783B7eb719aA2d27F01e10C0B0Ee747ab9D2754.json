{"abi": [{"inputs": [{"internalType": "address", "name": "_owner", "type": "address"}, {"internalType": "uint256", "name": "_sumVotingPowers", "type": "uint256"}, {"internalType": "bytes32", "name": "_merkleRoot", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address", "name": "actual", "type": "address"}, {"internalType": "address", "name": "expected", "type": "address"}], "name": "NotAuthorized", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": false, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "VotesDelegated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": false, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "VotesUndelegated", "type": "event"}, {"inputs": [{"internalType": "address", "name": "_oldDelegate", "type": "address"}, {"internalType": "address", "name": "_newDelegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "changeDelegate", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "nftOwner", "type": "address"}, {"internalType": "address", "name": "delegate", "type": "address"}, {"internalType": "uint128", "name": "multiplier", "type": "uint128"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}, {"internalType": "bytes", "name": "signature", "type": "bytes"}], "name": "claimNFT", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_delegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "delegateVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getCurrentRecord", "outputs": [{"components": [{"internalType": "uint256", "name": "at", "type": "uint256"}, {"internalType": "uint256", "name": "baseVotingPower", "type": "uint256"}, {"internalType": "uint256", "name": "multiplier", "type": "uint256"}, {"internalType": "int256", "name": "netDelegatedVotes", "type": "int256"}], "internalType": "struct VotingPowerHistory.Record", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getDelegations", "outputs": [{"components": [{"internalType": "address", "name": "delegate", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.Delegation[]", "name": "delegations", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "name": "getRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVaultType", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_delegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "undelegateVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address[]", "name": "users", "type": "address[]"}, {"internalType": "uint128", "name": "_multiplier", "type": "uint128"}], "name": "updateMultiplier", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/Strings.sol", "1": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "10": "contracts/vaults/NFTVault.sol", "11": "interfaces/IDelegatingVault.sol", "12": "interfaces/IVault.sol", "15": "libraries/Merkle.sol", "16": "libraries/ScaledMath.sol", "17": "libraries/VotingPowerHistory.sol", "2": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol", "3": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/math/Math.sol", "6": "contracts/access/ImmutableOwner.sol", "7": "contracts/vaults/BaseDelegatingVault.sol", "8": "contracts/vaults/BaseVault.sol", "9": "contracts/vaults/FoundingMemberVault.sol"}, "ast": {"absolutePath": "contracts/vaults/FoundingMemberVault.sol", "exportedSymbols": {"BaseDelegatingVault": [2371], "BaseVault": [4528], "DataTypes": [1076], "ECDSA": [615], "EIP712": [769], "EnumerableMap": [3583], "EnumerableSet": [5141], "Errors": [4475], "FoundingMemberVault": [254], "IDelegatingVault": [2423], "IVault": [2461], "ImmutableOwner": [2118], "Math": [4448], "Merkle": [1150], "NFTVault": [925], "ScaledMath": [1230], "Strings": [2085], "VotingPowerHistory": [1910]}, "id": 255, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "45:24:9"}, {"absolutePath": "contracts/vaults/NFTVault.sol", "file": "./NFTVault.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 926, "src": "71:24:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/DataTypes.sol", "file": "../../libraries/DataTypes.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 1077, "src": "96:39:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../../libraries/ScaledMath.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 1231, "src": "136:40:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Merkle.sol", "file": "../../libraries/Merkle.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 1151, "src": "177:36:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/VotingPowerHistory.sol", "file": "../../libraries/VotingPowerHistory.sol", "id": 6, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 1911, "src": "214:48:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol", "file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol", "id": 7, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 770, "src": "263:63:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "id": 8, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 255, "sourceUnit": 616, "src": "327:62:9", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 9, "name": "NFTVault", "nameLocations": ["423:8:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 925, "src": "423:8:9"}, "id": 10, "nodeType": "InheritanceSpecifier", "src": "423:8:9"}, {"baseName": {"id": 11, "name": "EIP712", "nameLocations": ["433:6:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 769, "src": "433:6:9"}, "id": 12, "nodeType": "InheritanceSpecifier", "src": "433:6:9"}], "canonicalName": "FoundingMemberVault", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 254, "linearizedBaseContracts": [254, 769, 925, 2118, 2371, 2423, 4528, 2461], "name": "FoundingMemberVault", "nameLocation": "400:19:9", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 16, "libraryName": {"id": 13, "name": "Merkle", "nameLocations": ["452:6:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 1150, "src": "452:6:9"}, "nodeType": "UsingForDirective", "src": "446:29:9", "typeName": {"id": 15, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 14, "name": "Merkle.Root", "nameLocations": ["463:6:9", "470:4:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 1081, "src": "463:11:9"}, "referencedDeclaration": 1081, "src": "463:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_storage_ptr", "typeString": "struct Merkle.Root"}}}, {"global": false, "id": 20, "libraryName": {"id": 17, "name": "VotingPowerHistory", "nameLocations": ["486:18:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 1910, "src": "486:18:9"}, "nodeType": "UsingForDirective", "src": "480:56:9", "typeName": {"id": 19, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 18, "name": "VotingPowerHistory.History", "nameLocations": ["509:18:9", "528:7:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 1314, "src": "509:26:9"}, "referencedDeclaration": 1314, "src": "509:26:9", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$1314_storage_ptr", "typeString": "struct VotingPowerHistory.History"}}}, {"constant": true, "id": 23, "mutability": "constant", "name": "_VAULT_TYPE", "nameLocation": "567:11:9", "nodeType": "VariableDeclaration", "scope": 254, "src": "542:55:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 21, "name": "string", "nodeType": "ElementaryTypeName", "src": "542:6:9", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": {"hexValue": "466f756e64696e674d656d626572", "id": 22, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "581:16:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_575610213678189e9d9cc250fbc82a34c5b4a706a5bd8dd693a7026f7b20ba5e", "typeString": "literal_string \"FoundingMember\""}, "value": "FoundingMember"}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "_claimed", "nameLocation": "637:8:9", "nodeType": "VariableDeclaration", "scope": 254, "src": "604:41:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 26, "keyType": {"id": 24, "name": "address", "nodeType": "ElementaryTypeName", "src": "612:7:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "604:24:9", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 25, "name": "bool", "nodeType": "ElementaryTypeName", "src": "623:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "private"}, {"constant": false, "id": 32, "mutability": "immutable", "name": "_TYPE_HASH", "nameLocation": "678:10:9", "nodeType": "VariableDeclaration", "scope": 254, "src": "652:173:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 28, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "652:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"arguments": [{"hexValue": "50726f6f662861646472657373206163636f756e742c616464726573732072656365697665722c616464726573732064656c65676174652c75696e74313238206d756c7469706c6965722c627974657333325b5d2070726f6f6629", "id": 30, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "722:93:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_015ae317ea3996e775b7592a4e654e819d68b83313f09c429f495e6e95002d4c", "typeString": "literal_string \"Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)\""}, "value": "Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_015ae317ea3996e775b7592a4e654e819d68b83313f09c429f495e6e95002d4c", "typeString": "literal_string \"Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)\""}], "id": 29, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "699:9:9", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 31, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "699:126:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "private"}, {"constant": false, "id": 35, "mutability": "mutable", "name": "merkleRoot", "nameLocation": "851:10:9", "nodeType": "VariableDeclaration", "scope": 254, "src": "831:30:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_storage", "typeString": "struct Merkle.Root"}, "typeName": {"id": 34, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 33, "name": "Merkle.Root", "nameLocations": ["831:6:9", "838:4:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 1081, "src": "831:11:9"}, "referencedDeclaration": 1081, "src": "831:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_storage_ptr", "typeString": "struct Merkle.Root"}}, "visibility": "private"}, {"body": {"id": 62, "nodeType": "Block", "src": "1025:98:9", "statements": [{"expression": {"id": 53, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 51, "name": "sumVotingPowers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "1035:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 52, "name": "_sumVotingPowers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "1053:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1035:34:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 54, "nodeType": "ExpressionStatement", "src": "1035:34:9"}, {"expression": {"id": 60, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 55, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1079:10:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_storage", "typeString": "struct Merkle.Root storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 58, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "1104:11:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 56, "name": "Merkle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1150, "src": "1092:6:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Merkle_$1150_$", "typeString": "type(library Merkle)"}}, "id": 57, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1099:4:9", "memberName": "Root", "nodeType": "MemberAccess", "referencedDeclaration": 1081, "src": "1092:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Root_$1081_storage_ptr_$", "typeString": "type(struct Merkle.Root storage pointer)"}}, "id": 59, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1092:24:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_memory_ptr", "typeString": "struct Merkle.Root memory"}}, "src": "1079:37:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_storage", "typeString": "struct Merkle.Root storage ref"}}, "id": 61, "nodeType": "ExpressionStatement", "src": "1079:37:9"}]}, "id": 63, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "466f756e64696e674d656d6265725661756c74", "id": 44, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "980:21:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d945dcc7dfbed5d3356470391443bd1dd249890d921be9b988337b4affa22ca9", "typeString": "literal_string \"FoundingMemberVault\""}, "value": "FoundingMemberVault"}, {"hexValue": "31", "id": 45, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1003:3:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}, "value": "1"}], "id": 46, "kind": "baseConstructorSpecifier", "modifierName": {"id": 43, "name": "EIP712", "nameLocations": ["973:6:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 769, "src": "973:6:9"}, "nodeType": "ModifierInvocation", "src": "973:34:9"}, {"arguments": [{"id": 48, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "1017:6:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 49, "kind": "baseConstructorSpecifier", "modifierName": {"id": 47, "name": "NFTVault", "nameLocations": ["1008:8:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 925, "src": "1008:8:9"}, "nodeType": "ModifierInvocation", "src": "1008:16:9"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 42, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 37, "mutability": "mutable", "name": "_owner", "nameLocation": "897:6:9", "nodeType": "VariableDeclaration", "scope": 63, "src": "889:14:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 36, "name": "address", "nodeType": "ElementaryTypeName", "src": "889:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 39, "mutability": "mutable", "name": "_sumVotingPowers", "nameLocation": "921:16:9", "nodeType": "VariableDeclaration", "scope": 63, "src": "913:24:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 38, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "913:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 41, "mutability": "mutable", "name": "_merkleRoot", "nameLocation": "955:11:9", "nodeType": "VariableDeclaration", "scope": 63, "src": "947:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 40, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "947:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "879:93:9"}, "returnParameters": {"id": 50, "nodeType": "ParameterList", "parameters": [], "src": "1025:0:9"}, "scope": 254, "src": "868:255:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 201, "nodeType": "Block", "src": "1310:1309:9", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 84, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 80, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 78, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1341:10:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "31653138", "id": 79, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1355:4:9", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "1341:18:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 83, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 81, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1363:10:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "313030653138", "id": 82, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1377:6:9", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000000_by_1", "typeString": "int_const 100000000000000000000"}, "value": "100e18"}, "src": "1363:20:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1341:42:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6d756c7469706c696572206d7573742062652067726561746572206f7220657175616c207468616e203165313820616e64206c6f776572206f7220657175616c207468616e20313030653138", "id": 85, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1397:78:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_36c90c36a6c63be9293556f6ddfa42bba295740fcb4ad2072aa38c44b69f394d", "typeString": "literal_string \"multiplier must be greater or equal than 1e18 and lower or equal than 100e18\""}, "value": "multiplier must be greater or equal than 1e18 and lower or equal than 100e18"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_36c90c36a6c63be9293556f6ddfa42bba295740fcb4ad2072aa38c44b69f394d", "typeString": "literal_string \"multiplier must be greater or equal than 1e18 and lower or equal than 100e18\""}], "id": 77, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1320:7:9", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1320:165:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 87, "nodeType": "ExpressionStatement", "src": "1320:165:9"}, {"assignments": [89], "declarations": [{"constant": false, "id": 89, "mutability": "mutable", "name": "hash", "nameLocation": "1504:4:9", "nodeType": "VariableDeclaration", "scope": 201, "src": "1496:12:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 88, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1496:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 106, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"id": 94, "name": "_TYPE_HASH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "1600:10:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 95, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "1632:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 96, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1662:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 97, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1666:6:9", "memberName": "sender", "nodeType": "MemberAccess", "src": "1662:10:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 98, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1694:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 99, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1724:10:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"arguments": [{"id": 101, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72, "src": "1769:5:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "id": 100, "name": "_encodeProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 245, "src": "1756:12:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes32[] memory) pure returns (bytes32)"}}, "id": 102, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1756:19:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 92, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1568:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "1572:6:9", "memberName": "encode", "nodeType": "MemberAccess", "src": "1568:10:9", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 103, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1568:225:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 91, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1541:9:9", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 104, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1541:266:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 90, "name": "_hashTypedDataV4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 768, "src": "1511:16:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$", "typeString": "function (bytes32) view returns (bytes32)"}}, "id": 105, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1511:306:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1496:321:9"}, {"assignments": [108], "declarations": [{"constant": false, "id": 108, "mutability": "mutable", "name": "claimant", "nameLocation": "1835:8:9", "nodeType": "VariableDeclaration", "scope": 201, "src": "1827:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 107, "name": "address", "nodeType": "ElementaryTypeName", "src": "1827:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 114, "initialValue": {"arguments": [{"id": 111, "name": "hash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 89, "src": "1860:4:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 112, "name": "signature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "1866:9:9", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"id": 109, "name": "ECDSA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "1846:5:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ECDSA_$615_$", "typeString": "type(library ECDSA)"}}, "id": 110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1852:7:9", "memberName": "recover", "nodeType": "MemberAccess", "referencedDeclaration": 381, "src": "1846:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes memory) pure returns (address)"}}, "id": 113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1846:30:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "1827:49:9"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 116, "name": "claimant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "1894:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 117, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "1906:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1894:20:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c6964207369676e6174757265", "id": 119, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1916:19:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a", "typeString": "literal_string \"invalid signature\""}, "value": "invalid signature"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a", "typeString": "literal_string \"invalid signature\""}], "id": 115, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1886:7:9", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1886:50:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 121, "nodeType": "ExpressionStatement", "src": "1886:50:9"}, {"expression": {"arguments": [{"id": 126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1955:19:9", "subExpression": {"baseExpression": {"id": 123, "name": "_claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "1956:8:9", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 125, "indexExpression": {"id": 124, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "1965:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1956:18:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e465420616c726561647920636c61696d6564", "id": 127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1976:21:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_46701596dcdc7e86cd8888b7ac11ee441a0383c712b82ff649d7f1f515c62759", "typeString": "literal_string \"NFT already claimed\""}, "value": "NFT already claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_46701596dcdc7e86cd8888b7ac11ee441a0383c712b82ff649d7f1f515c62759", "typeString": "literal_string \"NFT already claimed\""}], "id": 122, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1947:7:9", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1947:51:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "1947:51:9"}, {"assignments": [131], "declarations": [{"constant": false, "id": 131, "mutability": "mutable", "name": "node", "nameLocation": "2017:4:9", "nodeType": "VariableDeclaration", "scope": 201, "src": "2009:12:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 130, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2009:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 139, "initialValue": {"arguments": [{"arguments": [{"id": 135, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "2051:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 136, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "2061:10:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"id": 133, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2034:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 134, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2038:12:9", "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "2034:16:9", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2034:38:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 132, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2024:9:9", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 138, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2024:49:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "2009:64:9"}, {"expression": {"arguments": [{"arguments": [{"id": 143, "name": "node", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "2115:4:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 144, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72, "src": "2121:5:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "expression": {"id": 141, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2091:10:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$1081_storage", "typeString": "struct Merkle.Root storage ref"}}, "id": 142, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2102:12:9", "memberName": "isProofValid", "nodeType": "MemberAccess", "referencedDeclaration": 1149, "src": "2091:23:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Root_$1081_storage_ptr_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Root_$1081_storage_ptr_$", "typeString": "function (struct Merkle.Root storage pointer,bytes32,bytes32[] memory) view returns (bool)"}}, "id": 145, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2091:36:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c69642070726f6f66", "id": 146, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2129:15:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}, "value": "invalid proof"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}], "id": 140, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2083:7:9", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2083:62:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 148, "nodeType": "ExpressionStatement", "src": "2083:62:9"}, {"expression": {"id": 153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 149, "name": "_claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "2156:8:9", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 151, "indexExpression": {"id": 150, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "2165:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2156:18:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2177:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2156:25:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 154, "nodeType": "ExpressionStatement", "src": "2156:25:9"}, {"assignments": [159], "declarations": [{"constant": false, "id": 159, "mutability": "mutable", "name": "current", "nameLocation": "2225:7:9", "nodeType": "VariableDeclaration", "scope": 201, "src": "2192:40:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$1253_memory_ptr", "typeString": "struct VotingPowerHistory.Record"}, "typeName": {"id": 158, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 157, "name": "VotingPowerHistory.Record", "nameLocations": ["2192:18:9", "2211:6:9"], "nodeType": "IdentifierPath", "referencedDeclaration": 1253, "src": "2192:25:9"}, "referencedDeclaration": 1253, "src": "2192:25:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$1253_storage_ptr", "typeString": "struct VotingPowerHistory.Record"}}, "visibility": "internal"}], "id": 165, "initialValue": {"arguments": [{"expression": {"id": 162, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2270:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2274:6:9", "memberName": "sender", "nodeType": "MemberAccess", "src": "2270:10:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 160, "name": "history", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4490, "src": "2235:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$1314_storage", "typeString": "struct VotingPowerHistory.History storage ref"}}, "id": 161, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2243:13:9", "memberName": "currentRecord", "nodeType": "MemberAccess", "referencedDeclaration": 1477, "src": "2235:21:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_History_$1314_storage_ptr_$_t_address_$returns$_t_struct$_Record_$1253_memory_ptr_$bound_to$_t_struct$_History_$1314_storage_ptr_$", "typeString": "function (struct VotingPowerHistory.History storage pointer,address) view returns (struct VotingPowerHistory.Record memory)"}}, "id": 164, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2235:55:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$1253_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "nodeType": "VariableDeclarationStatement", "src": "2192:98:9"}, {"expression": {"arguments": [{"expression": {"id": 169, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2339:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 170, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2343:6:9", "memberName": "sender", "nodeType": "MemberAccess", "src": "2339:10:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 171, "name": "current", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "2363:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$1253_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 172, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2371:15:9", "memberName": "baseVotingPower", "nodeType": "MemberAccess", "referencedDeclaration": 1248, "src": "2363:23:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 173, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1230, "src": "2389:10:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$1230_$", "typeString": "type(library ScaledMath)"}}, "id": 174, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2400:3:9", "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 1155, "src": "2389:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2363:40:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 176, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "2417:10:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"expression": {"id": 177, "name": "current", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "2441:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$1253_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 178, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2449:17:9", "memberName": "netDelegatedVotes", "nodeType": "MemberAccess", "referencedDeclaration": 1252, "src": "2441:25:9", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 166, "name": "history", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4490, "src": "2300:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$1314_storage", "typeString": "struct VotingPowerHistory.History storage ref"}}, "id": 168, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2308:17:9", "memberName": "updateVotingPower", "nodeType": "MemberAccess", "referencedDeclaration": 1410, "src": "2300:25:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_History_$1314_storage_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_struct$_Record_$1253_memory_ptr_$bound_to$_t_struct$_History_$1314_storage_ptr_$", "typeString": "function (struct VotingPowerHistory.History storage pointer,address,uint256,uint256,int256) returns (struct VotingPowerHistory.Record memory)"}}, "id": 179, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2300:176:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$1253_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 180, "nodeType": "ExpressionStatement", "src": "2300:176:9"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 181, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2491:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 184, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2511:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 183, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2503:7:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 182, "name": "address", "nodeType": "ElementaryTypeName", "src": "2503:7:9", "typeDescriptions": {}}}, "id": 185, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2503:10:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2491:22:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 190, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 187, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2517:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 188, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2529:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2533:6:9", "memberName": "sender", "nodeType": "MemberAccess", "src": "2529:10:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2517:22:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2491:48:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 200, "nodeType": "IfStatement", "src": "2487:126:9", "trueBody": {"id": 199, "nodeType": "Block", "src": "2541:72:9", "statements": [{"expression": {"arguments": [{"expression": {"id": 193, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2569:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 194, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2573:6:9", "memberName": "sender", "nodeType": "MemberAccess", "src": "2569:10:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 195, "name": "delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2581:8:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 196, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "2591:10:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 192, "name": "_delegateVote", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2320, "src": "2555:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2555:47:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 198, "nodeType": "ExpressionStatement", "src": "2555:47:9"}]}}]}, "functionSelector": "0ddf940d", "id": 202, "implemented": true, "kind": "function", "modifiers": [], "name": "claimNFT", "nameLocation": "1138:8:9", "nodeType": "FunctionDefinition", "parameters": {"id": 75, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 65, "mutability": "mutable", "name": "nftOwner", "nameLocation": "1164:8:9", "nodeType": "VariableDeclaration", "scope": 202, "src": "1156:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 64, "name": "address", "nodeType": "ElementaryTypeName", "src": "1156:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 67, "mutability": "mutable", "name": "delegate", "nameLocation": "1190:8:9", "nodeType": "VariableDeclaration", "scope": 202, "src": "1182:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 66, "name": "address", "nodeType": "ElementaryTypeName", "src": "1182:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 69, "mutability": "mutable", "name": "multiplier", "nameLocation": "1216:10:9", "nodeType": "VariableDeclaration", "scope": 202, "src": "1208:18:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 68, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1208:7:9", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 72, "mutability": "mutable", "name": "proof", "nameLocation": "1255:5:9", "nodeType": "VariableDeclaration", "scope": 202, "src": "1236:24:9", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 70, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1236:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 71, "nodeType": "ArrayTypeName", "src": "1236:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}, {"constant": false, "id": 74, "mutability": "mutable", "name": "signature", "nameLocation": "1285:9:9", "nodeType": "VariableDeclaration", "scope": 202, "src": "1270:24:9", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 73, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1270:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1146:154:9"}, "returnParameters": {"id": 76, "nodeType": "ParameterList", "parameters": [], "src": "1310:0:9"}, "scope": 254, "src": "1129:1490:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 244, "nodeType": "Block", "src": "2717:198:9", "statements": [{"assignments": [211], "declarations": [{"constant": false, "id": 211, "mutability": "mutable", "name": "proofB", "nameLocation": "2740:6:9", "nodeType": "VariableDeclaration", "scope": 244, "src": "2727:19:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 210, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2727:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 212, "nodeType": "VariableDeclarationStatement", "src": "2727:19:9"}, {"body": {"id": 238, "nodeType": "Block", "src": "2799:76:9", "statements": [{"expression": {"id": 236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 224, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2813:6:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 228, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2835:6:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"arguments": [{"baseExpression": {"id": 231, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "2854:5:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 233, "indexExpression": {"id": 232, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 214, "src": "2860:1:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2854:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 229, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2843:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 230, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2847:6:9", "memberName": "encode", "nodeType": "MemberAccess", "src": "2843:10:9", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2843:20:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 226, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2822:5:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 225, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2822:5:9", "typeDescriptions": {}}}, "id": 227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2828:6:9", "memberName": "concat", "nodeType": "MemberAccess", "src": "2822:12:9", "typeDescriptions": {"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2822:42:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "src": "2813:51:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 237, "nodeType": "ExpressionStatement", "src": "2813:51:9"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 217, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 214, "src": "2776:1:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 218, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "2780:5:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2786:6:9", "memberName": "length", "nodeType": "MemberAccess", "src": "2780:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2776:16:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 239, "initializationExpression": {"assignments": [214], "declarations": [{"constant": false, "id": 214, "mutability": "mutable", "name": "i", "nameLocation": "2769:1:9", "nodeType": "VariableDeclaration", "scope": 239, "src": "2761:9:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 213, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2761:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 216, "initialValue": {"hexValue": "30", "id": 215, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2773:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2761:13:9"}, "loopExpression": {"expression": {"id": 222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2794:3:9", "subExpression": {"id": 221, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 214, "src": "2794:1:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 223, "nodeType": "ExpressionStatement", "src": "2794:3:9"}, "nodeType": "ForStatement", "src": "2756:119:9"}, {"expression": {"arguments": [{"id": 241, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2901:6:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 240, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2891:9:9", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2891:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 209, "id": 243, "nodeType": "Return", "src": "2884:24:9"}]}, "id": 245, "implemented": true, "kind": "function", "modifiers": [], "name": "_encodeProof", "nameLocation": "2634:12:9", "nodeType": "FunctionDefinition", "parameters": {"id": 206, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 205, "mutability": "mutable", "name": "proof", "nameLocation": "2673:5:9", "nodeType": "VariableDeclaration", "scope": 245, "src": "2656:22:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 203, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2656:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 204, "nodeType": "ArrayTypeName", "src": "2656:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "2646:38:9"}, "returnParameters": {"id": 209, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 208, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 245, "src": "2708:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 207, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2708:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2707:9:9"}, "scope": 254, "src": "2625:290:9", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2460], "body": {"id": 252, "nodeType": "Block", "src": "2983:35:9", "statements": [{"expression": {"id": 250, "name": "_VAULT_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "3000:11:9", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 249, "id": 251, "nodeType": "Return", "src": "2993:18:9"}]}, "functionSelector": "75baf37f", "id": 253, "implemented": true, "kind": "function", "modifiers": [], "name": "getVaultType", "nameLocation": "2930:12:9", "nodeType": "FunctionDefinition", "parameters": {"id": 246, "nodeType": "ParameterList", "parameters": [], "src": "2942:2:9"}, "returnParameters": {"id": 249, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 248, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 253, "src": "2968:13:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 247, "name": "string", "nodeType": "ElementaryTypeName", "src": "2968:6:9", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2967:15:9"}, "scope": 254, "src": "2921:97:9", "stateMutability": "pure", "virtual": false, "visibility": "external"}], "scope": 255, "src": "391:2629:9", "usedErrors": [4464]}], "src": "45:2976:9"}, "bytecode": "6101806040527f015ae317ea3996e775b7592a4e654e819d68b83313f09c429f495e6e95002d4c610160523480156200003757600080fd5b5060405162002438380380620024388339810160408190526200005a9162000170565b604080518082018252601381527f466f756e64696e674d656d6265725661756c74000000000000000000000000006020808301918252835180850190945260018452603160f81b9084019081526001600160a01b038716608052825190912083519091206101008290526101208190524660c0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001428184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60a0523060e05261014052505050600592909255604080516020810190915281905260075550620001b59050565b6000806000606084860312156200018657600080fd5b83516001600160a01b03811681146200019e57600080fd5b602085015160409095015190969495509392505050565b60805160a05160c05160e0516101005161012051610140516101605161220f6200022960003960006102f601526000611176015260006111c5015260006111a0015260006110f9015260006111230152600061114d0152600081816101970152818161077001526107b2015261220f6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610192578063926f7327146101d15780639f1acf08146101e4578063cead0481146101f7578063de1ec4031461020a578063e2fcf5501461021d57600080fd5b80630ddf940d146100b957806319ad0eba146100ce57806331cc13ba1461011d578063344ff1d01461013d57806371fbcca51461014f57806375baf37f14610162575b600080fd5b6100cc6100c7366004611e29565b610230565b005b6100e16100dc366004611ef8565b61062e565b60405161011491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b61013061012b366004611ef8565b61066a565b6040516101149190611f13565b6005545b604051908152602001610114565b6100cc61015d366004611f6b565b610765565b604080518082018252600e81526d2337bab73234b733a6b2b6b132b960911b602082015290516101149190611fe3565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6100cc6101df366004612016565b610a52565b6101416101f2366004611ef8565b610a61565b6100cc610205366004612040565b610a6d565b610141610218366004612016565b610a88565b6100cc61022b366004612016565b610a9c565b670de0b6b3a7640000856001600160801b031610158015610263575068056bc75e2d63100000856001600160801b031611155b6102ef5760405162461bcd60e51b815260206004820152604c60248201527f6d756c7469706c696572206d7573742062652067726561746572206f7220657160448201527f75616c207468616e203165313820616e64206c6f776572206f7220657175616c60648201526b040e8d0c2dc40626060ca62760a31b608482015260a4015b60405180910390fd5b60006103b27f000000000000000000000000000000000000000000000000000000000000000089338a8a6103558b8b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa792505050565b6040805160208101979097526001600160a01b03958616908701529284166060860152921660808401526001600160801b0390911660a083015260c082015260e00160405160208183030381529060405280519060200120610b35565b905060006103f68285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b8392505050565b9050886001600160a01b0316816001600160a01b03161461044d5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016102e6565b6001600160a01b03891660009081526006602052604090205460ff16156104ac5760405162461bcd60e51b815260206004820152601360248201527213919508185b1c9958591e4818db185a5b5959606a1b60448201526064016102e6565b6040516bffffffffffffffffffffffff1960608b901b1660208201526fffffffffffffffffffffffffffffffff19608089901b1660348201526000906044016040516020818303038152906040528051906020012090506105458188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060079493925050610ba79050565b6105815760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016102e6565b6001600160a01b038a166000908152600660205260408120805460ff191660011790556105ae8133610c2f565b90506105e633670de0b6b3a764000083602001516105cc9190612092565b606084015160009291906001600160801b038e1690610d3d565b506001600160a01b038a161580159061060857506001600160a01b038a163314155b1561062157610621338b8b6001600160801b0316610e81565b5050505050505050505050565b6106596040518060800160405280600081526020016000815260200160008152602001600081525090565b610664600083610c2f565b92915050565b6001600160a01b038116600090815260046020526040812060609161068e82610f52565b90508067ffffffffffffffff8111156106a9576106a96120a5565b6040519080825280602002602001820160405280156106ee57816020015b60408051808201909152600080825260208201528152602001906001900390816106c75790505b50925060005b8181101561075d576000806107098584610f5d565b915091506040518060400160405280836001600160a01b031681526020018281525086848151811061073d5761073d6120bb565b602002602001018190525050508080610755906120d1565b9150506106f4565b505050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107df5760405163c55ddc9760e01b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016102e6565b670de0b6b3a7640000816001600160801b031610156108405760405162461bcd60e51b815260206004820181905260248201527f6d756c7469706c6965722063616e6e6f74206265206c657373207468616e203160448201526064016102e6565b6801158e460913d00000816001600160801b031611156108ac5760405162461bcd60e51b815260206004820152602160248201527f6d756c7469706c6965722063616e6e6f74206265206d6f7265207468616e20326044820152600360fc1b60648201526084016102e6565b60005b82811015610a4c5760006108eb8585848181106108ce576108ce6120bb565b90506020020160208101906108e39190611ef8565b600090610c2f565b9050670de0b6b3a7640000816020015110156109545760405162461bcd60e51b815260206004820152602260248201527f616c6c207573657273206d7573742068617665206174206c656173742031204e604482015261119560f21b60648201526084016102e6565b826001600160801b03168160400151106109b05760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520766f74696e6720706f7765720000000060448201526064016102e6565b60006109bb82610f7b565b90506000610a088787868181106109d4576109d46120bb565b90506020020160208101906109e99190611ef8565b6020850151606086015160009291906001600160801b038a1690610d3d565b905081610a1482610f7b565b610a1e91906120ea565b60056000828254610a2f9190612092565b925050819055505050508080610a44906120d1565b9150506108af565b50505050565b610a5d338383610e81565b5050565b60006106648242610a88565b610a78338483610fa7565b610a83338383610e81565b505050565b6000610a9581848461103b565b9392505050565b610a5d338383610fa7565b6000606060005b8351811015610b265781848281518110610aca57610aca6120bb565b6020026020010151604051602001610ae491815260200190565b60408051601f1981840301815290829052610b0292916020016120fd565b60405160208183030381529060405291508080610b1e906120d1565b915050610aae565b50805160209091012092915050565b6000610664610b426110ec565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b928585611213565b91509150610b9f81611255565b509392505050565b600082815b8351811015610c225760008083868481518110610bcb57610bcb6120bb565b60200260200101519150915080821115610be157905b604080516020810184905290810182905260600160405160208183030381529060405280519060200120935050508080610c1a906120d1565b915050610bac565b5084541490509392505050565b610c5a6040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083529192909190849084015b82821015610ce8578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610c8e565b5050505090508051600003610d0757610cff6113a2565b915050610664565b8060018251610d1691906120ea565b81518110610d2657610d266120bb565b6020026020010151915050610664565b5092915050565b610d686040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03851660009081526020878152604080832081516080810183524281529283018890529082018690526060820185905291610daa8989610c2f565b805190915042148015610dbd5750825415155b15610e2257825482908490610dd4906001906120ea565b81548110610de457610de46120bb565b906000526020600020906004020160008201518160000155602082015181600101556040820151816002015560608201518160030155905050610e75565b6001600160a01b038816600090815260208a815260408083208054600181810183559185529383902086516004909502019384559185015191830191909155830151600282015560608301516003909101555b50979650505050505050565b6001600160a01b038216610ed75760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f742064656c656761746520746f203020616464726573730000000060448201526064016102e6565b610ee460008484846113fe565b6001600160a01b03831660009081526004602052604081208190610f0890856115e9565b91509150600082610f195783610f23565b610f238483612092565b6001600160a01b0387166000908152600460205260409020909150610f49908683611601565b50505050505050565b60006106648261161f565b6000808080610f6c868661162a565b909450925050505b9250929050565b60008160600151610f9d8360400151846020015161165590919063ffffffff16565b610664919061212c565b610fb46000848484611674565b6001600160a01b0383166000908152600460205260408120610fd69084611857565b9050818103611007576001600160a01b0384166000908152600460205260409020611001908461186c565b50610a4c565b6110348361101584846120ea565b6001600160a01b03871660009081526004602052604090209190611601565b5050505050565b6001600160a01b038216600090815260208481526040808320805482518185028101850190935280835284936110d793929190859084015b828210156110cd578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190611073565b5050505084611881565b9150506110e381610f7b565b95945050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561114557507f000000000000000000000000000000000000000000000000000000000000000046145b1561116f57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036112495760208301516040840151606085015160001a61123d878285856118c7565b94509450505050610f74565b50600090506002610f74565b600081600481111561126957611269612154565b036112715750565b600181600481111561128557611285612154565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102e6565b60028160048111156112e6576112e6612154565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102e6565b600381600481111561134757611347612154565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102e6565b50565b6113cd6040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001670de0b6b3a764000081526020016000815250905090565b600061140a8585610c2f565b6001600160a01b03851660009081526002870160209081526040808320549084015191840151939450919261143e91611655565b61144891906120ea565b90508281101561149a5760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e742062616c616e636520746f2064656c656761746560448201526064016102e6565b6001600160a01b0384166000908152600387016020526040812080548592906114c4908490612092565b90915550506001600160a01b0385166000908152600287016020526040812080548592906114f3908490612092565b90915550506001600160a01b038086166000908152600188016020908152604080832093881683529290529081208054859290611531908490612092565b90915550506020820151604083015161155a9187916115508a8461198b565b8a93929190610d3d565b5060006115678786610c2f565b9050611594858260200151836040015161158a898c61198b90919063ffffffff16565b8b93929190610d3d565b50604080516001600160a01b038089168252871660208201529081018590527fff825f9424124effc5ce1d9f4803d58ede8a2bda4da2324810f74834715c4c599060600160405180910390a150505050505050565b6000808080610f6c866001600160a01b0387166119bd565b6000611617846001600160a01b038516846119f7565b949350505050565b600061066482611a14565b600080806116388585611a1e565b600081815260029690960160205260409095205494959350505050565b6000670de0b6b3a764000061166a838561216a565b610a959190612181565b6001600160a01b0380841660009081526001860160209081526040808320938616835292905220548111156116fd5760405162461bcd60e51b815260206004820152602960248201527f7573657220686173206e6f742064656c65676174656420656e6f75676820746f6044820152682064656c656761746560b81b60648201526084016102e6565b6001600160a01b0382166000908152600385016020526040812080548392906117279084906120ea565b90915550506001600160a01b0383166000908152600285016020526040812080548392906117569084906120ea565b90915550506001600160a01b0380841660009081526001860160209081526040808320938616835292905290812080548392906117949084906120ea565b90915550600090506117a68585610c2f565b90506117d384826020015183604001516117c9888a61198b90919063ffffffff16565b8993929190610d3d565b5060006117e08685610c2f565b90506118038482602001518360400151611550888b61198b90919063ffffffff16565b50604080516001600160a01b038088168252861660208201529081018490527fde5aa493a93d4351631c1991a0aeecfd52d6b51cf1b61f1a3c48f97e268086539060600160405180910390a1505050505050565b6000610a95836001600160a01b038416611a2a565b6000610a95836001600160a01b038416611a9a565b60006118ae6040518060800160405280600081526020016000815260200160008152602001600081525090565b6118bc848460008751611ab7565b915091509250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118fe5750600090506003611982565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611952573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661197b57600060019250925050611982565b9150600090505b94509492505050565b6001600160a01b038116600090815260028301602090815260408083205460038601909252822054610a9591906121a3565b60008181526002830160205260408120548190806119ec576119df8585611c09565b925060009150610f749050565b600192509050610f74565b600082815260028401602052604081208290556116178484611c15565b6000610664825490565b6000610a958383611c21565b600081815260028301602052604081205480151580611a4e5750611a4e8484611c09565b610a955760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016102e6565b60008181526002830160205260408120819055610a958383611c4b565b6000611ae46040518060800160405280600081526020016000815260200160008152602001600081525090565b828410611afe576000611af56113a2565b91509150611982565b611b0884846120ea565b600103611b56576000868581518110611b2357611b236120bb565b602002602001015190508581600001511115611b48576000611b436113a2565b611b4c565b6001815b9250925050611982565b60006002611b648686612092565b611b6e9190612181565b9050600087611b7e6001846120ea565b81518110611b8e57611b8e6120bb565b602002602001015190506000888381518110611bac57611bac6120bb565b6020026020010151905087826000015111158015611bca5750805188105b15611bdd57506001935091506119829050565b80518810611bfd57611bf189898589611ab7565b94509450505050611982565b611bf189898986611ab7565b6000610a958383611c57565b6000610a958383611c6f565b6000826000018281548110611c3857611c386120bb565b9060005260206000200154905092915050565b6000610a958383611cbe565b60008181526001830160205260408120541515610a95565b6000818152600183016020526040812054611cb657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610664565b506000610664565b60008181526001830160205260408120548015611da7576000611ce26001836120ea565b8554909150600090611cf6906001906120ea565b9050818114611d5b576000866000018281548110611d1657611d166120bb565b9060005260206000200154905080876000018481548110611d3957611d396120bb565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d6c57611d6c6121c3565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610664565b6000915050610664565b80356001600160a01b0381168114611dc857600080fd5b919050565b80356001600160801b0381168114611dc857600080fd5b60008083601f840112611df657600080fd5b50813567ffffffffffffffff811115611e0e57600080fd5b6020830191508360208260051b8501011115610f7457600080fd5b600080600080600080600060a0888a031215611e4457600080fd5b611e4d88611db1565b9650611e5b60208901611db1565b9550611e6960408901611dcd565b9450606088013567ffffffffffffffff80821115611e8657600080fd5b611e928b838c01611de4565b909650945060808a0135915080821115611eab57600080fd5b818a0191508a601f830112611ebf57600080fd5b813581811115611ece57600080fd5b8b6020828501011115611ee057600080fd5b60208301945080935050505092959891949750929550565b600060208284031215611f0a57600080fd5b610a9582611db1565b602080825282518282018190526000919060409081850190868401855b82811015611f5e57815180516001600160a01b03168552860151868501529284019290850190600101611f30565b5091979650505050505050565b600080600060408486031215611f8057600080fd5b833567ffffffffffffffff811115611f9757600080fd5b611fa386828701611de4565b9094509250611fb6905060208501611dcd565b90509250925092565b60005b83811015611fda578181015183820152602001611fc2565b50506000910152565b6020815260008251806020840152612002816040850160208701611fbf565b601f01601f19169190910160400192915050565b6000806040838503121561202957600080fd5b61203283611db1565b946020939093013593505050565b60008060006060848603121561205557600080fd5b61205e84611db1565b925061206c60208501611db1565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156106645761066461207c565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016120e3576120e361207c565b5060010190565b818103818111156106645761066461207c565b6000835161210f818460208801611fbf565b835190830190612123818360208801611fbf565b01949350505050565b808201828112600083128015821682158216171561214c5761214c61207c565b505092915050565b634e487b7160e01b600052602160045260246000fd5b80820281158282048414176106645761066461207c565b60008261219e57634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610d3657610d3661207c565b634e487b7160e01b600052603160045260246000fdfea264697066735822122077182fd021ef9033c8e6c9fa242ff17d96499424938370a1ebc7da22f84e4d0b64736f6c63430008110033", "bytecodeSha1": "0e4054506ab721b4a54587d198e510da50fb9092", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.17+commit.8df45f5f"}, "contractName": "FoundingMemberVault", "coverageMap": {"branches": {"0": {}, "1": {"ECDSA._throwError": {"95": [638, 667, false], "96": [734, 772, false], "97": [843, 887, false], "98": [965, 1004, false]}, "ECDSA.tryRecover": {"94": [2263, 2285, false], "99": [6106, 6185, false], "100": [6412, 6432, false]}}, "10": {"NFTVault.updateMultiplier": {"105": [1056, 1075, true], "106": [1130, 1150, true], "107": [1389, 1427, true], "108": [1534, 1573, true]}}, "11": {}, "12": {}, "15": {"Merkle.isProofValid": {"104": [477, 489, false]}}, "16": {}, "17": {"VotingPowerHistory._binarySearch": {"114": [3105, 3123, false], "115": [3192, 3214, false], "116": [3288, 3300, true], "117": [3521, 3540, false], "118": [3544, 3562, false], "119": [3624, 3643, false]}, "VotingPowerHistory.currentRecord": {"109": [2561, 2580, false]}, "VotingPowerHistory.delegateVote": {"112": [4202, 4231, true]}, "VotingPowerHistory.undelegateVote": {"113": [5106, 5146, true]}, "VotingPowerHistory.updateVotingPower": {"110": [1876, 1908, false], "111": [1912, 1931, false]}}, "2": {"EIP712._domainSeparatorV4": {"101": [3228, 3257, false], "102": [3261, 3294, false]}}, "3": {}, "6": {"NFTVault.updateMultiplier": {"103": [211, 230, false]}}, "7": {"BaseDelegatingVault._delegateVote": {"91": [1972, 1988, true], "92": [2178, 2184, true]}, "BaseDelegatingVault._undelegateVote": {"93": [2510, 2527, false]}}, "8": {}, "9": {"FoundingMemberVault.claimNFT": {"84": [1341, 1359, false], "85": [1363, 1383, true], "86": [1894, 1914, true], "87": [1955, 1974, true], "88": [2091, 2127, true], "89": [2491, 2513, false], "90": [2517, 2539, false]}}}, "statements": {"0": {}, "1": {"ECDSA._throwError": {"55": [788, 822], "56": [903, 944], "57": [1020, 1064]}, "ECDSA.recover": {"31": [3837, 3855], "32": [3865, 3881]}, "ECDSA.toTypedDataHash": {"30": [8453, 8528]}, "ECDSA.tryRecover": {"53": [2739, 2771], "54": [2802, 2858], "75": [6201, 6252], "76": [6448, 6498], "77": [6519, 6556]}}, "10": {"NFTVault.getRawVotingPower": {"24": [747, 793]}, "NFTVault.getTotalRawVotingPower": {"0": [889, 911]}, "NFTVault.updateMultiplier": {"14": [1048, 1112], "15": [1122, 1188], "16": [1364, 1495], "17": [1509, 1635], "18": [1998, 2052], "19": [1233, 1236]}}, "11": {}, "12": {}, "15": {"Merkle.isProofValid": {"33": [491, 520], "34": [534, 581], "35": [383, 386], "36": [602, 627]}}, "16": {"ScaledMath.mulDown": {"66": [220, 240]}}, "17": {"VotingPowerHistory._binarySearch": {"79": [3139, 3167], "80": [3281, 3338], "81": [3578, 3603], "82": [3659, 3708], "83": [3739, 3790]}, "VotingPowerHistory.binarySearch": {"74": [2844, 2896]}, "VotingPowerHistory.currentRecord": {"37": [2596, 2615], "38": [2646, 2680]}, "VotingPowerHistory.delegateVote": {"59": [4181, 4289], "60": [4300, 4338], "61": [4348, 4390], "62": [4400, 4440], "63": [4451, 4632], "64": [4703, 4876], "65": [4887, 4924]}, "VotingPowerHistory.getVotingPower": {"49": [2336, 2357]}, "VotingPowerHistory.netDelegatedVotingPower": {"78": [6062, 6172]}, "VotingPowerHistory.total": {"45": [736, 898]}, "VotingPowerHistory.undelegateVote": {"67": [5085, 5213], "68": [5224, 5262], "69": [5272, 5314], "70": [5324, 5364], "71": [5440, 5621], "72": [5692, 5865], "73": [5876, 5915]}, "VotingPowerHistory.updateVotingPower": {"39": [1947, 1992], "40": [2023, 2062], "41": [2082, 2102]}, "VotingPowerHistory.zeroRecord": {"58": [462, 644]}}, "2": {"EIP712._buildDomainSeparator": {"51": [3625, 3716]}, "EIP712._domainSeparatorV4": {"50": [3310, 3341], "52": [3372, 3443]}, "EIP712._hashTypedDataV4": {"29": [4444, 4506]}}, "3": {}, "6": {}, "7": {"BaseDelegatingVault._delegateVote": {"42": [1964, 2021], "43": [2031, 2069], "44": [2222, 2266]}, "BaseDelegatingVault._undelegateVote": {"46": [2395, 2435], "47": [2543, 2579], "48": [2642, 2693]}, "BaseDelegatingVault.changeDelegate": {"22": [1200, 1250], "23": [1260, 1308]}, "BaseDelegatingVault.delegateVote": {"20": [869, 914]}, "BaseDelegatingVault.getDelegations": {"10": [1605, 1650], "11": [1774, 1829], "12": [1689, 1692], "13": [1849, 1867]}, "BaseDelegatingVault.undelegateVote": {"25": [1006, 1053]}}, "8": {"BaseVault.getCurrentRecord": {"9": [517, 554]}, "BaseVault.getRawVotingPower": {"21": [667, 717]}}, "9": {"FoundingMemberVault._encodeProof": {"26": [2813, 2864], "27": [2794, 2797], "28": [2884, 2908]}, "FoundingMemberVault.claimNFT": {"2": [1320, 1485], "3": [1886, 1936], "4": [1947, 1998], "5": [2083, 2145], "6": [2156, 2181], "7": [2300, 2476], "8": [2555, 2602]}, "FoundingMemberVault.getVaultType": {"1": [2993, 3011]}}}}, "dependencies": ["BaseDelegatingVault", "BaseVault", "node_modules/@openzeppelin/ECDSA", "node_modules/@openzeppelin/EIP712", "IDelegatingVault", "IVault", "ImmutableOwner", "node_modules/@openzeppelin/Math", "Merkle", "NFTVault", "ScaledMath", "node_modules/@openzeppelin/Strings", "VotingPowerHistory"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610192578063926f7327146101d15780639f1acf08146101e4578063cead0481146101f7578063de1ec4031461020a578063e2fcf5501461021d57600080fd5b80630ddf940d146100b957806319ad0eba146100ce57806331cc13ba1461011d578063344ff1d01461013d57806371fbcca51461014f57806375baf37f14610162575b600080fd5b6100cc6100c7366004611e29565b610230565b005b6100e16100dc366004611ef8565b61062e565b60405161011491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b61013061012b366004611ef8565b61066a565b6040516101149190611f13565b6005545b604051908152602001610114565b6100cc61015d366004611f6b565b610765565b604080518082018252600e81526d2337bab73234b733a6b2b6b132b960911b602082015290516101149190611fe3565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6100cc6101df366004612016565b610a52565b6101416101f2366004611ef8565b610a61565b6100cc610205366004612040565b610a6d565b610141610218366004612016565b610a88565b6100cc61022b366004612016565b610a9c565b670de0b6b3a7640000856001600160801b031610158015610263575068056bc75e2d63100000856001600160801b031611155b6102ef5760405162461bcd60e51b815260206004820152604c60248201527f6d756c7469706c696572206d7573742062652067726561746572206f7220657160448201527f75616c207468616e203165313820616e64206c6f776572206f7220657175616c60648201526b040e8d0c2dc40626060ca62760a31b608482015260a4015b60405180910390fd5b60006103b27f000000000000000000000000000000000000000000000000000000000000000089338a8a6103558b8b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa792505050565b6040805160208101979097526001600160a01b03958616908701529284166060860152921660808401526001600160801b0390911660a083015260c082015260e00160405160208183030381529060405280519060200120610b35565b905060006103f68285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b8392505050565b9050886001600160a01b0316816001600160a01b03161461044d5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016102e6565b6001600160a01b03891660009081526006602052604090205460ff16156104ac5760405162461bcd60e51b815260206004820152601360248201527213919508185b1c9958591e4818db185a5b5959606a1b60448201526064016102e6565b6040516bffffffffffffffffffffffff1960608b901b1660208201526fffffffffffffffffffffffffffffffff19608089901b1660348201526000906044016040516020818303038152906040528051906020012090506105458188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060079493925050610ba79050565b6105815760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016102e6565b6001600160a01b038a166000908152600660205260408120805460ff191660011790556105ae8133610c2f565b90506105e633670de0b6b3a764000083602001516105cc9190612092565b606084015160009291906001600160801b038e1690610d3d565b506001600160a01b038a161580159061060857506001600160a01b038a163314155b1561062157610621338b8b6001600160801b0316610e81565b5050505050505050505050565b6106596040518060800160405280600081526020016000815260200160008152602001600081525090565b610664600083610c2f565b92915050565b6001600160a01b038116600090815260046020526040812060609161068e82610f52565b90508067ffffffffffffffff8111156106a9576106a96120a5565b6040519080825280602002602001820160405280156106ee57816020015b60408051808201909152600080825260208201528152602001906001900390816106c75790505b50925060005b8181101561075d576000806107098584610f5d565b915091506040518060400160405280836001600160a01b031681526020018281525086848151811061073d5761073d6120bb565b602002602001018190525050508080610755906120d1565b9150506106f4565b505050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107df5760405163c55ddc9760e01b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016102e6565b670de0b6b3a7640000816001600160801b031610156108405760405162461bcd60e51b815260206004820181905260248201527f6d756c7469706c6965722063616e6e6f74206265206c657373207468616e203160448201526064016102e6565b6801158e460913d00000816001600160801b031611156108ac5760405162461bcd60e51b815260206004820152602160248201527f6d756c7469706c6965722063616e6e6f74206265206d6f7265207468616e20326044820152600360fc1b60648201526084016102e6565b60005b82811015610a4c5760006108eb8585848181106108ce576108ce6120bb565b90506020020160208101906108e39190611ef8565b600090610c2f565b9050670de0b6b3a7640000816020015110156109545760405162461bcd60e51b815260206004820152602260248201527f616c6c207573657273206d7573742068617665206174206c656173742031204e604482015261119560f21b60648201526084016102e6565b826001600160801b03168160400151106109b05760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520766f74696e6720706f7765720000000060448201526064016102e6565b60006109bb82610f7b565b90506000610a088787868181106109d4576109d46120bb565b90506020020160208101906109e99190611ef8565b6020850151606086015160009291906001600160801b038a1690610d3d565b905081610a1482610f7b565b610a1e91906120ea565b60056000828254610a2f9190612092565b925050819055505050508080610a44906120d1565b9150506108af565b50505050565b610a5d338383610e81565b5050565b60006106648242610a88565b610a78338483610fa7565b610a83338383610e81565b505050565b6000610a9581848461103b565b9392505050565b610a5d338383610fa7565b6000606060005b8351811015610b265781848281518110610aca57610aca6120bb565b6020026020010151604051602001610ae491815260200190565b60408051601f1981840301815290829052610b0292916020016120fd565b60405160208183030381529060405291508080610b1e906120d1565b915050610aae565b50805160209091012092915050565b6000610664610b426110ec565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b928585611213565b91509150610b9f81611255565b509392505050565b600082815b8351811015610c225760008083868481518110610bcb57610bcb6120bb565b60200260200101519150915080821115610be157905b604080516020810184905290810182905260600160405160208183030381529060405280519060200120935050508080610c1a906120d1565b915050610bac565b5084541490509392505050565b610c5a6040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083529192909190849084015b82821015610ce8578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610c8e565b5050505090508051600003610d0757610cff6113a2565b915050610664565b8060018251610d1691906120ea565b81518110610d2657610d266120bb565b6020026020010151915050610664565b5092915050565b610d686040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03851660009081526020878152604080832081516080810183524281529283018890529082018690526060820185905291610daa8989610c2f565b805190915042148015610dbd5750825415155b15610e2257825482908490610dd4906001906120ea565b81548110610de457610de46120bb565b906000526020600020906004020160008201518160000155602082015181600101556040820151816002015560608201518160030155905050610e75565b6001600160a01b038816600090815260208a815260408083208054600181810183559185529383902086516004909502019384559185015191830191909155830151600282015560608301516003909101555b50979650505050505050565b6001600160a01b038216610ed75760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f742064656c656761746520746f203020616464726573730000000060448201526064016102e6565b610ee460008484846113fe565b6001600160a01b03831660009081526004602052604081208190610f0890856115e9565b91509150600082610f195783610f23565b610f238483612092565b6001600160a01b0387166000908152600460205260409020909150610f49908683611601565b50505050505050565b60006106648261161f565b6000808080610f6c868661162a565b909450925050505b9250929050565b60008160600151610f9d8360400151846020015161165590919063ffffffff16565b610664919061212c565b610fb46000848484611674565b6001600160a01b0383166000908152600460205260408120610fd69084611857565b9050818103611007576001600160a01b0384166000908152600460205260409020611001908461186c565b50610a4c565b6110348361101584846120ea565b6001600160a01b03871660009081526004602052604090209190611601565b5050505050565b6001600160a01b038216600090815260208481526040808320805482518185028101850190935280835284936110d793929190859084015b828210156110cd578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190611073565b5050505084611881565b9150506110e381610f7b565b95945050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561114557507f000000000000000000000000000000000000000000000000000000000000000046145b1561116f57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036112495760208301516040840151606085015160001a61123d878285856118c7565b94509450505050610f74565b50600090506002610f74565b600081600481111561126957611269612154565b036112715750565b600181600481111561128557611285612154565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102e6565b60028160048111156112e6576112e6612154565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102e6565b600381600481111561134757611347612154565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102e6565b50565b6113cd6040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001670de0b6b3a764000081526020016000815250905090565b600061140a8585610c2f565b6001600160a01b03851660009081526002870160209081526040808320549084015191840151939450919261143e91611655565b61144891906120ea565b90508281101561149a5760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e742062616c616e636520746f2064656c656761746560448201526064016102e6565b6001600160a01b0384166000908152600387016020526040812080548592906114c4908490612092565b90915550506001600160a01b0385166000908152600287016020526040812080548592906114f3908490612092565b90915550506001600160a01b038086166000908152600188016020908152604080832093881683529290529081208054859290611531908490612092565b90915550506020820151604083015161155a9187916115508a8461198b565b8a93929190610d3d565b5060006115678786610c2f565b9050611594858260200151836040015161158a898c61198b90919063ffffffff16565b8b93929190610d3d565b50604080516001600160a01b038089168252871660208201529081018590527fff825f9424124effc5ce1d9f4803d58ede8a2bda4da2324810f74834715c4c599060600160405180910390a150505050505050565b6000808080610f6c866001600160a01b0387166119bd565b6000611617846001600160a01b038516846119f7565b949350505050565b600061066482611a14565b600080806116388585611a1e565b600081815260029690960160205260409095205494959350505050565b6000670de0b6b3a764000061166a838561216a565b610a959190612181565b6001600160a01b0380841660009081526001860160209081526040808320938616835292905220548111156116fd5760405162461bcd60e51b815260206004820152602960248201527f7573657220686173206e6f742064656c65676174656420656e6f75676820746f6044820152682064656c656761746560b81b60648201526084016102e6565b6001600160a01b0382166000908152600385016020526040812080548392906117279084906120ea565b90915550506001600160a01b0383166000908152600285016020526040812080548392906117569084906120ea565b90915550506001600160a01b0380841660009081526001860160209081526040808320938616835292905290812080548392906117949084906120ea565b90915550600090506117a68585610c2f565b90506117d384826020015183604001516117c9888a61198b90919063ffffffff16565b8993929190610d3d565b5060006117e08685610c2f565b90506118038482602001518360400151611550888b61198b90919063ffffffff16565b50604080516001600160a01b038088168252861660208201529081018490527fde5aa493a93d4351631c1991a0aeecfd52d6b51cf1b61f1a3c48f97e268086539060600160405180910390a1505050505050565b6000610a95836001600160a01b038416611a2a565b6000610a95836001600160a01b038416611a9a565b60006118ae6040518060800160405280600081526020016000815260200160008152602001600081525090565b6118bc848460008751611ab7565b915091509250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118fe5750600090506003611982565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611952573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661197b57600060019250925050611982565b9150600090505b94509492505050565b6001600160a01b038116600090815260028301602090815260408083205460038601909252822054610a9591906121a3565b60008181526002830160205260408120548190806119ec576119df8585611c09565b925060009150610f749050565b600192509050610f74565b600082815260028401602052604081208290556116178484611c15565b6000610664825490565b6000610a958383611c21565b600081815260028301602052604081205480151580611a4e5750611a4e8484611c09565b610a955760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016102e6565b60008181526002830160205260408120819055610a958383611c4b565b6000611ae46040518060800160405280600081526020016000815260200160008152602001600081525090565b828410611afe576000611af56113a2565b91509150611982565b611b0884846120ea565b600103611b56576000868581518110611b2357611b236120bb565b602002602001015190508581600001511115611b48576000611b436113a2565b611b4c565b6001815b9250925050611982565b60006002611b648686612092565b611b6e9190612181565b9050600087611b7e6001846120ea565b81518110611b8e57611b8e6120bb565b602002602001015190506000888381518110611bac57611bac6120bb565b6020026020010151905087826000015111158015611bca5750805188105b15611bdd57506001935091506119829050565b80518810611bfd57611bf189898589611ab7565b94509450505050611982565b611bf189898986611ab7565b6000610a958383611c57565b6000610a958383611c6f565b6000826000018281548110611c3857611c386120bb565b9060005260206000200154905092915050565b6000610a958383611cbe565b60008181526001830160205260408120541515610a95565b6000818152600183016020526040812054611cb657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610664565b506000610664565b60008181526001830160205260408120548015611da7576000611ce26001836120ea565b8554909150600090611cf6906001906120ea565b9050818114611d5b576000866000018281548110611d1657611d166120bb565b9060005260206000200154905080876000018481548110611d3957611d396120bb565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d6c57611d6c6121c3565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610664565b6000915050610664565b80356001600160a01b0381168114611dc857600080fd5b919050565b80356001600160801b0381168114611dc857600080fd5b60008083601f840112611df657600080fd5b50813567ffffffffffffffff811115611e0e57600080fd5b6020830191508360208260051b8501011115610f7457600080fd5b600080600080600080600060a0888a031215611e4457600080fd5b611e4d88611db1565b9650611e5b60208901611db1565b9550611e6960408901611dcd565b9450606088013567ffffffffffffffff80821115611e8657600080fd5b611e928b838c01611de4565b909650945060808a0135915080821115611eab57600080fd5b818a0191508a601f830112611ebf57600080fd5b813581811115611ece57600080fd5b8b6020828501011115611ee057600080fd5b60208301945080935050505092959891949750929550565b600060208284031215611f0a57600080fd5b610a9582611db1565b602080825282518282018190526000919060409081850190868401855b82811015611f5e57815180516001600160a01b03168552860151868501529284019290850190600101611f30565b5091979650505050505050565b600080600060408486031215611f8057600080fd5b833567ffffffffffffffff811115611f9757600080fd5b611fa386828701611de4565b9094509250611fb6905060208501611dcd565b90509250925092565b60005b83811015611fda578181015183820152602001611fc2565b50506000910152565b6020815260008251806020840152612002816040850160208701611fbf565b601f01601f19169190910160400192915050565b6000806040838503121561202957600080fd5b61203283611db1565b946020939093013593505050565b60008060006060848603121561205557600080fd5b61205e84611db1565b925061206c60208501611db1565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156106645761066461207c565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016120e3576120e361207c565b5060010190565b818103818111156106645761066461207c565b6000835161210f818460208801611fbf565b835190830190612123818360208801611fbf565b01949350505050565b808201828112600083128015821682158216171561214c5761214c61207c565b505092915050565b634e487b7160e01b600052602160045260246000fd5b80820281158282048414176106645761066461207c565b60008261219e57634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610d3657610d3661207c565b634e487b7160e01b600052603160045260246000fdfea264697066735822122077182fd021ef9033c8e6c9fa242ff17d96499424938370a1ebc7da22f84e4d0b64736f6c63430008110033", "deployedSourceMap": "391:2629:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:1490;;;;;;:::i;:::-;;:::i;:::-;;393:168:8;;;;;;:::i;:::-;;:::i;:::-;;;;;;2296:13:18;;2278:32;;2366:4;2354:17;;;2348:24;2326:20;;;2319:54;2429:4;2417:17;;;2411:24;2389:20;;;2382:54;2492:4;2480:17;;;2474:24;2452:20;;;2445:54;;;;2265:3;2250:19;;2083:422;393:168:8;;;;;;;;1321:553:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;806:112:10:-;896:15;;806:112;;;3481:25:18;;;3469:2;3454:18;806:112:10;3335:177:18;924:1145:10;;;;;;:::i;:::-;;:::i;2921:97:9:-;3000:11;;;;;;;;;;;-1:-1:-1;;;3000:11:9;;;;2921:97;;;;3000:11;2921:97;:::i;139:30:6:-;;;;;;;;-1:-1:-1;;;;;4853:32:18;;;4835:51;;4823:2;4808:18;139:30:6;4689:203:18;792:129:7;;;;;;:::i;:::-;;:::i;567:157:8:-;;;;;;:::i;:::-;;:::i;1066:249:7:-;;;;;;:::i;:::-;;:::i;616:184:10:-;;;;;;:::i;:::-;;:::i;927:133:7:-;;;;;;:::i;:::-;;:::i;1129:1490:9:-;1355:4;1341:10;-1:-1:-1;;;;;1341:18:9;;;:42;;;;;1377:6;1363:10;-1:-1:-1;;;;;1363:20:9;;;1341:42;1320:165;;;;-1:-1:-1;;;1320:165:9;;5691:2:18;1320:165:9;;;5673:21:18;5730:2;5710:18;;;5703:30;5769:34;5749:18;;;5742:62;5840:34;5820:18;;;5813:62;-1:-1:-1;;;5891:19:18;;;5884:43;5944:19;;1320:165:9;;;;;;;;;1496:12;1511:306;1600:10;1632:8;1662:10;1694:8;1724:10;1756:19;1769:5;;1756:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1756:12:9;;-1:-1:-1;;;1756:19:9:i;:::-;1568:225;;;;;;6261:25:18;;;;-1:-1:-1;;;;;6360:15:18;;;6340:18;;;6333:43;6412:15;;;6392:18;;;6385:43;6464:15;;6444:18;;;6437:43;-1:-1:-1;;;;;6517:47:18;;;6496:19;;;6489:76;6581:19;;;6574:35;6233:19;;1568:225:9;;;;;;;;;;;;1541:266;;;;;;1511:16;:306::i;:::-;1496:321;;1827:16;1846:30;1860:4;1866:9;;1846:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1846:13:9;;-1:-1:-1;;;1846:30:9:i;:::-;1827:49;;1906:8;-1:-1:-1;;;;;1894:20:9;:8;-1:-1:-1;;;;;1894:20:9;;1886:50;;;;-1:-1:-1;;;1886:50:9;;6822:2:18;1886:50:9;;;6804:21:18;6861:2;6841:18;;;6834:30;-1:-1:-1;;;6880:18:18;;;6873:47;6937:18;;1886:50:9;6620:341:18;1886:50:9;-1:-1:-1;;;;;1956:18:9;;;;;;:8;:18;;;;;;;;1955:19;1947:51;;;;-1:-1:-1;;;1947:51:9;;7168:2:18;1947:51:9;;;7150:21:18;7207:2;7187:18;;;7180:30;-1:-1:-1;;;7226:18:18;;;7219:49;7285:18;;1947:51:9;6966:343:18;1947:51:9;2034:38;;-1:-1:-1;;7491:2:18;7487:15;;;7483:53;2034:38:9;;;7471:66:18;-1:-1:-1;;7575:3:18;7571:16;;;7567:62;7553:12;;;7546:84;2009:12:9;;7646::18;;2034:38:9;;;;;;;;;;;;2024:49;;;;;;2009:64;;2091:36;2115:4;2121:5;;2091:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2091:10:9;;:36;;-1:-1:-1;;2091:23:9;:36;-1:-1:-1;2091:36:9:i;:::-;2083:62;;;;-1:-1:-1;;;2083:62:9;;7871:2:18;2083:62:9;;;7853:21:18;7910:2;7890:18;;;7883:30;-1:-1:-1;;;7929:18:18;;;7922:43;7982:18;;2083:62:9;7669:337:18;2083:62:9;-1:-1:-1;;;;;2156:18:9;;;;;;:8;:18;;;;;:25;;-1:-1:-1;;2156:25:9;2177:4;2156:25;;;2235:55;2156:18;2270:10;2235:21;:55::i;:::-;2192:98;;2300:176;2339:10;128:4:16;2363:7:9;:23;;;:40;;;;:::i;:::-;2441:25;;;;2300:7;;:176;;-1:-1:-1;;;;;2300:176:9;;;:25;:176::i;:::-;-1:-1:-1;;;;;;2491:22:9;;;;;;:48;;-1:-1:-1;;;;;;2517:22:9;;2529:10;2517:22;;2491:48;2487:126;;;2555:47;2569:10;2581:8;2591:10;-1:-1:-1;;;;;2555:47:9;:13;:47::i;:::-;1310:1309;;;;1129:1490;;;;;;;:::o;393:168:8:-;473:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:32:8;524:30;:7;546;524:21;:30::i;:::-;517:37;393:168;-1:-1:-1;;393:168:8:o;1321:553:7:-;-1:-1:-1;;;;;1503:50:7;;1452:48;1503:50;;;:19;:50;;;;;1399:41;;1577:18;1503:50;1577:16;:18::i;:::-;1563:32;;1646:3;1619:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1619:31:7;;;;;;;;;;;;;;;;1605:45;;1665:9;1660:180;1684:3;1680:1;:7;1660:180;;;1709:16;;1745:15;:9;1758:1;1745:12;:15::i;:::-;1708:52;;;;1791:38;;;;;;;;1812:8;-1:-1:-1;;;;;1791:38:7;;;;;1822:6;1791:38;;;1774:11;1786:1;1774:14;;;;;;;;:::i;:::-;;;;;;:55;;;;1694:146;;1689:3;;;;;:::i;:::-;;;;1660:180;;;;1849:18;;1321:553;;;:::o;924:1145:10:-;211:10:6;-1:-1:-1;;;;;225:5:6;211:19;;207:71;;239:39;;-1:-1:-1;;;239:39:6;;260:10;239:39;;;8889:34:18;-1:-1:-1;;;;;272:5:6;8959:15:18;8939:18;;;8932:43;8824:18;;239:39:6;8677:304:18;207:71:6;1071:4:10::1;1056:11;-1:-1:-1::0;;;;;1056:19:10::1;;;1048:64;;;::::0;-1:-1:-1;;;1048:64:10;;9188:2:18;1048:64:10::1;::::0;::::1;9170:21:18::0;;;9207:18;;;9200:30;9266:34;9246:18;;;9239:62;9318:18;;1048:64:10::1;8986:356:18::0;1048:64:10::1;1145:5;1130:11;-1:-1:-1::0;;;;;1130:20:10::1;;;1122:66;;;::::0;-1:-1:-1;;;1122:66:10;;9549:2:18;1122:66:10::1;::::0;::::1;9531:21:18::0;9588:2;9568:18;;;9561:30;9627:34;9607:18;;;9600:62;-1:-1:-1;;;9678:18:18;;;9671:31;9719:19;;1122:66:10::1;9347:397:18::0;1122:66:10::1;1203:6;1198:865;1215:16:::0;;::::1;1198:865;;;1252:47;1302:48;1341:5;;1347:1;1341:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1302:7;::::0;:38:::1;:48::i;:::-;1252:98;;1423:4;1389:14;:30;;;:38;;1364:131;;;::::0;-1:-1:-1;;;1364:131:10;;9951:2:18;1364:131:10::1;::::0;::::1;9933:21:18::0;9990:2;9970:18;;;9963:30;10029:34;10009:18;;;10002:62;-1:-1:-1;;;10080:18:18;;;10073:32;10122:19;;1364:131:10::1;9749:398:18::0;1364:131:10::1;1562:11;-1:-1:-1::0;;;;;1534:39:10::1;:14;:25;;;:39;1509:126;;;::::0;-1:-1:-1;;;1509:126:10;;10354:2:18;1509:126:10::1;::::0;::::1;10336:21:18::0;10393:2;10373:18;;;10366:30;10432;10412:18;;;10405:58;10480:18;;1509:126:10::1;10152:352:18::0;1509:126:10::1;1650:16;1669:22;:14;:20;:22::i;:::-;1650:41;;1705:47;1755:229;1819:5;;1825:1;1819:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1849:30;::::0;::::1;::::0;1934:32:::1;::::0;::::1;::::0;1755:7:::1;::::0;:229;1849:30;-1:-1:-1;;;;;1755:229:10;::::1;::::0;:42:::1;:229::i;:::-;1705:279;;2043:8;2018:22;:14;:20;:22::i;:::-;:33;;;;:::i;:::-;1998:15;;:54;;;;;;;:::i;:::-;;;;;;;;1238:825;;;1233:3;;;;;:::i;:::-;;;;1198:865;;;;924:1145:::0;;;:::o;792:129:7:-;869:45;883:10;895:9;906:7;869:13;:45::i;:::-;792:129;;:::o;567:157:8:-;648:7;674:43;692:7;701:15;674:17;:43::i;1066:249:7:-;1200:50;1216:10;1228:12;1242:7;1200:15;:50::i;:::-;1260:48;1274:10;1286:12;1300:7;1260:13;:48::i;:::-;1066:249;;;:::o;616:184:10:-;728:7;754:39;728:7;777:4;783:9;754:22;:39::i;:::-;747:46;616:184;-1:-1:-1;;;616:184:10:o;927:133:7:-;1006:47;1022:10;1034:9;1045:7;1006:15;:47::i;2625:290:9:-;2708:7;2727:19;2761:9;2756:119;2780:5;:12;2776:1;:16;2756:119;;;2835:6;2854:5;2860:1;2854:8;;;;;;;;:::i;:::-;;;;;;;2843:20;;;;;;3481:25:18;;3469:2;3454:18;;3335:177;2843:20:9;;;;-1:-1:-1;;2843:20:9;;;;;;;;;;2822:42;;;2843:20;2822:42;;:::i;:::-;;;;;;;;;;;;;2813:51;;2794:3;;;;;:::i;:::-;;;;2756:119;;;-1:-1:-1;2891:17:9;;;;;;;;2625:290;-1:-1:-1;;2625:290:9:o;4348:165:2:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:1;;-1:-1:-1;;;8470:57:1;;;12409:27:18;12452:11;;;12445:27;;;12488:12;;;12481:28;;;8434:7:1;;12525:12:18;;8470:57:1;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;3661:227;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:1;3661:227;-1:-1:-1;;;3661:227:1:o;140:494:15:-;286:4;317:9;286:4;336:256;360:14;:21;356:1;:25;336:256;;;403:12;417:13;435:4;441:14;456:1;441:17;;;;;;;;:::i;:::-;;;;;;;402:57;;;;484:5;477:4;:12;473:47;;;508:5;473:47;551:29;;;;;;11478:19:18;;;11513:12;;;11506:28;;;11550:12;;551:29:15;;;;;;;;;;;;541:40;;;;;;534:47;;388:204;;383:3;;;;;:::i;:::-;;;;336:256;;;-1:-1:-1;617:10:15;;609:18;;-1:-1:-1;140:494:15;;;;;:::o;2370:327:17:-;2477:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:13:17;-1:-1:-1;;;;;2528:19:17;;2502:23;2528:19;;;;;;;;;;;2502:45;;;;;;;;;;;;;;;;;;;2528:19;;2502:45;:23;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:7;:14;2579:1;2561:19;2557:134;;2603:12;:10;:12::i;:::-;2596:19;;;;;2557:134;2653:7;2678:1;2661:7;:14;:18;;;;:::i;:::-;2653:27;;;;;;;;:::i;:::-;;;;;;;2646:34;;;;;2557:134;2492:205;2370:327;;;;:::o;1302:807::-;1503:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1503:13:17;-1:-1:-1;;;;;1556:19:17;;1528:25;1556:19;;;;;;;;;;;1615:183;;;;;;;1640:15;1615:183;;;;;;;;;;;;;;;;;;;;1556:19;1835:27;1556:7;1570:4;1835:21;:27::i;:::-;1876:13;;1808:54;;-1:-1:-1;1893:15:17;1876:32;:55;;;;-1:-1:-1;1912:15:17;;:19;;1876:55;1872:201;;;1956:15;;1979:13;;1947:8;;1956:19;;1974:1;;1956:19;:::i;:::-;1947:29;;;;;;;;:::i;:::-;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:201;;;-1:-1:-1;;;;;2023:19:17;;:13;:19;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:201;-1:-1:-1;2089:13:17;1302:807;-1:-1:-1;;;;;;;1302:807:17:o;1880:393:7:-;-1:-1:-1;;;;;1972:16:7;;1964:57;;;;-1:-1:-1;;;1964:57:7;;11775:2:18;1964:57:7;;;11757:21:18;11814:2;11794:18;;;11787:30;11853;11833:18;;;11826:58;11901:18;;1964:57:7;11573:352:18;1964:57:7;2031:38;:7;2052:4;2058:2;2062:6;2031:20;:38::i;:::-;-1:-1:-1;;;;;2112:25:7;;2080:11;2112:25;;;:19;:25;;;;;2080:11;;2112:36;;2145:2;2112:32;:36::i;:::-;2079:69;;;;2158:17;2178:6;:34;;2206:6;2178:34;;;2187:16;2197:6;2187:7;:16;:::i;:::-;-1:-1:-1;;;;;2222:25:7;;;;;;:19;:25;;;;;2158:54;;-1:-1:-1;2222:44:7;;2252:2;2158:54;2222:29;:44::i;:::-;;1954:319;;;1880:393;;;:::o;12614:120:4:-;12683:7;12709:18;12716:3;12709:6;:18::i;13071:232::-;13151:7;;;;13210:21;13213:3;13225:5;13210:2;:21::i;:::-;13179:52;;-1:-1:-1;13179:52:4;-1:-1:-1;;;13071:232:4;;;;;;:::o;657:248:17:-;717:7;860:6;:24;;;787:49;818:6;:17;;;787:6;:22;;;:30;;:49;;;;:::i;:::-;780:104;;;;:::i;2279:431:7:-;2395:40;:7;2418:4;2424:2;2428:6;2395:22;:40::i;:::-;-1:-1:-1;;;;;2463:25:7;;2445:15;2463:25;;;:19;:25;;;;;:33;;2493:2;2463:29;:33::i;:::-;2445:51;;2521:6;2510:7;:17;2506:198;;-1:-1:-1;;;;;2543:25:7;;;;;;:19;:25;;;;;:36;;2576:2;2543:32;:36::i;:::-;;2506:198;;;2642:51;2672:2;2676:16;2686:6;2676:7;:16;:::i;:::-;-1:-1:-1;;;;;2642:25:7;;;;;;:19;:25;;;;;;:51;:29;:51::i;:::-;;2385:325;2279:431;;;:::o;2115:249:17:-;-1:-1:-1;;;;;2302:19:17;;2243:7;2302:19;;;;;;;;;;;2289:37;;;;;;;;;;;;;;;;;2243:7;;2289:37;;;2302:19;2289:37;2243:7;;2289:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2323:2;2289:12;:37::i;:::-;2262:64;;;2343:14;:6;:12;:14::i;:::-;2336:21;2115:249;-1:-1:-1;;;;;2115:249:17:o;3152:308:2:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:2;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:2;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:2;;;3401:10;3642:73;;;;15601:25:18;;;;3413:12:2;15642:18:18;;;15635:34;3427:15:2;15685:18:18;;;15678:34;3686:13:2;15728:18:18;;;15721:34;3709:4:2;15771:19:18;;;;15764:61;;;;3642:73:2;;;;;;;;;;15573:19:18;;;;3642:73:2;;;3632:84;;;;;;3152:308::o;2145:730:1:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:1;;-1:-1:-1;2822:35:1;2802:56;;570:511;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:1;;12882:2:18;788:34:1;;;12864:21:18;12921:2;12901:18;;;12894:30;12960:26;12940:18;;;12933:54;13004:18;;788:34:1;12680:348:18;730:345:1;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:1;;13235:2:18;903:41:1;;;13217:21:18;13274:2;13254:18;;;13247:30;13313:33;13293:18;;;13286:61;13364:18;;903:41:1;13033:355:18;839:236:1;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:1;;13595:2:18;1020:44:1;;;13577:21:18;13634:2;13614:18;;;13607:30;13673:34;13653:18;;;13646:62;-1:-1:-1;;;13724:18:18;;;13717:32;13766:19;;1020:44:1;13393:398:18;961:114:1;570:511;:::o;392:259:17:-;437:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;437:13:17;481:163;;;;;;;;510:1;481:163;;;;546:1;481:163;;;;128:4:16;481:163:17;;;;628:1;481:163;;;462:182;;392:259;:::o;3813:1118::-;3959:25;3987:27;:7;4009:4;3987:21;:27::i;:::-;-1:-1:-1;;;;;4139:32:17;;4025:27;4139:32;;;:26;;;:32;;;;;;;;;4104:22;;;;4055:27;;;;3959:55;;-1:-1:-1;4025:27:17;;4055:81;;:35;:81::i;:::-;:116;;;;:::i;:::-;4025:146;;4225:6;4202:19;:29;;4181:108;;;;-1:-1:-1;;;4181:108:17;;13998:2:18;4181:108:17;;;13980:21:18;;;14017:18;;;14010:30;14076:34;14056:18;;;14049:62;14128:18;;4181:108:17;13796:356:18;4181:108:17;-1:-1:-1;;;;;4300:28:17;;;;;;:24;;;:28;;;;;:38;;4332:6;;4300:28;:38;;4332:6;;4300:38;:::i;:::-;;;;-1:-1:-1;;;;;;;4348:32:17;;;;;;:26;;;:32;;;;;:42;;4384:6;;4348:32;:42;;4384:6;;4348:42;:::i;:::-;;;;-1:-1:-1;;;;;;;4400:26:17;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;;:40;;4434:6;;4400:26;:40;;4434:6;;4400:40;:::i;:::-;;;;-1:-1:-1;;4508:27:17;;;;4549:22;;;;4451:181;;4490:4;;4585:37;:7;4490:4;4585:31;:37::i;:::-;4451:7;;:181;;;:25;:181::i;:::-;-1:-1:-1;4642:23:17;4668:25;:7;4690:2;4668:21;:25::i;:::-;4642:51;;4703:173;4742:2;4758:9;:25;;;4797:9;:20;;;4831:35;4863:2;4831:7;:31;;:35;;;;:::i;:::-;4703:7;;:173;;;:25;:173::i;:::-;-1:-1:-1;4892:32:17;;;-1:-1:-1;;;;;14415:15:18;;;14397:34;;14467:15;;14462:2;14447:18;;14440:43;14499:18;;;14492:34;;;4892:32:17;;14347:2:18;14332:18;4892:32:17;;;;;;;3949:982;;;3813:1118;;;;:::o;13444:238:4:-;13526:4;;;;13583:50;13590:3;-1:-1:-1;;;;;13610:21:4;;13583:6;:50::i;11758:212::-;11877:4;11900:63;11904:3;-1:-1:-1;;;;;11924:21:4;;11956:5;11900:3;:63::i;:::-;11893:70;11758:212;-1:-1:-1;;;;11758:212:4:o;3380:123::-;3452:7;3478:18;:3;:16;:18::i;3856:191::-;3939:7;;;3981:19;:3;3994:5;3981:12;:19::i;:::-;4023:16;;;;:11;;;;;:16;;;;;;;;;3856:191;-1:-1:-1;;;;3856:191:4:o;139:108:16:-;201:7;128:4;228:5;232:1;228;:5;:::i;:::-;227:13;;;;:::i;4937:985:17:-;-1:-1:-1;;;;;5106:26:17;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;:40;-1:-1:-1;5106:40:17;5085:128;;;;-1:-1:-1;;;5085:128:17;;15134:2:18;5085:128:17;;;15116:21:18;15173:2;15153:18;;;15146:30;15212:34;15192:18;;;15185:62;-1:-1:-1;;;15263:18:18;;;15256:39;15312:19;;5085:128:17;14932:405:18;5085:128:17;-1:-1:-1;;;;;5224:28:17;;;;;;:24;;;:28;;;;;:38;;5256:6;;5224:28;:38;;5256:6;;5224:38;:::i;:::-;;;;-1:-1:-1;;;;;;;5272:32:17;;;;;;:26;;;:32;;;;;:42;;5308:6;;5272:32;:42;;5308:6;;5272:42;:::i;:::-;;;;-1:-1:-1;;;;;;;5324:26:17;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;;:40;;5358:6;;5324:26;:40;;5358:6;;5324:40;:::i;:::-;;;;-1:-1:-1;5375:25:17;;-1:-1:-1;5403:27:17;:7;5425:4;5403:21;:27::i;:::-;5375:55;;5440:181;5479:4;5497:11;:27;;;5538:11;:22;;;5574:37;5606:4;5574:7;:31;;:37;;;;:::i;:::-;5440:7;;:181;;;:25;:181::i;:::-;-1:-1:-1;5631:23:17;5657:25;:7;5679:2;5657:21;:25::i;:::-;5631:51;;5692:173;5731:2;5747:9;:25;;;5786:9;:20;;;5820:35;5852:2;5820:7;:31;;:35;;;;:::i;5692:173::-;-1:-1:-1;5881:34:17;;;-1:-1:-1;;;;;14415:15:18;;;14397:34;;14467:15;;14462:2;14447:18;;14440:43;14499:18;;;14492:34;;;5881::17;;14347:2:18;14332:18;5881:34:17;;;;;;;5075:847;;4937:985;;;;:::o;13833:168:4:-;13912:7;13946:47;13950:3;-1:-1:-1;;;;;13970:21:4;;13946:3;:47::i;12129:157::-;12206:4;12229:50;12236:3;-1:-1:-1;;;;;12256:21:4;;12229:6;:50::i;2703:200:17:-;2807:10;2819:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:13:17;2851:45;2865:7;2874:2;2878:1;2881:7;:14;2851:13;:45::i;:::-;2844:52;;;;2703:200;;;;;:::o;5069:1494:1:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:1;;-1:-1:-1;6221:30:1;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;16063:25:18;;;16136:4;16124:17;;16104:18;;;16097:45;;;;16158:18;;;16151:34;;;16201:18;;;16194:34;;;6374:24:1;;16035:19:18;;6374:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:1;;-1:-1:-1;;6374:24:1;;;-1:-1:-1;;;;;;;6412:20:1;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:1;;-1:-1:-1;5069:1494:1;;;;;;;;:::o;5928:251:17:-;-1:-1:-1;;;;;6140:31:17;;6044:6;6140:31;;;:26;;;:31;;;;;;;;;6088:24;;;:29;;;;;;6081:91;;6140:31;6081:91;:::i;4188:298:4:-;4273:4;4314:16;;;:11;;;:16;;;;;;4273:4;;4314:16;4340:140;;4387:18;4396:3;4401;4387:8;:18::i;:::-;4379:39;-1:-1:-1;4415:1:4;;-1:-1:-1;4379:39:4;;-1:-1:-1;4379:39:4;4340:140;4457:4;;-1:-1:-1;4463:5:4;-1:-1:-1;4449:20:4;;2535:204;2657:4;2673:16;;;:11;;;:16;;;;;:24;;;2714:18;2673:3;2685;2714:13;:18::i;6631:115:5:-;6694:7;6720:19;6728:3;4537:18;;4455:107;7088:129;7162:7;7188:22;7192:3;7204:5;7188:3;:22::i;4637:247:4:-;4719:7;4754:16;;;:11;;;:16;;;;;;4788:10;;;;:32;;;4802:18;4811:3;4816;4802:8;:18::i;:::-;4780:75;;;;-1:-1:-1;;;4780:75:4;;16646:2:18;4780:75:4;;;16628:21:18;16685:2;16665:18;;;16658:30;16724:32;16704:18;;;16697:60;16774:18;;4780:75:4;16444:354:18;2907:164:4;2987:4;3010:16;;;:11;;;:16;;;;;3003:23;;;3043:21;3010:3;3022;3043:16;:21::i;2909:898:17:-;3064:10;3076:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3076:13:17;3117:6;3105:8;:18;3101:77;;3147:5;3154:12;:10;:12::i;:::-;3139:28;;;;;;3101:77;3192:17;3201:8;3192:6;:17;:::i;:::-;3213:1;3192:22;3188:161;;3230:17;3250:7;3258:8;3250:17;;;;;;;;:::i;:::-;;;;;;;3230:37;;3298:2;3288:3;:6;;;:12;;:50;;3318:5;3325:12;:10;:12::i;:::-;3288:50;;;3304:4;3310:3;3288:50;3281:57;;;;;;;3188:161;3359:14;3398:1;3377:17;3386:8;3377:6;:17;:::i;:::-;3376:23;;;;:::i;:::-;3359:40;-1:-1:-1;3409:24:17;3436:7;3444:10;3453:1;3359:40;3444:10;:::i;:::-;3436:19;;;;;;;;:::i;:::-;;;;;;;3409:46;;3465:24;3492:7;3500:6;3492:15;;;;;;;;:::i;:::-;;;;;;;3465:42;;3538:2;3521:10;:13;;;:19;;:41;;;;-1:-1:-1;3549:13:17;;3544:18;;3521:41;3517:284;;;-1:-1:-1;3586:4:17;;-1:-1:-1;3592:10:17;-1:-1:-1;3578:25:17;;-1:-1:-1;3578:25:17;3517:284;3624:13;;:19;-1:-1:-1;3620:181:17;;3666:42;3680:7;3689:2;3693:6;3701;3666:13;:42::i;:::-;3659:49;;;;;;;;;3620:181;3746:44;3760:7;3769:2;3773:8;3783:6;3746:13;:44::i;3150:140:4:-;3237:4;3260:23;:3;3279;3260:18;:23::i;5911:123:5:-;5981:4;6004:23;6009:3;6021:5;6004:4;:23::i;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;6202:129::-;6275:4;6298:26;6306:3;6318:5;6298:7;:26::i;6412:138::-;6492:4;4343:19;;;:12;;;:19;;;;;;:24;;6515:28;4247:127;2206:404;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:5;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:5;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:5;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;14:173:18;82:20;;-1:-1:-1;;;;;131:31:18;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:188::-;260:20;;-1:-1:-1;;;;;309:46:18;;299:57;;289:85;;370:1;367;360:12;385:367;448:8;458:6;512:3;505:4;497:6;493:17;489:27;479:55;;530:1;527;520:12;479:55;-1:-1:-1;553:20:18;;596:18;585:30;;582:50;;;628:1;625;618:12;582:50;665:4;657:6;653:17;641:29;;725:3;718:4;708:6;705:1;701:14;693:6;689:27;685:38;682:47;679:67;;;742:1;739;732:12;757:1130;890:6;898;906;914;922;930;938;991:3;979:9;970:7;966:23;962:33;959:53;;;1008:1;1005;998:12;959:53;1031:29;1050:9;1031:29;:::i;:::-;1021:39;;1079:38;1113:2;1102:9;1098:18;1079:38;:::i;:::-;1069:48;;1136:38;1170:2;1159:9;1155:18;1136:38;:::i;:::-;1126:48;;1225:2;1214:9;1210:18;1197:32;1248:18;1289:2;1281:6;1278:14;1275:34;;;1305:1;1302;1295:12;1275:34;1344:70;1406:7;1397:6;1386:9;1382:22;1344:70;:::i;:::-;1433:8;;-1:-1:-1;1318:96:18;-1:-1:-1;1521:3:18;1506:19;;1493:33;;-1:-1:-1;1538:16:18;;;1535:36;;;1567:1;1564;1557:12;1535:36;1605:8;1594:9;1590:24;1580:34;;1652:7;1645:4;1641:2;1637:13;1633:27;1623:55;;1674:1;1671;1664:12;1623:55;1714:2;1701:16;1740:2;1732:6;1729:14;1726:34;;;1756:1;1753;1746:12;1726:34;1801:7;1796:2;1787:6;1783:2;1779:15;1775:24;1772:37;1769:57;;;1822:1;1819;1812:12;1769:57;1853:2;1849;1845:11;1835:21;;1875:6;1865:16;;;;;757:1130;;;;;;;;;;:::o;1892:186::-;1951:6;2004:2;1992:9;1983:7;1979:23;1975:32;1972:52;;;2020:1;2017;2010:12;1972:52;2043:29;2062:9;2043:29;:::i;2510:820::-;2737:2;2789:21;;;2859:13;;2762:18;;;2881:22;;;2708:4;;2737:2;2922;;2940:18;;;;2981:15;;;2708:4;3024:280;3038:6;3035:1;3032:13;3024:280;;;3097:13;;3139:9;;-1:-1:-1;;;;;3135:35:18;3123:48;;3211:11;;3205:18;3191:12;;;3184:40;3244:12;;;;3279:15;;;;3167:1;3053:9;3024:280;;;-1:-1:-1;3321:3:18;;2510:820;-1:-1:-1;;;;;;;2510:820:18:o;3517:511::-;3612:6;3620;3628;3681:2;3669:9;3660:7;3656:23;3652:32;3649:52;;;3697:1;3694;3687:12;3649:52;3737:9;3724:23;3770:18;3762:6;3759:30;3756:50;;;3802:1;3799;3792:12;3756:50;3841:70;3903:7;3894:6;3883:9;3879:22;3841:70;:::i;:::-;3930:8;;-1:-1:-1;3815:96:18;-1:-1:-1;3984:38:18;;-1:-1:-1;4018:2:18;4003:18;;3984:38;:::i;:::-;3974:48;;3517:511;;;;;:::o;4033:250::-;4118:1;4128:113;4142:6;4139:1;4136:13;4128:113;;;4218:11;;;4212:18;4199:11;;;4192:39;4164:2;4157:10;4128:113;;;-1:-1:-1;;4275:1:18;4257:16;;4250:27;4033:250::o;4288:396::-;4437:2;4426:9;4419:21;4400:4;4469:6;4463:13;4512:6;4507:2;4496:9;4492:18;4485:34;4528:79;4600:6;4595:2;4584:9;4580:18;4575:2;4567:6;4563:15;4528:79;:::i;:::-;4668:2;4647:15;-1:-1:-1;;4643:29:18;4628:45;;;;4675:2;4624:54;;4288:396;-1:-1:-1;;4288:396:18:o;4897:254::-;4965:6;4973;5026:2;5014:9;5005:7;5001:23;4997:32;4994:52;;;5042:1;5039;5032:12;4994:52;5065:29;5084:9;5065:29;:::i;:::-;5055:39;5141:2;5126:18;;;;5113:32;;-1:-1:-1;;;4897:254:18:o;5156:328::-;5233:6;5241;5249;5302:2;5290:9;5281:7;5277:23;5273:32;5270:52;;;5318:1;5315;5308:12;5270:52;5341:29;5360:9;5341:29;:::i;:::-;5331:39;;5389:38;5423:2;5412:9;5408:18;5389:38;:::i;:::-;5379:48;;5474:2;5463:9;5459:18;5446:32;5436:42;;5156:328;;;;;:::o;8011:127::-;8072:10;8067:3;8063:20;8060:1;8053:31;8103:4;8100:1;8093:15;8127:4;8124:1;8117:15;8143:125;8208:9;;;8229:10;;;8226:36;;;8242:18;;:::i;8273:127::-;8334:10;8329:3;8325:20;8322:1;8315:31;8365:4;8362:1;8355:15;8389:4;8386:1;8379:15;8405:127;8466:10;8461:3;8457:20;8454:1;8447:31;8497:4;8494:1;8487:15;8521:4;8518:1;8511:15;8537:135;8576:3;8597:17;;;8594:43;;8617:18;;:::i;:::-;-1:-1:-1;8664:1:18;8653:13;;8537:135::o;10509:128::-;10576:9;;;10597:11;;;10594:37;;;10611:18;;:::i;10824:492::-;10999:3;11037:6;11031:13;11053:66;11112:6;11107:3;11100:4;11092:6;11088:17;11053:66;:::i;:::-;11182:13;;11141:16;;;;11204:70;11182:13;11141:16;11251:4;11239:17;;11204:70;:::i;:::-;11290:20;;10824:492;-1:-1:-1;;;;10824:492:18:o;11930:216::-;11994:9;;;12022:11;;;11969:3;12052:9;;12080:10;;12076:19;;12105:10;;12097:19;;12073:44;12070:70;;;12120:18;;:::i;:::-;12070:70;;11930:216;;;;:::o;12548:127::-;12609:10;12604:3;12600:20;12597:1;12590:31;12640:4;12637:1;12630:15;12664:4;12661:1;12654:15;14537:168;14610:9;;;14641;;14658:15;;;14652:22;;14638:37;14628:71;;14679:18;;:::i;14710:217::-;14750:1;14776;14766:132;;14820:10;14815:3;14811:20;14808:1;14801:31;14855:4;14852:1;14845:15;14883:4;14880:1;14873:15;14766:132;-1:-1:-1;14912:9:18;;14710:217::o;16239:200::-;16305:9;;;16278:4;16333:9;;16361:10;;16373:12;;;16357:29;16396:12;;;16388:21;;16354:56;16351:82;;;16413:18;;:::i;16803:127::-;16864:10;16859:3;16855:20;16852:1;16845:31;16895:4;16892:1;16885:15;16919:4;16916:1;16909:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {}, "version": 1}, "offset": [391, 3020], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x926F7327 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x9F1ACF08 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCEAD0481 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xDE1EC403 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xE2FCF550 EQ PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDDF940D EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x19AD0EBA EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x31CC13BA EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x344FF1D0 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x71FBCCA5 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x75BAF37F EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F6B JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x2337BAB73234B733A6B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH2 0x1B9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x2040 JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x141 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI POP PUSH9 0x56BC75E2D63100000 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO JUMPDEST PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C696572206D7573742062652067726561746572206F72206571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75616C207468616E203165313820616E64206C6F776572206F7220657175616C PUSH1 0x64 DUP3 ADD MSTORE PUSH12 0x40E8D0C2DC40626060CA627 PUSH1 0xA3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B2 PUSH32 0x0 DUP10 CALLER DUP11 DUP11 PUSH2 0x355 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xAA7 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP1 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x60 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F6 DUP3 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xB83 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13919508185B1C9958591E4818DB185A5B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x80 DUP10 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x545 DUP2 DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x7 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0xBA7 SWAP1 POP JUMP JUMPDEST PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x5AE DUP2 CALLER PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP PUSH2 0x5E6 CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP15 AND SWAP1 PUSH2 0xD3D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x608 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x621 JUMPI PUSH2 0x621 CALLER DUP12 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xE81 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x659 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x664 PUSH1 0x0 DUP4 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x68E DUP3 PUSH2 0xF52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6EE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6C7 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 PUSH2 0x709 DUP6 DUP5 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x755 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6F4 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xC55DDC97 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C6965722063616E6E6F74206265206C657373207468616E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH9 0x1158E460913D00000 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C6965722063616E6E6F74206265206D6F7265207468616E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 PUSH2 0x8EB DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x8CE JUMPI PUSH2 0x8CE PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C6C207573657273206D7573742068617665206174206C656173742031204E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1195 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH1 0x40 ADD MLOAD LT PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420646563726561736520766F74696E6720706F77657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BB DUP3 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA08 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x9D4 JUMPI PUSH2 0x9D4 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND SWAP1 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xA14 DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xA44 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA5D CALLER DUP4 DUP4 PUSH2 0xE81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP3 TIMESTAMP PUSH2 0xA88 JUMP JUMPDEST PUSH2 0xA78 CALLER DUP5 DUP4 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0xA83 CALLER DUP4 DUP4 PUSH2 0xE81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP2 DUP5 DUP5 PUSH2 0x103B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA5D CALLER DUP4 DUP4 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB26 JUMPI DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xACA JUMPI PUSH2 0xACA PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xB02 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP DUP1 DUP1 PUSH2 0xB1E SWAP1 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAE JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 PUSH2 0xB42 PUSH2 0x10EC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB92 DUP6 DUP6 PUSH2 0x1213 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB9F DUP2 PUSH2 0x1255 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 DUP4 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBCB JUMPI PUSH2 0xBCB PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBE1 JUMPI SWAP1 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xC1A SWAP1 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAC JUMP JUMPDEST POP DUP5 SLOAD EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC5A PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCE8 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC8E JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD07 JUMPI PUSH2 0xCFF PUSH2 0x13A2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x664 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0xD16 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD26 JUMPI PUSH2 0xD26 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP PUSH2 0x664 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD68 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE TIMESTAMP DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH2 0xDAA DUP10 DUP10 PUSH2 0xC2F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP TIMESTAMP EQ DUP1 ISZERO PUSH2 0xDBD JUMPI POP DUP3 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE22 JUMPI DUP3 SLOAD DUP3 SWAP1 DUP5 SWAP1 PUSH2 0xDD4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x20EA JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xDE4 JUMPI PUSH2 0xDE4 PUSH2 0x20BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP7 MLOAD PUSH1 0x4 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 DUP6 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742064656C656761746520746F2030206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xEE4 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0xF08 SWAP1 DUP6 PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH2 0xF19 JUMPI DUP4 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0xF23 DUP5 DUP4 PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xF49 SWAP1 DUP7 DUP4 PUSH2 0x1601 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP3 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF6C DUP7 DUP7 PUSH2 0x162A JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0xF9D DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1655 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH2 0xFB4 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xFD6 SWAP1 DUP5 PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x1007 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1001 SWAP1 DUP5 PUSH2 0x186C JUMP JUMPDEST POP PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x1034 DUP4 PUSH2 0x1015 DUP5 DUP5 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 PUSH2 0x10D7 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10CD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1073 JUMP JUMPDEST POP POP POP POP DUP5 PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E3 DUP2 PUSH2 0xF7B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1145 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x116F JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x1249 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x123D DUP8 DUP3 DUP6 DUP6 PUSH2 0x18C7 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xF74 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x1269 PUSH2 0x2154 JUMP JUMPDEST SUB PUSH2 0x1271 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1285 JUMPI PUSH2 0x1285 PUSH2 0x2154 JUMP JUMPDEST SUB PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12E6 JUMPI PUSH2 0x12E6 PUSH2 0x2154 JUMP JUMPDEST SUB PUSH2 0x1333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1347 PUSH2 0x2154 JUMP JUMPDEST SUB PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13CD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A DUP6 DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH2 0x143E SWAP2 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x1448 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742062616C616E636520746F2064656C6567617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x14C4 SWAP1 DUP5 SWAP1 PUSH2 0x2092 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x14F3 SWAP1 DUP5 SWAP1 PUSH2 0x2092 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1531 SWAP1 DUP5 SWAP1 PUSH2 0x2092 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x155A SWAP2 DUP8 SWAP2 PUSH2 0x1550 DUP11 DUP5 PUSH2 0x198B JUMP JUMPDEST DUP11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1567 DUP8 DUP7 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP PUSH2 0x1594 DUP6 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x158A DUP10 DUP13 PUSH2 0x198B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xFF825F9424124EFFC5CE1D9F4803D58EDE8A2BDA4DA2324810F74834715C4C59 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF6C DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1617 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x19F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP3 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1638 DUP6 DUP6 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP7 SWAP1 SWAP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 SLOAD SWAP5 SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x166A DUP4 DUP6 PUSH2 0x216A JUMP JUMPDEST PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x16FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7573657220686173206E6F742064656C65676174656420656E6F75676820746F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2064656C6567617465 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1727 SWAP1 DUP5 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1756 SWAP1 DUP5 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1794 SWAP1 DUP5 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x17A6 DUP6 DUP6 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP PUSH2 0x17D3 DUP5 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x17C9 DUP9 DUP11 PUSH2 0x198B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x17E0 DUP7 DUP6 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP PUSH2 0x1803 DUP5 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1550 DUP9 DUP12 PUSH2 0x198B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xDE5AA493A93D4351631C1991A0AEECFD52D6B51CF1B61F1A3C48F97E26808653 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AE PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x18BC DUP5 DUP5 PUSH1 0x0 DUP8 MLOAD PUSH2 0x1AB7 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x18FE JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1952 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x197B JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x19EC JUMPI PUSH2 0x19DF DUP6 DUP6 PUSH2 0x1C09 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0xF74 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1617 DUP5 DUP5 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP4 DUP4 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1A4E JUMPI POP PUSH2 0x1A4E DUP5 DUP5 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xA95 DUP4 DUP4 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1AFE JUMPI PUSH1 0x0 PUSH2 0x1AF5 PUSH2 0x13A2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1B08 DUP5 DUP5 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x1 SUB PUSH2 0x1B56 JUMPI PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B23 JUMPI PUSH2 0x1B23 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x1B48 JUMPI PUSH1 0x0 PUSH2 0x1B43 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x1B64 DUP7 DUP7 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x1B6E SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH2 0x1B7E PUSH1 0x1 DUP5 PUSH2 0x20EA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1B8E JUMPI PUSH2 0x1B8E PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH2 0x1BAC PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP8 DUP3 PUSH1 0x0 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x1BCA JUMPI POP DUP1 MLOAD DUP9 LT JUMPDEST ISZERO PUSH2 0x1BDD JUMPI POP PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x1982 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP9 LT PUSH2 0x1BFD JUMPI PUSH2 0x1BF1 DUP10 DUP10 DUP6 DUP10 PUSH2 0x1AB7 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1BF1 DUP10 DUP10 DUP10 DUP7 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP4 DUP4 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP4 DUP4 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C38 JUMPI PUSH2 0x1C38 PUSH2 0x20BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA95 DUP4 DUP4 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1CB6 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x664 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DA7 JUMPI PUSH1 0x0 PUSH2 0x1CE2 PUSH1 0x1 DUP4 PUSH2 0x20EA JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1CF6 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1D5B JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D16 JUMPI PUSH2 0x1D16 PUSH2 0x20BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D39 JUMPI PUSH2 0x1D39 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1D6C JUMPI PUSH2 0x1D6C PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x664 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4D DUP9 PUSH2 0x1DB1 JUMP JUMPDEST SWAP7 POP PUSH2 0x1E5B PUSH1 0x20 DUP10 ADD PUSH2 0x1DB1 JUMP JUMPDEST SWAP6 POP PUSH2 0x1E69 PUSH1 0x40 DUP10 ADD PUSH2 0x1DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E92 DUP12 DUP4 DUP13 ADD PUSH2 0x1DE4 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1ECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP12 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA95 DUP3 PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F5E JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F30 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA3 DUP7 DUP3 DUP8 ADD PUSH2 0x1DE4 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1FB6 SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0x1DCD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FDA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FC2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2002 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2032 DUP4 PUSH2 0x1DB1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x205E DUP5 PUSH2 0x1DB1 JUMP JUMPDEST SWAP3 POP PUSH2 0x206C PUSH1 0x20 DUP6 ADD PUSH2 0x1DB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x207C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20E3 JUMPI PUSH2 0x20E3 PUSH2 0x207C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x210F DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1FBF JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2123 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1FBF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 SLT PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP3 AND DUP3 ISZERO DUP3 AND OR ISZERO PUSH2 0x214C JUMPI PUSH2 0x214C PUSH2 0x207C JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x219E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0xD36 JUMPI PUSH2 0xD36 PUSH2 0x207C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x182FD021EF9033C8E6C9FA242FF17D96499424938370A1EB 0xC7 0xDA 0x22 0xF8 0x4E 0x4D SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sha1": "541a25d1bdd5c65db7d56a3429b049a36b448337", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.17;\n\nimport \"./NFTVault.sol\";\nimport \"../../libraries/DataTypes.sol\";\nimport \"../../libraries/ScaledMath.sol\";\nimport \"../../libraries/Merkle.sol\";\nimport \"../../libraries/VotingPowerHistory.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract FoundingMemberVault is NFTVault, EIP712 {\n    using Merkle for Merkle.Root;\n    using VotingPowerHistory for VotingPowerHistory.History;\n\n    string internal constant _VAULT_TYPE = \"FoundingMember\";\n\n    mapping(address => bool) private _claimed;\n\n    bytes32 private immutable _TYPE_HASH =\n        keccak256(\n            \"Proof(address account,address receiver,address delegate,uint128 multiplier,bytes32[] proof)\"\n        );\n    Merkle.Root private merkleRoot;\n\n    constructor(\n        address _owner,\n        uint256 _sumVotingPowers,\n        bytes32 _merkleRoot\n    ) EIP712(\"FoundingMemberVault\", \"1\") NFTVault(_owner) {\n        sumVotingPowers = _sumVotingPowers;\n        merkleRoot = Merkle.Root(_merkleRoot);\n    }\n\n    function claimNFT(\n        address nftOwner,\n        address delegate,\n        uint128 multiplier,\n        bytes32[] calldata proof,\n        bytes calldata signature\n    ) external {\n        require(\n            multiplier >= 1e18 && multiplier <= 100e18,\n            \"multiplier must be greater or equal than 1e18 and lower or equal than 100e18\"\n        );\n\n        bytes32 hash = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _TYPE_HASH,\n                    nftOwner,\n                    msg.sender,\n                    delegate,\n                    multiplier,\n                    _encodeProof(proof)\n                )\n            )\n        );\n        address claimant = ECDSA.recover(hash, signature);\n        require(claimant == nftOwner, \"invalid signature\");\n\n        require(!_claimed[nftOwner], \"NFT already claimed\");\n\n        bytes32 node = keccak256(abi.encodePacked(nftOwner, multiplier));\n        require(merkleRoot.isProofValid(node, proof), \"invalid proof\");\n\n        _claimed[nftOwner] = true;\n\n        VotingPowerHistory.Record memory current = history.currentRecord(\n            msg.sender\n        );\n        history.updateVotingPower(\n            msg.sender,\n            current.baseVotingPower + ScaledMath.ONE,\n            multiplier,\n            current.netDelegatedVotes\n        );\n\n        if (delegate != address(0) && delegate != msg.sender) {\n            _delegateVote(msg.sender, delegate, multiplier);\n        }\n    }\n\n    function _encodeProof(\n        bytes32[] memory proof\n    ) internal pure returns (bytes32) {\n        bytes memory proofB;\n        for (uint256 i = 0; i < proof.length; i++) {\n            proofB = bytes.concat(proofB, abi.encode(proof[i]));\n        }\n        return keccak256(proofB);\n    }\n\n    function getVaultType() external pure returns (string memory) {\n        return _VAULT_TYPE;\n    }\n}\n", "sourceMap": "391:2629:9:-:0;;;699:126;652:173;;868:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2464:602:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:2;;;;;;-1:-1:-1;;;;;340:14:6;;;;2550:22:2;;;;;2606:25;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;2464:602;;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;690:25:18;;;731:18;;;724:34;;;774:18;;;767:34;;;3686:13:2;817:18:18;;;810:34;3709:4:2;860:19:18;;;853:61;3606:7:2;;662:19:18;;3642:73:2;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;;1035:15:9::2;:34:::0;;;;1092:24:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;1079:10:::2;:37:::0;-1:-1:-1;391:2629:9;;-1:-1:-1;391:2629:9;14:412:18;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:18;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;351:25;416:2;401:18;;;395:25;327:5;;351:25;;-1:-1:-1;395:25:18;14:412;-1:-1:-1;;;14:412:18:o;431:489::-;391:2629:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/vaults/FoundingMemberVault.sol", "type": "contract", "deployment": {"address": "0x7783B7eb719aA2d27F01e10C0B0Ee747ab9D2754", "chainid": "1", "blockHeight": 18778103}}