{"abi": [{"inputs": [{"internalType": "address", "name": "_owner", "type": "address"}, {"internalType": "uint256", "name": "_sumVotingPowers", "type": "uint256"}, {"internalType": "bytes32", "name": "_merkleRoot", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address", "name": "actual", "type": "address"}, {"internalType": "address", "name": "expected", "type": "address"}], "name": "NotAuthorized", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": false, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "VotesDelegated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": false, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "VotesUndelegated", "type": "event"}, {"inputs": [{"internalType": "address", "name": "_oldDelegate", "type": "address"}, {"internalType": "address", "name": "_newDelegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "changeDelegate", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "nftOwner", "type": "address"}, {"internalType": "uint128", "name": "multiplier", "type": "uint128"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}, {"internalType": "bytes", "name": "signature", "type": "bytes"}], "name": "claimNFT", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_delegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "delegateVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getDelegations", "outputs": [{"components": [{"internalType": "address", "name": "delegate", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.Delegation[]", "name": "delegations", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "name": "getRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalRawVotingPower", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_delegate", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "undelegateVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address[]", "name": "users", "type": "address[]"}, {"internalType": "uint128", "name": "_multiplier", "type": "uint128"}], "name": "updateMultiplier", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/math/Math.sol", "14": "contracts/access/ImmutableOwner.sol", "16": "contracts/vaults/BaseDelegatingVault.sol", "17": "contracts/vaults/BaseVault.sol", "18": "contracts/vaults/FoundingFrogVault.sol", "21": "contracts/vaults/NFTVault.sol", "23": "interfaces/IDelegatingVault.sol", "27": "interfaces/IVault.sol", "34": "libraries/Merkle.sol", "35": "libraries/ScaledMath.sol", "36": "libraries/VotingPowerHistory.sol", "6": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/Strings.sol", "7": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "8": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol"}, "ast": {"absolutePath": "contracts/vaults/FoundingFrogVault.sol", "exportedSymbols": {"BaseDelegatingVault": [399], "BaseVault": [4220], "DataTypes": [3517], "ECDSA": [4606], "EIP712": [4760], "EnumerableMap": [2672], "EnumerableSet": [3285], "Errors": [4245], "FoundingFrogVault": [618], "IDelegatingVault": [3337], "ITierStrategy": [5509], "IVault": [3361], "ImmutableOwner": [4907], "Math": [7412], "Merkle": [4834], "NFTVault": [1438], "ScaledMath": [4874], "Strings": [5684], "VotingPowerHistory": [4181]}, "id": 619, "license": "UNLICENSED", "nodeType": "SourceUnit", "nodes": [{"id": 401, "literals": ["solidity", "^", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "39:24:18"}, {"absolutePath": "contracts/vaults/NFTVault.sol", "file": "./NFTVault.sol", "id": 402, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 1439, "src": "65:24:18", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/DataTypes.sol", "file": "../../libraries/DataTypes.sol", "id": 403, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 3518, "src": "90:39:18", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../../libraries/ScaledMath.sol", "id": 404, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 4875, "src": "130:40:18", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Merkle.sol", "file": "../../libraries/Merkle.sol", "id": 405, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 4835, "src": "171:36:18", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/VotingPowerHistory.sol", "file": "../../libraries/VotingPowerHistory.sol", "id": 406, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 4182, "src": "208:48:18", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol", "file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol", "id": 407, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 4761, "src": "257:63:18", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol", "id": 408, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 619, "sourceUnit": 4607, "src": "321:62:18", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 409, "name": "NFTVault", "nameLocations": ["415:8:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 1438, "src": "415:8:18"}, "id": 410, "nodeType": "InheritanceSpecifier", "src": "415:8:18"}, {"baseName": {"id": 411, "name": "EIP712", "nameLocations": ["425:6:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 4760, "src": "425:6:18"}, "id": 412, "nodeType": "InheritanceSpecifier", "src": "425:6:18"}], "canonicalName": "FoundingFrogVault", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 618, "linearizedBaseContracts": [618, 4760, 1438, 4907, 399, 3337, 4220, 3361], "name": "FoundingFrogVault", "nameLocation": "394:17:18", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 416, "libraryName": {"id": 413, "name": "Merkle", "nameLocations": ["444:6:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 4834, "src": "444:6:18"}, "nodeType": "UsingForDirective", "src": "438:29:18", "typeName": {"id": 415, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 414, "name": "Merkle.Root", "nameLocations": ["455:6:18", "462:4:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 4765, "src": "455:11:18"}, "referencedDeclaration": 4765, "src": "455:11:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_storage_ptr", "typeString": "struct Merkle.Root"}}}, {"global": false, "id": 420, "libraryName": {"id": 417, "name": "VotingPowerHistory", "nameLocations": ["478:18:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 4181, "src": "478:18:18"}, "nodeType": "UsingForDirective", "src": "472:56:18", "typeName": {"id": 419, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 418, "name": "VotingPowerHistory.History", "nameLocations": ["501:18:18", "520:7:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 3601, "src": "501:26:18"}, "referencedDeclaration": 3601, "src": "501:26:18", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$3601_storage_ptr", "typeString": "struct VotingPowerHistory.History"}}}, {"constant": false, "id": 424, "mutability": "mutable", "name": "_claimed", "nameLocation": "567:8:18", "nodeType": "VariableDeclaration", "scope": 618, "src": "534:41:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 423, "keyType": {"id": 421, "name": "address", "nodeType": "ElementaryTypeName", "src": "542:7:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "534:24:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 422, "name": "bool", "nodeType": "ElementaryTypeName", "src": "553:4:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "private"}, {"constant": false, "id": 429, "mutability": "immutable", "name": "_TYPE_HASH", "nameLocation": "608:10:18", "nodeType": "VariableDeclaration", "scope": 618, "src": "582:117:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 425, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "582:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"arguments": [{"hexValue": "50726f6f662861646472657373206163636f756e742c75696e74313238206d756c7469706c6965722c627974657333325b5d2070726f6f6629", "id": 427, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "639:59:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_41fa9c09379053988d831bd54fb6ce2e7928529240ef5d5f3e7040708abd1204", "typeString": "literal_string \"Proof(address account,uint128 multiplier,bytes32[] proof)\""}, "value": "Proof(address account,uint128 multiplier,bytes32[] proof)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_41fa9c09379053988d831bd54fb6ce2e7928529240ef5d5f3e7040708abd1204", "typeString": "literal_string \"Proof(address account,uint128 multiplier,bytes32[] proof)\""}], "id": 426, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "629:9:18", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 428, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "629:70:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "private"}, {"constant": false, "id": 432, "mutability": "mutable", "name": "merkleRoot", "nameLocation": "725:10:18", "nodeType": "VariableDeclaration", "scope": 618, "src": "705:30:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_storage", "typeString": "struct Merkle.Root"}, "typeName": {"id": 431, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 430, "name": "Merkle.Root", "nameLocations": ["705:6:18", "712:4:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 4765, "src": "705:11:18"}, "referencedDeclaration": 4765, "src": "705:11:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_storage_ptr", "typeString": "struct Merkle.Root"}}, "visibility": "private"}, {"body": {"id": 459, "nodeType": "Block", "src": "897:98:18", "statements": [{"expression": {"id": 450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 448, "name": "sumVotingPowers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1304, "src": "907:15:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 449, "name": "_sumVotingPowers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "925:16:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "907:34:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 451, "nodeType": "ExpressionStatement", "src": "907:34:18"}, {"expression": {"id": 457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 452, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 432, "src": "951:10:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_storage", "typeString": "struct Merkle.Root storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 455, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "976:11:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 453, "name": "Merkle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4834, "src": "964:6:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Merkle_$4834_$", "typeString": "type(library Merkle)"}}, "id": 454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "971:4:18", "memberName": "Root", "nodeType": "MemberAccess", "referencedDeclaration": 4765, "src": "964:11:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Root_$4765_storage_ptr_$", "typeString": "type(struct Merkle.Root storage pointer)"}}, "id": 456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "964:24:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_memory_ptr", "typeString": "struct Merkle.Root memory"}}, "src": "951:37:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_storage", "typeString": "struct Merkle.Root storage ref"}}, "id": 458, "nodeType": "ExpressionStatement", "src": "951:37:18"}]}, "id": 460, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "466f756e64696e6746726f675661756c74", "id": 441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "854:19:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_14ae88fd045eb71c2cf4b5f256698f446c1242d92cb3ce4a86bae0e0ddf7ef75", "typeString": "literal_string \"FoundingFrogVault\""}, "value": "FoundingFrogVault"}, {"hexValue": "31", "id": 442, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "875:3:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}, "value": "1"}], "id": 443, "kind": "baseConstructorSpecifier", "modifierName": {"id": 440, "name": "EIP712", "nameLocations": ["847:6:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 4760, "src": "847:6:18"}, "nodeType": "ModifierInvocation", "src": "847:32:18"}, {"arguments": [{"id": 445, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 434, "src": "889:6:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 446, "kind": "baseConstructorSpecifier", "modifierName": {"id": 444, "name": "NFTVault", "nameLocations": ["880:8:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 1438, "src": "880:8:18"}, "nodeType": "ModifierInvocation", "src": "880:16:18"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 439, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 434, "mutability": "mutable", "name": "_owner", "nameLocation": "771:6:18", "nodeType": "VariableDeclaration", "scope": 460, "src": "763:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 433, "name": "address", "nodeType": "ElementaryTypeName", "src": "763:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 436, "mutability": "mutable", "name": "_sumVotingPowers", "nameLocation": "795:16:18", "nodeType": "VariableDeclaration", "scope": 460, "src": "787:24:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 435, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "787:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 438, "mutability": "mutable", "name": "_merkleRoot", "nameLocation": "829:11:18", "nodeType": "VariableDeclaration", "scope": 460, "src": "821:19:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 437, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "821:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "753:93:18"}, "returnParameters": {"id": 447, "nodeType": "ParameterList", "parameters": [], "src": "897:0:18"}, "scope": 618, "src": "742:253:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 573, "nodeType": "Block", "src": "1156:1109:18", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 473, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "1187:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "31653138", "id": 474, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1201:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "1187:18:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 476, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "1209:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "3230653138", "id": 477, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1223:5:18", "typeDescriptions": {"typeIdentifier": "t_rational_20000000000000000000_by_1", "typeString": "int_const 20000000000000000000"}, "value": "20e18"}, "src": "1209:19:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1187:41:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6d756c7469706c696572206d7573742062652067726561746572206f7220657175616c207468616e203165313820616e64206c6f776572206f7220657175616c207468616e203230653138", "id": 480, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1242:77:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_821154174ccb8e1f14d5c162aa8fa1e75e9343fbe7f9145af13532d18fefdd2d", "typeString": "literal_string \"multiplier must be greater or equal than 1e18 and lower or equal than 20e18\""}, "value": "multiplier must be greater or equal than 1e18 and lower or equal than 20e18"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_821154174ccb8e1f14d5c162aa8fa1e75e9343fbe7f9145af13532d18fefdd2d", "typeString": "literal_string \"multiplier must be greater or equal than 1e18 and lower or equal than 20e18\""}], "id": 472, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1166:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 481, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1166:163:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 482, "nodeType": "ExpressionStatement", "src": "1166:163:18"}, {"assignments": [484], "declarations": [{"constant": false, "id": 484, "mutability": "mutable", "name": "hash", "nameLocation": "1348:4:18", "nodeType": "VariableDeclaration", "scope": 573, "src": "1340:12:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 483, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1340:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 498, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"id": 489, "name": "_TYPE_HASH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "1444:10:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 490, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "1476:8:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 491, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "1506:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"arguments": [{"id": 493, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "1551:5:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "id": 492, "name": "_encodeProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "1538:12:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes32[] memory) pure returns (bytes32)"}}, "id": 494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1538:19:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 487, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1412:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 488, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "1416:6:18", "memberName": "encode", "nodeType": "MemberAccess", "src": "1412:10:18", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1412:163:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 486, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1385:9:18", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 496, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1385:204:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 485, "name": "_hashTypedDataV4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "1355:16:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$", "typeString": "function (bytes32) view returns (bytes32)"}}, "id": 497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1355:244:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1340:259:18"}, {"assignments": [500], "declarations": [{"constant": false, "id": 500, "mutability": "mutable", "name": "claimant", "nameLocation": "1617:8:18", "nodeType": "VariableDeclaration", "scope": 573, "src": "1609:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 499, "name": "address", "nodeType": "ElementaryTypeName", "src": "1609:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 506, "initialValue": {"arguments": [{"id": 503, "name": "hash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 484, "src": "1642:4:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 504, "name": "signature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "1648:9:18", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"id": 501, "name": "ECDSA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4606, "src": "1628:5:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ECDSA_$4606_$", "typeString": "type(library ECDSA)"}}, "id": 502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1634:7:18", "memberName": "recover", "nodeType": "MemberAccess", "referencedDeclaration": 4372, "src": "1628:13:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes memory) pure returns (address)"}}, "id": 505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1628:30:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "1609:49:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 508, "name": "claimant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "1676:8:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 509, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "1688:8:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1676:20:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c6964207369676e6174757265", "id": 511, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1698:19:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a", "typeString": "literal_string \"invalid signature\""}, "value": "invalid signature"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a", "typeString": "literal_string \"invalid signature\""}], "id": 507, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1668:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 512, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1668:50:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 513, "nodeType": "ExpressionStatement", "src": "1668:50:18"}, {"expression": {"arguments": [{"id": 518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1737:19:18", "subExpression": {"baseExpression": {"id": 515, "name": "_claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "1738:8:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 517, "indexExpression": {"id": 516, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "1747:8:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1738:18:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e465420616c726561647920636c61696d6564", "id": 519, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1758:21:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_46701596dcdc7e86cd8888b7ac11ee441a0383c712b82ff649d7f1f515c62759", "typeString": "literal_string \"NFT already claimed\""}, "value": "NFT already claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_46701596dcdc7e86cd8888b7ac11ee441a0383c712b82ff649d7f1f515c62759", "typeString": "literal_string \"NFT already claimed\""}], "id": 514, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1729:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 520, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1729:51:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 521, "nodeType": "ExpressionStatement", "src": "1729:51:18"}, {"assignments": [523], "declarations": [{"constant": false, "id": 523, "mutability": "mutable", "name": "node", "nameLocation": "1799:4:18", "nodeType": "VariableDeclaration", "scope": 573, "src": "1791:12:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 522, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1791:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 531, "initialValue": {"arguments": [{"arguments": [{"id": 527, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "1833:8:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 528, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "1843:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"id": 525, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1816:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 526, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "1820:12:18", "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "1816:16:18", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1816:38:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 524, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1806:9:18", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1806:49:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1791:64:18"}, {"expression": {"arguments": [{"arguments": [{"id": 535, "name": "node", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 523, "src": "1897:4:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 536, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "1903:5:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "expression": {"id": 533, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 432, "src": "1873:10:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Root_$4765_storage", "typeString": "struct Merkle.Root storage ref"}}, "id": 534, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1884:12:18", "memberName": "isProofValid", "nodeType": "MemberAccess", "referencedDeclaration": 4833, "src": "1873:23:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Root_$4765_storage_ptr_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Root_$4765_storage_ptr_$", "typeString": "function (struct Merkle.Root storage pointer,bytes32,bytes32[] memory) view returns (bool)"}}, "id": 537, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1873:36:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c69642070726f6f66", "id": 538, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1911:15:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}, "value": "invalid proof"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}], "id": 532, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1865:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 539, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1865:62:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 540, "nodeType": "ExpressionStatement", "src": "1865:62:18"}, {"expression": {"id": 545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 541, "name": "_claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "1938:8:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 543, "indexExpression": {"id": 542, "name": "nftOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "1947:8:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1938:18:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 544, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1959:4:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1938:25:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 546, "nodeType": "ExpressionStatement", "src": "1938:25:18"}, {"assignments": [551], "declarations": [{"constant": false, "id": 551, "mutability": "mutable", "name": "current", "nameLocation": "2007:7:18", "nodeType": "VariableDeclaration", "scope": 573, "src": "1974:40:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$3540_memory_ptr", "typeString": "struct VotingPowerHistory.Record"}, "typeName": {"id": 550, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 549, "name": "VotingPowerHistory.Record", "nameLocations": ["1974:18:18", "1993:6:18"], "nodeType": "IdentifierPath", "referencedDeclaration": 3540, "src": "1974:25:18"}, "referencedDeclaration": 3540, "src": "1974:25:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$3540_storage_ptr", "typeString": "struct VotingPowerHistory.Record"}}, "visibility": "internal"}], "id": 557, "initialValue": {"arguments": [{"expression": {"id": 554, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2052:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2056:6:18", "memberName": "sender", "nodeType": "MemberAccess", "src": "2052:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 552, "name": "history", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4196, "src": "2017:7:18", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$3601_storage", "typeString": "struct VotingPowerHistory.History storage ref"}}, "id": 553, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2025:13:18", "memberName": "currentRecord", "nodeType": "MemberAccess", "referencedDeclaration": 3764, "src": "2017:21:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_History_$3601_storage_ptr_$_t_address_$returns$_t_struct$_Record_$3540_memory_ptr_$bound_to$_t_struct$_History_$3601_storage_ptr_$", "typeString": "function (struct VotingPowerHistory.History storage pointer,address) view returns (struct VotingPowerHistory.Record memory)"}}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2017:55:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$3540_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "nodeType": "VariableDeclarationStatement", "src": "1974:98:18"}, {"expression": {"arguments": [{"expression": {"id": 561, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2121:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 562, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2125:6:18", "memberName": "sender", "nodeType": "MemberAccess", "src": "2121:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 563, "name": "current", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 551, "src": "2145:7:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$3540_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 564, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2153:15:18", "memberName": "baseVotingPower", "nodeType": "MemberAccess", "referencedDeclaration": 3535, "src": "2145:23:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 565, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4874, "src": "2171:10:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$4874_$", "typeString": "type(library ScaledMath)"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2182:3:18", "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 4839, "src": "2171:14:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2145:40:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 568, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "2199:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"expression": {"id": 569, "name": "current", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 551, "src": "2223:7:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$3540_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 570, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2231:17:18", "memberName": "netDelegatedVotes", "nodeType": "MemberAccess", "referencedDeclaration": 3539, "src": "2223:25:18", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 558, "name": "history", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4196, "src": "2082:7:18", "typeDescriptions": {"typeIdentifier": "t_struct$_History_$3601_storage", "typeString": "struct VotingPowerHistory.History storage ref"}}, "id": 560, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2090:17:18", "memberName": "updateVotingPower", "nodeType": "MemberAccess", "referencedDeclaration": 3697, "src": "2082:25:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_History_$3601_storage_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_struct$_Record_$3540_memory_ptr_$bound_to$_t_struct$_History_$3601_storage_ptr_$", "typeString": "function (struct VotingPowerHistory.History storage pointer,address,uint256,uint256,int256) returns (struct VotingPowerHistory.Record memory)"}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2082:176:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Record_$3540_memory_ptr", "typeString": "struct VotingPowerHistory.Record memory"}}, "id": 572, "nodeType": "ExpressionStatement", "src": "2082:176:18"}]}, "functionSelector": "9d6fdb30", "id": 574, "implemented": true, "kind": "function", "modifiers": [], "name": "claimNFT", "nameLocation": "1010:8:18", "nodeType": "FunctionDefinition", "parameters": {"id": 470, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 462, "mutability": "mutable", "name": "nftOwner", "nameLocation": "1036:8:18", "nodeType": "VariableDeclaration", "scope": 574, "src": "1028:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 461, "name": "address", "nodeType": "ElementaryTypeName", "src": "1028:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 464, "mutability": "mutable", "name": "multiplier", "nameLocation": "1062:10:18", "nodeType": "VariableDeclaration", "scope": 574, "src": "1054:18:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 463, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1054:7:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 467, "mutability": "mutable", "name": "proof", "nameLocation": "1101:5:18", "nodeType": "VariableDeclaration", "scope": 574, "src": "1082:24:18", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 465, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1082:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 466, "nodeType": "ArrayTypeName", "src": "1082:9:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}, {"constant": false, "id": 469, "mutability": "mutable", "name": "signature", "nameLocation": "1131:9:18", "nodeType": "VariableDeclaration", "scope": 574, "src": "1116:24:18", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 468, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1116:5:18", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1018:128:18"}, "returnParameters": {"id": 471, "nodeType": "ParameterList", "parameters": [], "src": "1156:0:18"}, "scope": 618, "src": "1001:1264:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 616, "nodeType": "Block", "src": "2363:198:18", "statements": [{"assignments": [583], "declarations": [{"constant": false, "id": 583, "mutability": "mutable", "name": "proofB", "nameLocation": "2386:6:18", "nodeType": "VariableDeclaration", "scope": 616, "src": "2373:19:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 582, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2373:5:18", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 584, "nodeType": "VariableDeclarationStatement", "src": "2373:19:18"}, {"body": {"id": 610, "nodeType": "Block", "src": "2445:76:18", "statements": [{"expression": {"id": 608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 596, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "2459:6:18", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 600, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "2481:6:18", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"arguments": [{"baseExpression": {"id": 603, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 577, "src": "2500:5:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 605, "indexExpression": {"id": 604, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 586, "src": "2506:1:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2500:8:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 601, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2489:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 602, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2493:6:18", "memberName": "encode", "nodeType": "MemberAccess", "src": "2489:10:18", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2489:20:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 598, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2468:5:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 597, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2468:5:18", "typeDescriptions": {}}}, "id": 599, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2474:6:18", "memberName": "concat", "nodeType": "MemberAccess", "src": "2468:12:18", "typeDescriptions": {"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 607, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2468:42:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "src": "2459:51:18", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 609, "nodeType": "ExpressionStatement", "src": "2459:51:18"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 589, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 586, "src": "2422:1:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 590, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 577, "src": "2426:5:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 591, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2432:6:18", "memberName": "length", "nodeType": "MemberAccess", "src": "2426:12:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2422:16:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 611, "initializationExpression": {"assignments": [586], "declarations": [{"constant": false, "id": 586, "mutability": "mutable", "name": "i", "nameLocation": "2415:1:18", "nodeType": "VariableDeclaration", "scope": 611, "src": "2407:9:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 585, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2407:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 588, "initialValue": {"hexValue": "30", "id": 587, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2419:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2407:13:18"}, "loopExpression": {"expression": {"id": 594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2440:3:18", "subExpression": {"id": 593, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 586, "src": "2440:1:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 595, "nodeType": "ExpressionStatement", "src": "2440:3:18"}, "nodeType": "ForStatement", "src": "2402:119:18"}, {"expression": {"arguments": [{"id": 613, "name": "proofB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "2547:6:18", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 612, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2537:9:18", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2537:17:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 581, "id": 615, "nodeType": "Return", "src": "2530:24:18"}]}, "id": 617, "implemented": true, "kind": "function", "modifiers": [], "name": "_encodeProof", "nameLocation": "2280:12:18", "nodeType": "FunctionDefinition", "parameters": {"id": 578, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 577, "mutability": "mutable", "name": "proof", "nameLocation": "2319:5:18", "nodeType": "VariableDeclaration", "scope": 617, "src": "2302:22:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 575, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2302:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 576, "nodeType": "ArrayTypeName", "src": "2302:9:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "2292:38:18"}, "returnParameters": {"id": 581, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 580, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 617, "src": "2354:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 579, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2354:7:18", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2353:9:18"}, "scope": 618, "src": "2271:290:18", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 619, "src": "385:2178:18", "usedErrors": [4236]}], "src": "39:2525:18"}, "bytecode": "6101806040527f41fa9c09379053988d831bd54fb6ce2e7928529240ef5d5f3e7040708abd1204610160523480156200003757600080fd5b5060405162002274380380620022748339810160408190526200005a9162000164565b6040805180820182526011815270119bdd5b991a5b99d19c9bd9d5985d5b1d607a1b6020808301918252835180850190945260018452603160f81b9084019081526001600160a01b038716608052825190912083519091206101008290526101208190524660c0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001368184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60a0523060e05261014052505050600592909255604080516020810190915281905260075550620001a99050565b6000806000606084860312156200017a57600080fd5b83516001600160a01b03811681146200019257600080fd5b602085015160409095015190969495509392505050565b60805160a05160c05160e051610100516101205161014051610160516120586200021c6000396000610660015260006112e4015260006113330152600061130e0152600061126701526000611291015260006112bb01526000818160f8015281816102aa01526102ec01526120586000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639d6fdb30116100665780639d6fdb30146101455780639f1acf0814610158578063cead04811461016b578063de1ec4031461017e578063e2fcf5501461019157600080fd5b806331cc13ba146100a3578063344ff1d0146100cc57806371fbcca5146100de5780638da5cb5b146100f3578063926f732714610132575b600080fd5b6100b66100b1366004611c69565b6101a4565b6040516100c39190611c84565b60405180910390f35b6005545b6040519081526020016100c3565b6100f16100ec366004611d38565b61029f565b005b61011a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c3565b6100f1610140366004611d8c565b610591565b6100f1610153366004611db6565b6105a0565b6100d0610166366004611c69565b61094d565b6100f1610179366004611e73565b61095f565b6100d061018c366004611d8c565b61097a565b6100f161019f366004611d8c565b61098e565b6001600160a01b03811660009081526004602052604081206060916101c882610999565b90508067ffffffffffffffff8111156101e3576101e3611eaf565b60405190808252806020026020018201604052801561022857816020015b60408051808201909152600080825260208201528152602001906001900390816102015790505b50925060005b818110156102975760008061024385846109a4565b915091506040518060400160405280836001600160a01b031681526020018281525086848151811061027757610277611ec5565b60200260200101819052505050808061028f90611ef1565b91505061022e565b505050919050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461031e5760405163c55ddc9760e01b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b670de0b6b3a7640000816001600160801b0316101561037f5760405162461bcd60e51b815260206004820181905260248201527f6d756c7469706c6965722063616e6e6f74206265206c657373207468616e20316044820152606401610315565b6801158e460913d00000816001600160801b031611156103eb5760405162461bcd60e51b815260206004820152602160248201527f6d756c7469706c6965722063616e6e6f74206265206d6f7265207468616e20326044820152600360fc1b6064820152608401610315565b60005b8281101561058b57600061042a85858481811061040d5761040d611ec5565b90506020020160208101906104229190611c69565b6000906109c2565b9050670de0b6b3a7640000816020015110156104935760405162461bcd60e51b815260206004820152602260248201527f616c6c207573657273206d7573742068617665206174206c656173742031204e604482015261119560f21b6064820152608401610315565b826001600160801b03168160400151106104ef5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520766f74696e6720706f776572000000006044820152606401610315565b60006104fa82610ad0565b9050600061054787878681811061051357610513611ec5565b90506020020160208101906105289190611c69565b6020850151606086015160009291906001600160801b038a1690610afc565b90508161055382610ad0565b61055d9190611f0a565b6005600082825461056e9190611f1d565b92505081905550505050808061058390611ef1565b9150506103ee565b50505050565b61059c338383610c40565b5050565b670de0b6b3a7640000856001600160801b0316101580156105d357506801158e460913d00000856001600160801b031611155b6106595760405162461bcd60e51b815260206004820152604b60248201527f6d756c7469706c696572206d7573742062652067726561746572206f7220657160448201527f75616c207468616e203165313820616e64206c6f776572206f7220657175616c60648201526a040e8d0c2dc406460ca62760ab1b608482015260a401610315565b600061070c7f000000000000000000000000000000000000000000000000000000000000000088886106bd898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610cbb92505050565b6040805160208101959095526001600160a01b03909316928401929092526001600160801b03166060830152608082015260a00160405160208183030381529060405280519060200120610d49565b905060006107508285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d9792505050565b9050876001600160a01b0316816001600160a01b0316146107a75760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610315565b6001600160a01b03881660009081526006602052604090205460ff16156108065760405162461bcd60e51b815260206004820152601360248201527213919508185b1c9958591e4818db185a5b5959606a1b6044820152606401610315565b6040516bffffffffffffffffffffffff1960608a901b1660208201526fffffffffffffffffffffffffffffffff19608089901b16603482015260009060440160405160208183030381529060405280519060200120905061089f8188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060079493925050610dbb9050565b6108db5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b6044820152606401610315565b6001600160a01b0389166000908152600660205260408120805460ff1916600117905561090881336109c2565b905061094033670de0b6b3a764000083602001516109269190611f1d565b606084015160009291906001600160801b038e1690610afc565b5050505050505050505050565b6000610959824261097a565b92915050565b61096a338483610e43565b610975338383610c40565b505050565b6000610987818484610ed7565b9392505050565b61059c338383610e43565b600061095982610f88565b60008080806109b38686610f93565b909450925050505b9250929050565b6109ed6040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083529192909190849084015b82821015610a7b578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610a21565b5050505090508051600003610a9a57610a92610fbe565b915050610959565b8060018251610aa99190611f0a565b81518110610ab957610ab9611ec5565b6020026020010151915050610959565b5092915050565b60008160600151610af28360400151846020015161101a90919063ffffffff16565b6109599190611f30565b610b276040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03851660009081526020878152604080832081516080810183524281529283018890529082018690526060820185905291610b6989896109c2565b805190915042148015610b7c5750825415155b15610be157825482908490610b9390600190611f0a565b81548110610ba357610ba3611ec5565b906000526020600020906004020160008201518160000155602082015181600101556040820151816002015560608201518160030155905050610c34565b6001600160a01b038816600090815260208a815260408083208054600181810183559185529383902086516004909502019384559185015191830191909155830151600282015560608301516003909101555b50979650505050505050565b610c4d6000848484611039565b6001600160a01b03831660009081526004602052604081208190610c719085611224565b91509150600082610c825783610c8c565b610c8c8483611f1d565b6001600160a01b0387166000908152600460205260409020909150610cb290868361123c565b50505050505050565b6000606060005b8351811015610d3a5781848281518110610cde57610cde611ec5565b6020026020010151604051602001610cf891815260200190565b60408051601f1981840301815290829052610d169291602001611f88565b60405160208183030381529060405291508080610d3290611ef1565b915050610cc2565b50805160209091012092915050565b6000610959610d5661125a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610da68585611381565b91509150610db3816113c3565b509392505050565b600082815b8351811015610e365760008083868481518110610ddf57610ddf611ec5565b60200260200101519150915080821115610df557905b604080516020810184905290810182905260600160405160208183030381529060405280519060200120935050508080610e2e90611ef1565b915050610dc0565b5084541490509392505050565b610e506000848484611510565b6001600160a01b0383166000908152600460205260408120610e7290846116f3565b9050818103610ea3576001600160a01b0384166000908152600460205260409020610e9d9084611708565b5061058b565b610ed083610eb18484611f0a565b6001600160a01b0387166000908152600460205260409020919061123c565b5050505050565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083528493610f7393929190859084015b82821015610f69578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610f0f565b505050508461171d565b915050610f7f81610ad0565b95945050505050565b600061095982611763565b60008080610fa1858561176d565b600081815260029690960160205260409095205494959350505050565b610fe96040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001670de0b6b3a764000081526020016000815250905090565b6000670de0b6b3a764000061102f8385611f9d565b6109879190611fb4565b600061104585856109c2565b6001600160a01b0385166000908152600287016020908152604080832054908401519184015193945091926110799161101a565b6110839190611f0a565b9050828110156110d55760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e742062616c616e636520746f2064656c65676174656044820152606401610315565b6001600160a01b0384166000908152600387016020526040812080548592906110ff908490611f1d565b90915550506001600160a01b03851660009081526002870160205260408120805485929061112e908490611f1d565b90915550506001600160a01b03808616600090815260018801602090815260408083209388168352929052908120805485929061116c908490611f1d565b90915550506020820151604083015161119591879161118b8a84611779565b8a93929190610afc565b5060006111a287866109c2565b90506111cf85826020015183604001516111c5898c61177990919063ffffffff16565b8b93929190610afc565b50604080516001600160a01b038089168252871660208201529081018590527fff825f9424124effc5ce1d9f4803d58ede8a2bda4da2324810f74834715c4c599060600160405180910390a150505050505050565b60008080806109b3866001600160a01b0387166117ab565b6000611252846001600160a01b038516846117e5565b949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156112b357507f000000000000000000000000000000000000000000000000000000000000000046145b156112dd57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036113b75760208301516040840151606085015160001a6113ab87828585611802565b945094505050506109bb565b506000905060026109bb565b60008160048111156113d7576113d7611fd6565b036113df5750565b60018160048111156113f3576113f3611fd6565b036114405760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610315565b600281600481111561145457611454611fd6565b036114a15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610315565b60038160048111156114b5576114b5611fd6565b0361150d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610315565b50565b6001600160a01b0380841660009081526001860160209081526040808320938616835292905220548111156115995760405162461bcd60e51b815260206004820152602960248201527f7573657220686173206e6f742064656c65676174656420656e6f75676820746f6044820152682064656c656761746560b81b6064820152608401610315565b6001600160a01b0382166000908152600385016020526040812080548392906115c3908490611f0a565b90915550506001600160a01b0383166000908152600285016020526040812080548392906115f2908490611f0a565b90915550506001600160a01b038084166000908152600186016020908152604080832093861683529290529081208054839290611630908490611f0a565b909155506000905061164285856109c2565b905061166f8482602001518360400151611665888a61177990919063ffffffff16565b8993929190610afc565b50600061167c86856109c2565b905061169f848260200151836040015161118b888b61177990919063ffffffff16565b50604080516001600160a01b038088168252861660208201529081018490527fde5aa493a93d4351631c1991a0aeecfd52d6b51cf1b61f1a3c48f97e268086539060600160405180910390a1505050505050565b6000610987836001600160a01b0384166118c6565b6000610987836001600160a01b038416611936565b600061174a6040518060800160405280600081526020016000815260200160008152602001600081525090565b611758848460008751611953565b915091509250929050565b6000610959825490565b60006109878383611aa5565b6001600160a01b0381166000908152600283016020908152604080832054600386019092528220546109879190611fec565b60008181526002830160205260408120548190806117da576117cd8585611acf565b9250600091506109bb9050565b6001925090506109bb565b600082815260028401602052604081208290556112528484611adb565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561183957506000905060036118bd565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561188d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118b6576000600192509250506118bd565b9150600090505b94509492505050565b6000818152600283016020526040812054801515806118ea57506118ea8484611acf565b6109875760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610315565b600081815260028301602052604081208190556109878383611ae7565b60006119806040518060800160405280600081526020016000815260200160008152602001600081525090565b82841061199a576000611991610fbe565b915091506118bd565b6119a48484611f0a565b6001036119f25760008685815181106119bf576119bf611ec5565b6020026020010151905085816000015111156119e45760006119df610fbe565b6119e8565b6001815b92509250506118bd565b60006002611a008686611f1d565b611a0a9190611fb4565b9050600087611a1a600184611f0a565b81518110611a2a57611a2a611ec5565b602002602001015190506000888381518110611a4857611a48611ec5565b6020026020010151905087826000015111158015611a665750805188105b15611a7957506001935091506118bd9050565b80518810611a9957611a8d89898589611953565b945094505050506118bd565b611a8d89898986611953565b6000826000018281548110611abc57611abc611ec5565b9060005260206000200154905092915050565b60006109878383611af3565b60006109878383611b0b565b60006109878383611b5a565b60008181526001830160205260408120541515610987565b6000818152600183016020526040812054611b5257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610959565b506000610959565b60008181526001830160205260408120548015611c43576000611b7e600183611f0a565b8554909150600090611b9290600190611f0a565b9050818114611bf7576000866000018281548110611bb257611bb2611ec5565b9060005260206000200154905080876000018481548110611bd557611bd5611ec5565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611c0857611c0861200c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610959565b6000915050610959565b80356001600160a01b0381168114611c6457600080fd5b919050565b600060208284031215611c7b57600080fd5b61098782611c4d565b602080825282518282018190526000919060409081850190868401855b82811015611ccf57815180516001600160a01b03168552860151868501529284019290850190600101611ca1565b5091979650505050505050565b60008083601f840112611cee57600080fd5b50813567ffffffffffffffff811115611d0657600080fd5b6020830191508360208260051b85010111156109bb57600080fd5b80356001600160801b0381168114611c6457600080fd5b600080600060408486031215611d4d57600080fd5b833567ffffffffffffffff811115611d6457600080fd5b611d7086828701611cdc565b9094509250611d83905060208501611d21565b90509250925092565b60008060408385031215611d9f57600080fd5b611da883611c4d565b946020939093013593505050565b60008060008060008060808789031215611dcf57600080fd5b611dd887611c4d565b9550611de660208801611d21565b9450604087013567ffffffffffffffff80821115611e0357600080fd5b611e0f8a838b01611cdc565b90965094506060890135915080821115611e2857600080fd5b818901915089601f830112611e3c57600080fd5b813581811115611e4b57600080fd5b8a6020828501011115611e5d57600080fd5b6020830194508093505050509295509295509295565b600080600060608486031215611e8857600080fd5b611e9184611c4d565b9250611e9f60208501611c4d565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f0357611f03611edb565b5060010190565b8181038181111561095957610959611edb565b8082018082111561095957610959611edb565b8082018281126000831280158216821582161715611f5057611f50611edb565b505092915050565b6000815160005b81811015611f795760208185018101518683015201611f5f565b50600093019283525090919050565b6000611252611f978386611f58565b84611f58565b808202811582820484141761095957610959611edb565b600082611fd157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b8181036000831280158383131683831282161715610ac957610ac9611edb565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206dc06304a66358d9fb4208594c02a68b0a9f98f63a09f91092686cda72e806b064736f6c63430008110033", "bytecodeSha1": "32a35b467d7c365d543f91ff548dc7c890c7d9d1", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.17+commit.8df45f5f"}, "contractName": "FoundingFrogVault", "coverageMap": {"branches": {"10": {}, "14": {"NFTVault.updateMultiplier": {"96": [205, 224, false]}}, "16": {"BaseDelegatingVault._delegateVote": {"85": [2105, 2111, true]}, "BaseDelegatingVault._undelegateVote": {"86": [2437, 2454, false]}}, "17": {}, "18": {"FoundingFrogVault.claimNFT": {"80": [1187, 1205, false], "81": [1209, 1228, true], "82": [1676, 1696, true], "83": [1737, 1756, true], "84": [1873, 1909, true]}}, "21": {"NFTVault.updateMultiplier": {"98": [1050, 1069, true], "99": [1124, 1144, true], "100": [1383, 1421, true], "101": [1528, 1567, true]}}, "23": {}, "27": {}, "34": {"Merkle.isProofValid": {"97": [471, 483, false]}}, "35": {}, "36": {"VotingPowerHistory._binarySearch": {"107": [3099, 3117, false], "108": [3186, 3208, false], "109": [3282, 3294, true], "110": [3515, 3534, false], "111": [3538, 3556, false], "112": [3618, 3637, false]}, "VotingPowerHistory.currentRecord": {"102": [2555, 2574, false]}, "VotingPowerHistory.delegateVote": {"105": [4196, 4225, true]}, "VotingPowerHistory.undelegateVote": {"106": [5100, 5140, true]}, "VotingPowerHistory.updateVotingPower": {"103": [1870, 1902, false], "104": [1906, 1925, false]}}, "6": {}, "7": {"ECDSA._throwError": {"88": [638, 667, false], "89": [734, 772, false], "90": [843, 887, false], "91": [965, 1004, false]}, "ECDSA.tryRecover": {"87": [2263, 2285, false], "92": [6106, 6185, false], "93": [6412, 6432, false]}}, "8": {"EIP712._domainSeparatorV4": {"94": [3228, 3257, false], "95": [3261, 3294, false]}}}, "statements": {"10": {}, "14": {}, "16": {"BaseDelegatingVault._delegateVote": {"29": [1958, 1996], "30": [2149, 2193]}, "BaseDelegatingVault._undelegateVote": {"42": [2322, 2362], "43": [2470, 2506], "44": [2569, 2620]}, "BaseDelegatingVault.changeDelegate": {"19": [1194, 1244], "20": [1254, 1302]}, "BaseDelegatingVault.delegateVote": {"11": [863, 908]}, "BaseDelegatingVault.getDelegations": {"1": [1599, 1644], "2": [1768, 1823], "3": [1683, 1686], "4": [1843, 1861]}, "BaseDelegatingVault.undelegateVote": {"22": [1000, 1047]}}, "17": {"BaseVault.getRawVotingPower": {"18": [487, 537]}}, "18": {"FoundingFrogVault._encodeProof": {"31": [2459, 2510], "32": [2440, 2443], "33": [2530, 2554]}, "FoundingFrogVault.claimNFT": {"12": [1166, 1329], "13": [1668, 1718], "14": [1729, 1780], "15": [1865, 1927], "16": [1938, 1963], "17": [2082, 2258]}}, "21": {"NFTVault.getRawVotingPower": {"21": [741, 787]}, "NFTVault.getTotalRawVotingPower": {"0": [883, 905]}, "NFTVault.updateMultiplier": {"5": [1042, 1106], "6": [1116, 1182], "7": [1358, 1489], "8": [1503, 1629], "9": [1992, 2046], "10": [1227, 1230]}}, "23": {}, "27": {}, "34": {"Merkle.isProofValid": {"38": [485, 514], "39": [528, 575], "40": [377, 380], "41": [596, 621]}}, "35": {"ScaledMath.mulDown": {"47": [214, 234]}}, "36": {"VotingPowerHistory._binarySearch": {"75": [3133, 3161], "76": [3275, 3332], "77": [3572, 3597], "78": [3653, 3702], "79": [3733, 3784]}, "VotingPowerHistory.binarySearch": {"70": [2838, 2890]}, "VotingPowerHistory.currentRecord": {"23": [2590, 2609], "24": [2640, 2674]}, "VotingPowerHistory.delegateVote": {"48": [4175, 4283], "49": [4294, 4332], "50": [4342, 4384], "51": [4394, 4434], "52": [4445, 4626], "53": [4697, 4870], "54": [4881, 4918]}, "VotingPowerHistory.getVotingPower": {"45": [2330, 2351]}, "VotingPowerHistory.netDelegatedVotingPower": {"71": [6056, 6166]}, "VotingPowerHistory.total": {"25": [730, 892]}, "VotingPowerHistory.undelegateVote": {"63": [5079, 5207], "64": [5218, 5256], "65": [5266, 5308], "66": [5318, 5358], "67": [5434, 5615], "68": [5686, 5859], "69": [5870, 5909]}, "VotingPowerHistory.updateVotingPower": {"26": [1941, 1986], "27": [2017, 2056], "28": [2076, 2096]}, "VotingPowerHistory.zeroRecord": {"46": [456, 638]}}, "6": {}, "7": {"ECDSA._throwError": {"60": [788, 822], "61": [903, 944], "62": [1020, 1064]}, "ECDSA.recover": {"36": [3837, 3855], "37": [3865, 3881]}, "ECDSA.toTypedDataHash": {"35": [8453, 8528]}, "ECDSA.tryRecover": {"58": [2739, 2771], "59": [2802, 2858], "72": [6201, 6252], "73": [6448, 6498], "74": [6519, 6556]}}, "8": {"EIP712._buildDomainSeparator": {"56": [3625, 3716]}, "EIP712._domainSeparatorV4": {"55": [3310, 3341], "57": [3372, 3443]}, "EIP712._hashTypedDataV4": {"34": [4444, 4506]}}}}, "dependencies": ["BaseDelegatingVault", "BaseVault", "node_modules/@openzeppelin/ECDSA", "node_modules/@openzeppelin/EIP712", "IDelegatingVault", "IVault", "ImmutableOwner", "node_modules/@openzeppelin/Math", "Merkle", "NFTVault", "ScaledMath", "node_modules/@openzeppelin/Strings", "VotingPowerHistory"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80639d6fdb30116100665780639d6fdb30146101455780639f1acf0814610158578063cead04811461016b578063de1ec4031461017e578063e2fcf5501461019157600080fd5b806331cc13ba146100a3578063344ff1d0146100cc57806371fbcca5146100de5780638da5cb5b146100f3578063926f732714610132575b600080fd5b6100b66100b1366004611c69565b6101a4565b6040516100c39190611c84565b60405180910390f35b6005545b6040519081526020016100c3565b6100f16100ec366004611d38565b61029f565b005b61011a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c3565b6100f1610140366004611d8c565b610591565b6100f1610153366004611db6565b6105a0565b6100d0610166366004611c69565b61094d565b6100f1610179366004611e73565b61095f565b6100d061018c366004611d8c565b61097a565b6100f161019f366004611d8c565b61098e565b6001600160a01b03811660009081526004602052604081206060916101c882610999565b90508067ffffffffffffffff8111156101e3576101e3611eaf565b60405190808252806020026020018201604052801561022857816020015b60408051808201909152600080825260208201528152602001906001900390816102015790505b50925060005b818110156102975760008061024385846109a4565b915091506040518060400160405280836001600160a01b031681526020018281525086848151811061027757610277611ec5565b60200260200101819052505050808061028f90611ef1565b91505061022e565b505050919050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461031e5760405163c55ddc9760e01b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b670de0b6b3a7640000816001600160801b0316101561037f5760405162461bcd60e51b815260206004820181905260248201527f6d756c7469706c6965722063616e6e6f74206265206c657373207468616e20316044820152606401610315565b6801158e460913d00000816001600160801b031611156103eb5760405162461bcd60e51b815260206004820152602160248201527f6d756c7469706c6965722063616e6e6f74206265206d6f7265207468616e20326044820152600360fc1b6064820152608401610315565b60005b8281101561058b57600061042a85858481811061040d5761040d611ec5565b90506020020160208101906104229190611c69565b6000906109c2565b9050670de0b6b3a7640000816020015110156104935760405162461bcd60e51b815260206004820152602260248201527f616c6c207573657273206d7573742068617665206174206c656173742031204e604482015261119560f21b6064820152608401610315565b826001600160801b03168160400151106104ef5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520766f74696e6720706f776572000000006044820152606401610315565b60006104fa82610ad0565b9050600061054787878681811061051357610513611ec5565b90506020020160208101906105289190611c69565b6020850151606086015160009291906001600160801b038a1690610afc565b90508161055382610ad0565b61055d9190611f0a565b6005600082825461056e9190611f1d565b92505081905550505050808061058390611ef1565b9150506103ee565b50505050565b61059c338383610c40565b5050565b670de0b6b3a7640000856001600160801b0316101580156105d357506801158e460913d00000856001600160801b031611155b6106595760405162461bcd60e51b815260206004820152604b60248201527f6d756c7469706c696572206d7573742062652067726561746572206f7220657160448201527f75616c207468616e203165313820616e64206c6f776572206f7220657175616c60648201526a040e8d0c2dc406460ca62760ab1b608482015260a401610315565b600061070c7f000000000000000000000000000000000000000000000000000000000000000088886106bd898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610cbb92505050565b6040805160208101959095526001600160a01b03909316928401929092526001600160801b03166060830152608082015260a00160405160208183030381529060405280519060200120610d49565b905060006107508285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d9792505050565b9050876001600160a01b0316816001600160a01b0316146107a75760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610315565b6001600160a01b03881660009081526006602052604090205460ff16156108065760405162461bcd60e51b815260206004820152601360248201527213919508185b1c9958591e4818db185a5b5959606a1b6044820152606401610315565b6040516bffffffffffffffffffffffff1960608a901b1660208201526fffffffffffffffffffffffffffffffff19608089901b16603482015260009060440160405160208183030381529060405280519060200120905061089f8188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060079493925050610dbb9050565b6108db5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b6044820152606401610315565b6001600160a01b0389166000908152600660205260408120805460ff1916600117905561090881336109c2565b905061094033670de0b6b3a764000083602001516109269190611f1d565b606084015160009291906001600160801b038e1690610afc565b5050505050505050505050565b6000610959824261097a565b92915050565b61096a338483610e43565b610975338383610c40565b505050565b6000610987818484610ed7565b9392505050565b61059c338383610e43565b600061095982610f88565b60008080806109b38686610f93565b909450925050505b9250929050565b6109ed6040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083529192909190849084015b82821015610a7b578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610a21565b5050505090508051600003610a9a57610a92610fbe565b915050610959565b8060018251610aa99190611f0a565b81518110610ab957610ab9611ec5565b6020026020010151915050610959565b5092915050565b60008160600151610af28360400151846020015161101a90919063ffffffff16565b6109599190611f30565b610b276040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03851660009081526020878152604080832081516080810183524281529283018890529082018690526060820185905291610b6989896109c2565b805190915042148015610b7c5750825415155b15610be157825482908490610b9390600190611f0a565b81548110610ba357610ba3611ec5565b906000526020600020906004020160008201518160000155602082015181600101556040820151816002015560608201518160030155905050610c34565b6001600160a01b038816600090815260208a815260408083208054600181810183559185529383902086516004909502019384559185015191830191909155830151600282015560608301516003909101555b50979650505050505050565b610c4d6000848484611039565b6001600160a01b03831660009081526004602052604081208190610c719085611224565b91509150600082610c825783610c8c565b610c8c8483611f1d565b6001600160a01b0387166000908152600460205260409020909150610cb290868361123c565b50505050505050565b6000606060005b8351811015610d3a5781848281518110610cde57610cde611ec5565b6020026020010151604051602001610cf891815260200190565b60408051601f1981840301815290829052610d169291602001611f88565b60405160208183030381529060405291508080610d3290611ef1565b915050610cc2565b50805160209091012092915050565b6000610959610d5661125a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610da68585611381565b91509150610db3816113c3565b509392505050565b600082815b8351811015610e365760008083868481518110610ddf57610ddf611ec5565b60200260200101519150915080821115610df557905b604080516020810184905290810182905260600160405160208183030381529060405280519060200120935050508080610e2e90611ef1565b915050610dc0565b5084541490509392505050565b610e506000848484611510565b6001600160a01b0383166000908152600460205260408120610e7290846116f3565b9050818103610ea3576001600160a01b0384166000908152600460205260409020610e9d9084611708565b5061058b565b610ed083610eb18484611f0a565b6001600160a01b0387166000908152600460205260409020919061123c565b5050505050565b6001600160a01b03821660009081526020848152604080832080548251818502810185019093528083528493610f7393929190859084015b82821015610f69578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610f0f565b505050508461171d565b915050610f7f81610ad0565b95945050505050565b600061095982611763565b60008080610fa1858561176d565b600081815260029690960160205260409095205494959350505050565b610fe96040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001670de0b6b3a764000081526020016000815250905090565b6000670de0b6b3a764000061102f8385611f9d565b6109879190611fb4565b600061104585856109c2565b6001600160a01b0385166000908152600287016020908152604080832054908401519184015193945091926110799161101a565b6110839190611f0a565b9050828110156110d55760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e742062616c616e636520746f2064656c65676174656044820152606401610315565b6001600160a01b0384166000908152600387016020526040812080548592906110ff908490611f1d565b90915550506001600160a01b03851660009081526002870160205260408120805485929061112e908490611f1d565b90915550506001600160a01b03808616600090815260018801602090815260408083209388168352929052908120805485929061116c908490611f1d565b90915550506020820151604083015161119591879161118b8a84611779565b8a93929190610afc565b5060006111a287866109c2565b90506111cf85826020015183604001516111c5898c61177990919063ffffffff16565b8b93929190610afc565b50604080516001600160a01b038089168252871660208201529081018590527fff825f9424124effc5ce1d9f4803d58ede8a2bda4da2324810f74834715c4c599060600160405180910390a150505050505050565b60008080806109b3866001600160a01b0387166117ab565b6000611252846001600160a01b038516846117e5565b949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156112b357507f000000000000000000000000000000000000000000000000000000000000000046145b156112dd57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036113b75760208301516040840151606085015160001a6113ab87828585611802565b945094505050506109bb565b506000905060026109bb565b60008160048111156113d7576113d7611fd6565b036113df5750565b60018160048111156113f3576113f3611fd6565b036114405760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610315565b600281600481111561145457611454611fd6565b036114a15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610315565b60038160048111156114b5576114b5611fd6565b0361150d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610315565b50565b6001600160a01b0380841660009081526001860160209081526040808320938616835292905220548111156115995760405162461bcd60e51b815260206004820152602960248201527f7573657220686173206e6f742064656c65676174656420656e6f75676820746f6044820152682064656c656761746560b81b6064820152608401610315565b6001600160a01b0382166000908152600385016020526040812080548392906115c3908490611f0a565b90915550506001600160a01b0383166000908152600285016020526040812080548392906115f2908490611f0a565b90915550506001600160a01b038084166000908152600186016020908152604080832093861683529290529081208054839290611630908490611f0a565b909155506000905061164285856109c2565b905061166f8482602001518360400151611665888a61177990919063ffffffff16565b8993929190610afc565b50600061167c86856109c2565b905061169f848260200151836040015161118b888b61177990919063ffffffff16565b50604080516001600160a01b038088168252861660208201529081018490527fde5aa493a93d4351631c1991a0aeecfd52d6b51cf1b61f1a3c48f97e268086539060600160405180910390a1505050505050565b6000610987836001600160a01b0384166118c6565b6000610987836001600160a01b038416611936565b600061174a6040518060800160405280600081526020016000815260200160008152602001600081525090565b611758848460008751611953565b915091509250929050565b6000610959825490565b60006109878383611aa5565b6001600160a01b0381166000908152600283016020908152604080832054600386019092528220546109879190611fec565b60008181526002830160205260408120548190806117da576117cd8585611acf565b9250600091506109bb9050565b6001925090506109bb565b600082815260028401602052604081208290556112528484611adb565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561183957506000905060036118bd565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561188d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118b6576000600192509250506118bd565b9150600090505b94509492505050565b6000818152600283016020526040812054801515806118ea57506118ea8484611acf565b6109875760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610315565b600081815260028301602052604081208190556109878383611ae7565b60006119806040518060800160405280600081526020016000815260200160008152602001600081525090565b82841061199a576000611991610fbe565b915091506118bd565b6119a48484611f0a565b6001036119f25760008685815181106119bf576119bf611ec5565b6020026020010151905085816000015111156119e45760006119df610fbe565b6119e8565b6001815b92509250506118bd565b60006002611a008686611f1d565b611a0a9190611fb4565b9050600087611a1a600184611f0a565b81518110611a2a57611a2a611ec5565b602002602001015190506000888381518110611a4857611a48611ec5565b6020026020010151905087826000015111158015611a665750805188105b15611a7957506001935091506118bd9050565b80518810611a9957611a8d89898589611953565b945094505050506118bd565b611a8d89898986611953565b6000826000018281548110611abc57611abc611ec5565b9060005260206000200154905092915050565b60006109878383611af3565b60006109878383611b0b565b60006109878383611b5a565b60008181526001830160205260408120541515610987565b6000818152600183016020526040812054611b5257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610959565b506000610959565b60008181526001830160205260408120548015611c43576000611b7e600183611f0a565b8554909150600090611b9290600190611f0a565b9050818114611bf7576000866000018281548110611bb257611bb2611ec5565b9060005260206000200154905080876000018481548110611bd557611bd5611ec5565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611c0857611c0861200c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610959565b6000915050610959565b80356001600160a01b0381168114611c6457600080fd5b919050565b600060208284031215611c7b57600080fd5b61098782611c4d565b602080825282518282018190526000919060409081850190868401855b82811015611ccf57815180516001600160a01b03168552860151868501529284019290850190600101611ca1565b5091979650505050505050565b60008083601f840112611cee57600080fd5b50813567ffffffffffffffff811115611d0657600080fd5b6020830191508360208260051b85010111156109bb57600080fd5b80356001600160801b0381168114611c6457600080fd5b600080600060408486031215611d4d57600080fd5b833567ffffffffffffffff811115611d6457600080fd5b611d7086828701611cdc565b9094509250611d83905060208501611d21565b90509250925092565b60008060408385031215611d9f57600080fd5b611da883611c4d565b946020939093013593505050565b60008060008060008060808789031215611dcf57600080fd5b611dd887611c4d565b9550611de660208801611d21565b9450604087013567ffffffffffffffff80821115611e0357600080fd5b611e0f8a838b01611cdc565b90965094506060890135915080821115611e2857600080fd5b818901915089601f830112611e3c57600080fd5b813581811115611e4b57600080fd5b8a6020828501011115611e5d57600080fd5b6020830194508093505050509295509295509295565b600080600060608486031215611e8857600080fd5b611e9184611c4d565b9250611e9f60208501611c4d565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f0357611f03611edb565b5060010190565b8181038181111561095957610959611edb565b8082018082111561095957610959611edb565b8082018281126000831280158216821582161715611f5057611f50611edb565b505092915050565b6000815160005b81811015611f795760208185018101518683015201611f5f565b50600093019283525090919050565b6000611252611f978386611f58565b84611f58565b808202811582820484141761095957610959611edb565b600082611fd157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b8181036000831280158383131683831282161715610ac957610ac9611edb565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206dc06304a66358d9fb4208594c02a68b0a9f98f63a09f91092686cda72e806b064736f6c63430008110033", "deployedSourceMap": "385:2178:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:553:16;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:112:21;890:15;;800:112;;;1354:25:37;;;1342:2;1327:18;800:112:21;1208:177:37;918:1145:21;;;;;;:::i;:::-;;:::i;:::-;;133:30:14;;;;;;;;-1:-1:-1;;;;;2635:32:37;;;2617:51;;2605:2;2590:18;133:30:14;2471:203:37;786:129:16;;;;;;:::i;:::-;;:::i;1001:1264:18:-;;;;;;:::i;:::-;;:::i;387:157:17:-;;;;;;:::i;:::-;;:::i;1060:249:16:-;;;;;;:::i;:::-;;:::i;610:184:21:-;;;;;;:::i;:::-;;:::i;921:133:16:-;;;;;;:::i;:::-;;:::i;1315:553::-;-1:-1:-1;;;;;1497:50:16;;1446:48;1497:50;;;:19;:50;;;;;1393:41;;1571:18;1497:50;1571:16;:18::i;:::-;1557:32;;1640:3;1613:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1613:31:16;;;;;;;;;;;;;;;;1599:45;;1659:9;1654:180;1678:3;1674:1;:7;1654:180;;;1703:16;;1739:15;:9;1752:1;1739:12;:15::i;:::-;1702:52;;;;1785:38;;;;;;;;1806:8;-1:-1:-1;;;;;1785:38:16;;;;;1816:6;1785:38;;;1768:11;1780:1;1768:14;;;;;;;;:::i;:::-;;;;;;:55;;;;1688:146;;1683:3;;;;;:::i;:::-;;;;1654:180;;;;1843:18;;1315:553;;;:::o;918:1145:21:-;205:10:14;-1:-1:-1;;;;;219:5:14;205:19;;201:71;;233:39;;-1:-1:-1;;;233:39:14;;254:10;233:39;;;5079:34:37;-1:-1:-1;;;;;266:5:14;5149:15:37;5129:18;;;5122:43;5014:18;;233:39:14;;;;;;;;201:71;1065:4:21::1;1050:11;-1:-1:-1::0;;;;;1050:19:21::1;;;1042:64;;;::::0;-1:-1:-1;;;1042:64:21;;5378:2:37;1042:64:21::1;::::0;::::1;5360:21:37::0;;;5397:18;;;5390:30;5456:34;5436:18;;;5429:62;5508:18;;1042:64:21::1;5176:356:37::0;1042:64:21::1;1139:5;1124:11;-1:-1:-1::0;;;;;1124:20:21::1;;;1116:66;;;::::0;-1:-1:-1;;;1116:66:21;;5739:2:37;1116:66:21::1;::::0;::::1;5721:21:37::0;5778:2;5758:18;;;5751:30;5817:34;5797:18;;;5790:62;-1:-1:-1;;;5868:18:37;;;5861:31;5909:19;;1116:66:21::1;5537:397:37::0;1116:66:21::1;1197:6;1192:865;1209:16:::0;;::::1;1192:865;;;1246:47;1296:48;1335:5;;1341:1;1335:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1296:7;::::0;:38:::1;:48::i;:::-;1246:98;;1417:4;1383:14;:30;;;:38;;1358:131;;;::::0;-1:-1:-1;;;1358:131:21;;6141:2:37;1358:131:21::1;::::0;::::1;6123:21:37::0;6180:2;6160:18;;;6153:30;6219:34;6199:18;;;6192:62;-1:-1:-1;;;6270:18:37;;;6263:32;6312:19;;1358:131:21::1;5939:398:37::0;1358:131:21::1;1556:11;-1:-1:-1::0;;;;;1528:39:21::1;:14;:25;;;:39;1503:126;;;::::0;-1:-1:-1;;;1503:126:21;;6544:2:37;1503:126:21::1;::::0;::::1;6526:21:37::0;6583:2;6563:18;;;6556:30;6622;6602:18;;;6595:58;6670:18;;1503:126:21::1;6342:352:37::0;1503:126:21::1;1644:16;1663:22;:14;:20;:22::i;:::-;1644:41;;1699:47;1749:229;1813:5;;1819:1;1813:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1843:30;::::0;::::1;::::0;1928:32:::1;::::0;::::1;::::0;1749:7:::1;::::0;:229;1843:30;-1:-1:-1;;;;;1749:229:21;::::1;::::0;:42:::1;:229::i;:::-;1699:279;;2037:8;2012:22;:14;:20;:22::i;:::-;:33;;;;:::i;:::-;1992:15;;:54;;;;;;;:::i;:::-;;;;;;;;1232:825;;;1227:3;;;;;:::i;:::-;;;;1192:865;;;;918:1145:::0;;;:::o;786:129:16:-;863:45;877:10;889:9;900:7;863:13;:45::i;:::-;786:129;;:::o;1001:1264:18:-;1201:4;1187:10;-1:-1:-1;;;;;1187:18:18;;;:41;;;;;1223:5;1209:10;-1:-1:-1;;;;;1209:19:18;;;1187:41;1166:163;;;;-1:-1:-1;;;1166:163:18;;7164:2:37;1166:163:18;;;7146:21:37;7203:2;7183:18;;;7176:30;7242:34;7222:18;;;7215:62;7313:34;7293:18;;;7286:62;-1:-1:-1;;;7364:19:37;;;7357:42;7416:19;;1166:163:18;6962:479:37;1166:163:18;1340:12;1355:244;1444:10;1476:8;1506:10;1538:19;1551:5;;1538:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1538:12:18;;-1:-1:-1;;;1538:19:18:i;:::-;1412:163;;;;;;7677:25:37;;;;-1:-1:-1;;;;;7738:32:37;;;7718:18;;;7711:60;;;;-1:-1:-1;;;;;7807:47:37;7787:18;;;7780:75;7871:18;;;7864:34;7649:19;;1412:163:18;;;;;;;;;;;;1385:204;;;;;;1355:16;:244::i;:::-;1340:259;;1609:16;1628:30;1642:4;1648:9;;1628:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1628:13:18;;-1:-1:-1;;;1628:30:18:i;:::-;1609:49;;1688:8;-1:-1:-1;;;;;1676:20:18;:8;-1:-1:-1;;;;;1676:20:18;;1668:50;;;;-1:-1:-1;;;1668:50:18;;8111:2:37;1668:50:18;;;8093:21:37;8150:2;8130:18;;;8123:30;-1:-1:-1;;;8169:18:37;;;8162:47;8226:18;;1668:50:18;7909:341:37;1668:50:18;-1:-1:-1;;;;;1738:18:18;;;;;;:8;:18;;;;;;;;1737:19;1729:51;;;;-1:-1:-1;;;1729:51:18;;8457:2:37;1729:51:18;;;8439:21:37;8496:2;8476:18;;;8469:30;-1:-1:-1;;;8515:18:37;;;8508:49;8574:18;;1729:51:18;8255:343:37;1729:51:18;1816:38;;-1:-1:-1;;8780:2:37;8776:15;;;8772:53;1816:38:18;;;8760:66:37;-1:-1:-1;;8864:3:37;8860:16;;;8856:62;8842:12;;;8835:84;1791:12:18;;8935::37;;1816:38:18;;;;;;;;;;;;1806:49;;;;;;1791:64;;1873:36;1897:4;1903:5;;1873:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1873:10:18;;:36;;-1:-1:-1;;1873:23:18;:36;-1:-1:-1;1873:36:18:i;:::-;1865:62;;;;-1:-1:-1;;;1865:62:18;;9160:2:37;1865:62:18;;;9142:21:37;9199:2;9179:18;;;9172:30;-1:-1:-1;;;9218:18:37;;;9211:43;9271:18;;1865:62:18;8958:337:37;1865:62:18;-1:-1:-1;;;;;1938:18:18;;;;;;:8;:18;;;;;:25;;-1:-1:-1;;1938:25:18;1959:4;1938:25;;;2017:55;1938:18;2052:10;2017:21;:55::i;:::-;1974:98;;2082:176;2121:10;122:4:35;2145:7:18;:23;;;:40;;;;:::i;:::-;2223:25;;;;2082:7;;:176;;-1:-1:-1;;;;;2082:176:18;;;:25;:176::i;:::-;;1156:1109;;;;1001:1264;;;;;;:::o;387:157:17:-;468:7;494:43;512:7;521:15;494:17;:43::i;:::-;487:50;387:157;-1:-1:-1;;387:157:17:o;1060:249:16:-;1194:50;1210:10;1222:12;1236:7;1194:15;:50::i;:::-;1254:48;1268:10;1280:12;1294:7;1254:13;:48::i;:::-;1060:249;;;:::o;610:184:21:-;722:7;748:39;722:7;771:4;777:9;748:22;:39::i;:::-;741:46;610:184;-1:-1:-1;;;610:184:21:o;921:133:16:-;1000:47;1016:10;1028:9;1039:7;1000:15;:47::i;12614:120:11:-;12683:7;12709:18;12716:3;12709:6;:18::i;13071:232::-;13151:7;;;;13210:21;13213:3;13225:5;13210:2;:21::i;:::-;13179:52;;-1:-1:-1;13179:52:11;-1:-1:-1;;;13071:232:11;;;;;;:::o;2364:327:36:-;2471:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:13:36;-1:-1:-1;;;;;2522:19:36;;2496:23;2522:19;;;;;;;;;;;2496:45;;;;;;;;;;;;;;;;;;;2522:19;;2496:45;:23;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2555:7;:14;2573:1;2555:19;2551:134;;2597:12;:10;:12::i;:::-;2590:19;;;;;2551:134;2647:7;2672:1;2655:7;:14;:18;;;;:::i;:::-;2647:27;;;;;;;;:::i;:::-;;;;;;;2640:34;;;;;2551:134;2486:205;2364:327;;;;:::o;651:248::-;711:7;854:6;:24;;;781:49;812:6;:17;;;781:6;:22;;;:30;;:49;;;;:::i;:::-;774:104;;;;:::i;1296:807::-;1497:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:13:36;-1:-1:-1;;;;;1550:19:36;;1522:25;1550:19;;;;;;;;;;;1609:183;;;;;;;1634:15;1609:183;;;;;;;;;;;;;;;;;;;;1550:19;1829:27;1550:7;1564:4;1829:21;:27::i;:::-;1870:13;;1802:54;;-1:-1:-1;1887:15:36;1870:32;:55;;;;-1:-1:-1;1906:15:36;;:19;;1870:55;1866:201;;;1950:15;;1973:13;;1941:8;;1950:19;;1968:1;;1950:19;:::i;:::-;1941:29;;;;;;;;:::i;:::-;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:201;;;-1:-1:-1;;;;;2017:19:36;;:13;:19;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:201;-1:-1:-1;2083:13:36;1296:807;-1:-1:-1;;;;;;;1296:807:36:o;1874:326:16:-;1958:38;:7;1979:4;1985:2;1989:6;1958:20;:38::i;:::-;-1:-1:-1;;;;;2039:25:16;;2007:11;2039:25;;;:19;:25;;;;;2007:11;;2039:36;;2072:2;2039:32;:36::i;:::-;2006:69;;;;2085:17;2105:6;:34;;2133:6;2105:34;;;2114:16;2124:6;2114:7;:16;:::i;:::-;-1:-1:-1;;;;;2149:25:16;;;;;;:19;:25;;;;;2085:54;;-1:-1:-1;2149:44:16;;2179:2;2085:54;2149:29;:44::i;:::-;;1948:252;;;1874:326;;;:::o;2271:290:18:-;2354:7;2373:19;2407:9;2402:119;2426:5;:12;2422:1;:16;2402:119;;;2481:6;2500:5;2506:1;2500:8;;;;;;;;:::i;:::-;;;;;;;2489:20;;;;;;1354:25:37;;1342:2;1327:18;;1208:177;2489:20:18;;;;-1:-1:-1;;2489:20:18;;;;;;;;;;2468:42;;;2489:20;2468:42;;:::i;:::-;;;;;;;;;;;;;2459:51;;2440:3;;;;;:::i;:::-;;;;2402:119;;;-1:-1:-1;2537:17:18;;;;;;;;2271:290;-1:-1:-1;;2271:290:18:o;4348:165:8:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:7;;-1:-1:-1;;;8470:57:7;;;11942:27:37;11985:11;;;11978:27;;;12021:12;;;12014:28;;;8434:7:7;;12058:12:37;;8470:57:7;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;3661:227;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:7;3661:227;-1:-1:-1;;;3661:227:7:o;134:494:34:-;280:4;311:9;280:4;330:256;354:14;:21;350:1;:25;330:256;;;397:12;411:13;429:4;435:14;450:1;435:17;;;;;;;;:::i;:::-;;;;;;;396:57;;;;478:5;471:4;:12;467:47;;;502:5;467:47;545:29;;;;;;10453:19:37;;;10488:12;;;10481:28;;;10525:12;;545:29:34;;;;;;;;;;;;535:40;;;;;;528:47;;382:204;;377:3;;;;;:::i;:::-;;;;330:256;;;-1:-1:-1;611:10:34;;603:18;;-1:-1:-1;134:494:34;;;;;:::o;2206:431:16:-;2322:40;:7;2345:4;2351:2;2355:6;2322:22;:40::i;:::-;-1:-1:-1;;;;;2390:25:16;;2372:15;2390:25;;;:19;:25;;;;;:33;;2420:2;2390:29;:33::i;:::-;2372:51;;2448:6;2437:7;:17;2433:198;;-1:-1:-1;;;;;2470:25:16;;;;;;:19;:25;;;;;:36;;2503:2;2470:32;:36::i;:::-;;2433:198;;;2569:51;2599:2;2603:16;2613:6;2603:7;:16;:::i;:::-;-1:-1:-1;;;;;2569:25:16;;;;;;:19;:25;;;;;;:51;:29;:51::i;:::-;;2312:325;2206:431;;;:::o;2109:249:36:-;-1:-1:-1;;;;;2296:19:36;;2237:7;2296:19;;;;;;;;;;;2283:37;;;;;;;;;;;;;;;;;2237:7;;2283:37;;;2296:19;2283:37;2237:7;;2283:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:2;2283:12;:37::i;:::-;2256:64;;;2337:14;:6;:12;:14::i;:::-;2330:21;2109:249;-1:-1:-1;;;;;2109:249:36:o;3380:123:11:-;3452:7;3478:18;:3;:16;:18::i;3856:191::-;3939:7;;;3981:19;:3;3994:5;3981:12;:19::i;:::-;4023:16;;;;:11;;;;;:16;;;;;;;;;3856:191;-1:-1:-1;;;;3856:191:11:o;386:259:36:-;431:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:13:36;475:163;;;;;;;;504:1;475:163;;;;540:1;475:163;;;;122:4:35;475:163:36;;;;622:1;475:163;;;456:182;;386:259;:::o;133:108:35:-;195:7;122:4;222:5;226:1;222;:5;:::i;:::-;221:13;;;;:::i;3807:1118:36:-;3953:25;3981:27;:7;4003:4;3981:21;:27::i;:::-;-1:-1:-1;;;;;4133:32:36;;4019:27;4133:32;;;:26;;;:32;;;;;;;;;4098:22;;;;4049:27;;;;3953:55;;-1:-1:-1;4019:27:36;;4049:81;;:35;:81::i;:::-;:116;;;;:::i;:::-;4019:146;;4219:6;4196:19;:29;;4175:108;;;;-1:-1:-1;;;4175:108:36;;11145:2:37;4175:108:36;;;11127:21:37;;;11164:18;;;11157:30;11223:34;11203:18;;;11196:62;11275:18;;4175:108:36;10943:356:37;4175:108:36;-1:-1:-1;;;;;4294:28:36;;;;;;:24;;;:28;;;;;:38;;4326:6;;4294:28;:38;;4326:6;;4294:38;:::i;:::-;;;;-1:-1:-1;;;;;;;4342:32:36;;;;;;:26;;;:32;;;;;:42;;4378:6;;4342:32;:42;;4378:6;;4342:42;:::i;:::-;;;;-1:-1:-1;;;;;;;4394:26:36;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;;:40;;4428:6;;4394:26;:40;;4428:6;;4394:40;:::i;:::-;;;;-1:-1:-1;;4502:27:36;;;;4543:22;;;;4445:181;;4484:4;;4579:37;:7;4484:4;4579:31;:37::i;:::-;4445:7;;:181;;;:25;:181::i;:::-;-1:-1:-1;4636:23:36;4662:25;:7;4684:2;4662:21;:25::i;:::-;4636:51;;4697:173;4736:2;4752:9;:25;;;4791:9;:20;;;4825:35;4857:2;4825:7;:31;;:35;;;;:::i;:::-;4697:7;;:173;;;:25;:173::i;:::-;-1:-1:-1;4886:32:36;;;-1:-1:-1;;;;;11562:15:37;;;11544:34;;11614:15;;11609:2;11594:18;;11587:43;11646:18;;;11639:34;;;4886:32:36;;11494:2:37;11479:18;4886:32:36;;;;;;;3943:982;;;3807:1118;;;;:::o;13444:238:11:-;13526:4;;;;13583:50;13590:3;-1:-1:-1;;;;;13610:21:11;;13583:6;:50::i;11758:212::-;11877:4;11900:63;11904:3;-1:-1:-1;;;;;11924:21:11;;11956:5;11900:3;:63::i;:::-;11893:70;11758:212;-1:-1:-1;;;;11758:212:11:o;3152:308:8:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:8;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:8;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:8;;;3401:10;3642:73;;;;14203:25:37;;;;3413:12:8;14244:18:37;;;14237:34;3427:15:8;14287:18:37;;;14280:34;3686:13:8;14330:18:37;;;14323:34;3709:4:8;14373:19:37;;;;14366:61;;;;3642:73:8;;;;;;;;;;14175:19:37;;;;3642:73:8;;;3632:84;;;;;;3152:308::o;2145:730:7:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:7;;-1:-1:-1;2822:35:7;2802:56;;570:511;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:7;;12415:2:37;788:34:7;;;12397:21:37;12454:2;12434:18;;;12427:30;12493:26;12473:18;;;12466:54;12537:18;;788:34:7;12213:348:37;730:345:7;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:7;;12768:2:37;903:41:7;;;12750:21:37;12807:2;12787:18;;;12780:30;12846:33;12826:18;;;12819:61;12897:18;;903:41:7;12566:355:37;839:236:7;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:7;;13128:2:37;1020:44:7;;;13110:21:37;13167:2;13147:18;;;13140:30;13206:34;13186:18;;;13179:62;-1:-1:-1;;;13257:18:37;;;13250:32;13299:19;;1020:44:7;12926:398:37;961:114:7;570:511;:::o;4931:985:36:-;-1:-1:-1;;;;;5100:26:36;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;:40;-1:-1:-1;5100:40:36;5079:128;;;;-1:-1:-1;;;5079:128:36;;13531:2:37;5079:128:36;;;13513:21:37;13570:2;13550:18;;;13543:30;13609:34;13589:18;;;13582:62;-1:-1:-1;;;13660:18:37;;;13653:39;13709:19;;5079:128:36;13329:405:37;5079:128:36;-1:-1:-1;;;;;5218:28:36;;;;;;:24;;;:28;;;;;:38;;5250:6;;5218:28;:38;;5250:6;;5218:38;:::i;:::-;;;;-1:-1:-1;;;;;;;5266:32:36;;;;;;:26;;;:32;;;;;:42;;5302:6;;5266:32;:42;;5302:6;;5266:42;:::i;:::-;;;;-1:-1:-1;;;;;;;5318:26:36;;;;;;;:20;;;:26;;;;;;;;:30;;;;;;;;;;;:40;;5352:6;;5318:26;:40;;5352:6;;5318:40;:::i;:::-;;;;-1:-1:-1;5369:25:36;;-1:-1:-1;5397:27:36;:7;5419:4;5397:21;:27::i;:::-;5369:55;;5434:181;5473:4;5491:11;:27;;;5532:11;:22;;;5568:37;5600:4;5568:7;:31;;:37;;;;:::i;:::-;5434:7;;:181;;;:25;:181::i;:::-;-1:-1:-1;5625:23:36;5651:25;:7;5673:2;5651:21;:25::i;:::-;5625:51;;5686:173;5725:2;5741:9;:25;;;5780:9;:20;;;5814:35;5846:2;5814:7;:31;;:35;;;;:::i;5686:173::-;-1:-1:-1;5875:34:36;;;-1:-1:-1;;;;;11562:15:37;;;11544:34;;11614:15;;11609:2;11594:18;;11587:43;11646:18;;;11639:34;;;5875::36;;11494:2:37;11479:18;5875:34:36;;;;;;;5069:847;;4931:985;;;;:::o;13833:168:11:-;13912:7;13946:47;13950:3;-1:-1:-1;;;;;13970:21:11;;13946:3;:47::i;12129:157::-;12206:4;12229:50;12236:3;-1:-1:-1;;;;;12256:21:11;;12229:6;:50::i;2697:200:36:-;2801:10;2813:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2813:13:36;2845:45;2859:7;2868:2;2872:1;2875:7;:14;2845:13;:45::i;:::-;2838:52;;;;2697:200;;;;;:::o;6631:115:12:-;6694:7;6720:19;6728:3;4537:18;;4455:107;7088:129;7162:7;7188:22;7192:3;7204:5;7188:3;:22::i;5922:251:36:-;-1:-1:-1;;;;;6134:31:36;;6038:6;6134:31;;;:26;;;:31;;;;;;;;;6082:24;;;:29;;;;;;6075:91;;6134:31;6075:91;:::i;4188:298:11:-;4273:4;4314:16;;;:11;;;:16;;;;;;4273:4;;4314:16;4340:140;;4387:18;4396:3;4401;4387:8;:18::i;:::-;4379:39;-1:-1:-1;4415:1:11;;-1:-1:-1;4379:39:11;;-1:-1:-1;4379:39:11;4340:140;4457:4;;-1:-1:-1;4463:5:11;-1:-1:-1;4449:20:11;;2535:204;2657:4;2673:16;;;:11;;;:16;;;;;:24;;;2714:18;2673:3;2685;2714:13;:18::i;5069:1494:7:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:7;;-1:-1:-1;6221:30:7;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;14665:25:37;;;14738:4;14726:17;;14706:18;;;14699:45;;;;14760:18;;;14753:34;;;14803:18;;;14796:34;;;6374:24:7;;14637:19:37;;6374:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:7;;-1:-1:-1;;6374:24:7;;;-1:-1:-1;;;;;;;6412:20:7;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:7;;-1:-1:-1;5069:1494:7;;;;;;;;:::o;4637:247:11:-;4719:7;4754:16;;;:11;;;:16;;;;;;4788:10;;;;:32;;;4802:18;4811:3;4816;4802:8;:18::i;:::-;4780:75;;;;-1:-1:-1;;;4780:75:11;;15043:2:37;4780:75:11;;;15025:21:37;15082:2;15062:18;;;15055:30;15121:32;15101:18;;;15094:60;15171:18;;4780:75:11;14841:354:37;2907:164:11;2987:4;3010:16;;;:11;;;:16;;;;;3003:23;;;3043:21;3010:3;3022;3043:16;:21::i;2903:898:36:-;3058:10;3070:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3070:13:36;3111:6;3099:8;:18;3095:77;;3141:5;3148:12;:10;:12::i;:::-;3133:28;;;;;;3095:77;3186:17;3195:8;3186:6;:17;:::i;:::-;3207:1;3186:22;3182:161;;3224:17;3244:7;3252:8;3244:17;;;;;;;;:::i;:::-;;;;;;;3224:37;;3292:2;3282:3;:6;;;:12;;:50;;3312:5;3319:12;:10;:12::i;:::-;3282:50;;;3298:4;3304:3;3282:50;3275:57;;;;;;;3182:161;3353:14;3392:1;3371:17;3380:8;3371:6;:17;:::i;:::-;3370:23;;;;:::i;:::-;3353:40;-1:-1:-1;3403:24:36;3430:7;3438:10;3447:1;3353:40;3438:10;:::i;:::-;3430:19;;;;;;;;:::i;:::-;;;;;;;3403:46;;3459:24;3486:7;3494:6;3486:15;;;;;;;;:::i;:::-;;;;;;;3459:42;;3532:2;3515:10;:13;;;:19;;:41;;;;-1:-1:-1;3543:13:36;;3538:18;;3515:41;3511:284;;;-1:-1:-1;3580:4:36;;-1:-1:-1;3586:10:36;-1:-1:-1;3572:25:36;;-1:-1:-1;3572:25:36;3511:284;3618:13;;:19;-1:-1:-1;3614:181:36;;3660:42;3674:7;3683:2;3687:6;3695;3660:13;:42::i;:::-;3653:49;;;;;;;;;3614:181;3740:44;3754:7;3763:2;3767:8;3777:6;3740:13;:44::i;4904:118:12:-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;3150:140:11:-;3237:4;3260:23;:3;3279;3260:18;:23::i;5911:123:12:-;5981:4;6004:23;6009:3;6021:5;6004:4;:23::i;6202:129::-;6275:4;6298:26;6306:3;6318:5;6298:7;:26::i;6412:138::-;6492:4;4343:19;;;:12;;;:19;;;;;;:24;;6515:28;4247:127;2206:404;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:12;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:12;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;14:173:37;82:20;;-1:-1:-1;;;;;131:31:37;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:820::-;610:2;662:21;;;732:13;;635:18;;;754:22;;;581:4;;610:2;795;;813:18;;;;854:15;;;581:4;897:280;911:6;908:1;905:13;897:280;;;970:13;;1012:9;;-1:-1:-1;;;;;1008:35:37;996:48;;1084:11;;1078:18;1064:12;;;1057:40;1117:12;;;;1152:15;;;;1040:1;926:9;897:280;;;-1:-1:-1;1194:3:37;;383:820;-1:-1:-1;;;;;;;383:820:37:o;1390:367::-;1453:8;1463:6;1517:3;1510:4;1502:6;1498:17;1494:27;1484:55;;1535:1;1532;1525:12;1484:55;-1:-1:-1;1558:20:37;;1601:18;1590:30;;1587:50;;;1633:1;1630;1623:12;1587:50;1670:4;1662:6;1658:17;1646:29;;1730:3;1723:4;1713:6;1710:1;1706:14;1698:6;1694:27;1690:38;1687:47;1684:67;;;1747:1;1744;1737:12;1762:188;1830:20;;-1:-1:-1;;;;;1879:46:37;;1869:57;;1859:85;;1940:1;1937;1930:12;1955:511;2050:6;2058;2066;2119:2;2107:9;2098:7;2094:23;2090:32;2087:52;;;2135:1;2132;2125:12;2087:52;2175:9;2162:23;2208:18;2200:6;2197:30;2194:50;;;2240:1;2237;2230:12;2194:50;2279:70;2341:7;2332:6;2321:9;2317:22;2279:70;:::i;:::-;2368:8;;-1:-1:-1;2253:96:37;-1:-1:-1;2422:38:37;;-1:-1:-1;2456:2:37;2441:18;;2422:38;:::i;:::-;2412:48;;1955:511;;;;;:::o;2679:254::-;2747:6;2755;2808:2;2796:9;2787:7;2783:23;2779:32;2776:52;;;2824:1;2821;2814:12;2776:52;2847:29;2866:9;2847:29;:::i;:::-;2837:39;2923:2;2908:18;;;;2895:32;;-1:-1:-1;;;2679:254:37:o;2938:1055::-;3062:6;3070;3078;3086;3094;3102;3155:3;3143:9;3134:7;3130:23;3126:33;3123:53;;;3172:1;3169;3162:12;3123:53;3195:29;3214:9;3195:29;:::i;:::-;3185:39;;3243:38;3277:2;3266:9;3262:18;3243:38;:::i;:::-;3233:48;;3332:2;3321:9;3317:18;3304:32;3355:18;3396:2;3388:6;3385:14;3382:34;;;3412:1;3409;3402:12;3382:34;3451:70;3513:7;3504:6;3493:9;3489:22;3451:70;:::i;:::-;3540:8;;-1:-1:-1;3425:96:37;-1:-1:-1;3628:2:37;3613:18;;3600:32;;-1:-1:-1;3644:16:37;;;3641:36;;;3673:1;3670;3663:12;3641:36;3711:8;3700:9;3696:24;3686:34;;3758:7;3751:4;3747:2;3743:13;3739:27;3729:55;;3780:1;3777;3770:12;3729:55;3820:2;3807:16;3846:2;3838:6;3835:14;3832:34;;;3862:1;3859;3852:12;3832:34;3907:7;3902:2;3893:6;3889:2;3885:15;3881:24;3878:37;3875:57;;;3928:1;3925;3918:12;3875:57;3959:2;3955;3951:11;3941:21;;3981:6;3971:16;;;;;2938:1055;;;;;;;;:::o;3998:328::-;4075:6;4083;4091;4144:2;4132:9;4123:7;4119:23;4115:32;4112:52;;;4160:1;4157;4150:12;4112:52;4183:29;4202:9;4183:29;:::i;:::-;4173:39;;4231:38;4265:2;4254:9;4250:18;4231:38;:::i;:::-;4221:48;;4316:2;4305:9;4301:18;4288:32;4278:42;;3998:328;;;;;:::o;4331:127::-;4392:10;4387:3;4383:20;4380:1;4373:31;4423:4;4420:1;4413:15;4447:4;4444:1;4437:15;4463:127;4524:10;4519:3;4515:20;4512:1;4505:31;4555:4;4552:1;4545:15;4579:4;4576:1;4569:15;4595:127;4656:10;4651:3;4647:20;4644:1;4637:31;4687:4;4684:1;4677:15;4711:4;4708:1;4701:15;4727:135;4766:3;4787:17;;;4784:43;;4807:18;;:::i;:::-;-1:-1:-1;4854:1:37;4843:13;;4727:135::o;6699:128::-;6766:9;;;6787:11;;;6784:37;;;6801:18;;:::i;6832:125::-;6897:9;;;6918:10;;;6915:36;;;6931:18;;:::i;9300:216::-;9364:9;;;9392:11;;;9339:3;9422:9;;9450:10;;9446:19;;9475:10;;9467:19;;9443:44;9440:70;;;9490:18;;:::i;:::-;9440:70;;9300:216;;;;:::o;9703:322::-;9744:3;9782:5;9776:12;9806:1;9816:128;9830:6;9827:1;9824:13;9816:128;;;9927:4;9912:13;;;9908:24;;9902:31;9889:11;;;9882:52;9845:12;9816:128;;;-1:-1:-1;9999:1:37;9963:16;;9988:13;;;-1:-1:-1;9963:16:37;;9703:322;-1:-1:-1;9703:322:37:o;10030:261::-;10205:3;10230:55;10255:29;10280:3;10272:6;10255:29;:::i;:::-;10247:6;10230:55;:::i;10548:168::-;10621:9;;;10652;;10669:15;;;10663:22;;10649:37;10639:71;;10690:18;;:::i;10721:217::-;10761:1;10787;10777:132;;10831:10;10826:3;10822:20;10819:1;10812:31;10866:4;10863:1;10856:15;10894:4;10891:1;10884:15;10777:132;-1:-1:-1;10923:9:37;;10721:217::o;12081:127::-;12142:10;12137:3;12133:20;12130:1;12123:31;12173:4;12170:1;12163:15;12197:4;12194:1;12187:15;13739:200;13805:9;;;13778:4;13833:9;;13861:10;;13873:12;;;13857:29;13896:12;;;13888:21;;13854:56;13851:82;;;13913:18;;:::i;15200:127::-;15261:10;15256:3;15252:20;15249:1;15242:31;15292:4;15289:1;15282:15;15316:4;15313:1;15306:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {}, "version": 1}, "offset": [385, 2563], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D6FDB30 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9D6FDB30 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x9F1ACF08 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xCEAD0481 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xDE1EC403 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xE2FCF550 EQ PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31CC13BA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x344FF1D0 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x71FBCCA5 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x926F7327 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x1D38 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x1C8 DUP3 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E3 JUMPI PUSH2 0x1E3 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x228 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x201 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 PUSH2 0x243 DUP6 DUP5 PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x277 JUMPI PUSH2 0x277 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x28F SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22E JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH4 0xC55DDC97 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C6965722063616E6E6F74206265206C657373207468616E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH9 0x1158E460913D00000 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C6965722063616E6E6F74206265206D6F7265207468616E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 PUSH2 0x42A DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x40D JUMPI PUSH2 0x40D PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C6C207573657273206D7573742068617665206174206C656173742031204E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1195 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x315 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH1 0x40 ADD MLOAD LT PUSH2 0x4EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420646563726561736520766F74696E6720706F77657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x547 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x513 JUMPI PUSH2 0x513 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND SWAP1 PUSH2 0xAFC JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x553 DUP3 PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x583 SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x59C CALLER DUP4 DUP4 PUSH2 0xC40 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO DUP1 ISZERO PUSH2 0x5D3 JUMPI POP PUSH9 0x1158E460913D00000 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO JUMPDEST PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C696572206D7573742062652067726561746572206F72206571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75616C207468616E203165313820616E64206C6F776572206F7220657175616C PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x40E8D0C2DC406460CA627 PUSH1 0xAB SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C PUSH32 0x0 DUP9 DUP9 PUSH2 0x6BD DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xCBB SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x750 DUP3 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xD97 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13919508185B1C9958591E4818DB185A5B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP11 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x80 DUP10 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x89F DUP2 DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x7 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0xDBB SWAP1 POP JUMP JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x908 DUP2 CALLER PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x940 CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP15 AND SWAP1 PUSH2 0xAFC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x959 DUP3 TIMESTAMP PUSH2 0x97A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96A CALLER DUP5 DUP4 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x975 CALLER DUP4 DUP4 PUSH2 0xC40 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP2 DUP5 DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x59C CALLER DUP4 DUP4 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x959 DUP3 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x9B3 DUP7 DUP7 PUSH2 0xF93 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9ED PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA7B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xA9A JUMPI PUSH2 0xA92 PUSH2 0xFBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x959 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xAB9 JUMPI PUSH2 0xAB9 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP PUSH2 0x959 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0xAF2 DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x101A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0xB27 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE TIMESTAMP DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH2 0xB69 DUP10 DUP10 PUSH2 0x9C2 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP TIMESTAMP EQ DUP1 ISZERO PUSH2 0xB7C JUMPI POP DUP3 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xBE1 JUMPI DUP3 SLOAD DUP3 SWAP1 DUP5 SWAP1 PUSH2 0xB93 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP7 MLOAD PUSH1 0x4 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 DUP6 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC4D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0xC71 SWAP1 DUP6 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH2 0xC82 JUMPI DUP4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0xC8C DUP5 DUP4 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xCB2 SWAP1 DUP7 DUP4 PUSH2 0x123C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD3A JUMPI DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCF8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xD16 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP DUP1 DUP1 PUSH2 0xD32 SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC2 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x959 PUSH2 0xD56 PUSH2 0x125A JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDA6 DUP6 DUP6 PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDB3 DUP2 PUSH2 0x13C3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xE36 JUMPI PUSH1 0x0 DUP1 DUP4 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDDF JUMPI PUSH2 0xDDF PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF5 JUMPI SWAP1 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xE2E SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC0 JUMP JUMPDEST POP DUP5 SLOAD EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE50 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xE72 SWAP1 DUP5 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0xEA3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE9D SWAP1 DUP5 PUSH2 0x1708 JUMP JUMPDEST POP PUSH2 0x58B JUMP JUMPDEST PUSH2 0xED0 DUP4 PUSH2 0xEB1 DUP5 DUP5 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 PUSH2 0xF73 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF69 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF0F JUMP JUMPDEST POP POP POP POP DUP5 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF7F DUP2 PUSH2 0xAD0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x959 DUP3 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xFA1 DUP6 DUP6 PUSH2 0x176D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP7 SWAP1 SWAP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 SLOAD SWAP5 SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFE9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x102F DUP4 DUP6 PUSH2 0x1F9D JUMP JUMPDEST PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1045 DUP6 DUP6 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH2 0x1079 SWAP2 PUSH2 0x101A JUMP JUMPDEST PUSH2 0x1083 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742062616C616E636520746F2064656C6567617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x10FF SWAP1 DUP5 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x112E SWAP1 DUP5 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x116C SWAP1 DUP5 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1195 SWAP2 DUP8 SWAP2 PUSH2 0x118B DUP11 DUP5 PUSH2 0x1779 JUMP JUMPDEST DUP11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x11A2 DUP8 DUP7 PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x11CF DUP6 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x11C5 DUP10 DUP13 PUSH2 0x1779 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xFF825F9424124EFFC5CE1D9F4803D58EDE8A2BDA4DA2324810F74834715C4C59 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x9B3 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1252 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x17E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x12B3 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x12DD JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x13B7 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x13AB DUP8 DUP3 DUP6 DUP6 PUSH2 0x1802 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x9BB JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x13D7 JUMPI PUSH2 0x13D7 PUSH2 0x1FD6 JUMP JUMPDEST SUB PUSH2 0x13DF JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x1FD6 JUMP JUMPDEST SUB PUSH2 0x1440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1454 JUMPI PUSH2 0x1454 PUSH2 0x1FD6 JUMP JUMPDEST SUB PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14B5 JUMPI PUSH2 0x14B5 PUSH2 0x1FD6 JUMP JUMPDEST SUB PUSH2 0x150D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x315 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7573657220686173206E6F742064656C65676174656420656E6F75676820746F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2064656C6567617465 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x15C3 SWAP1 DUP5 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x15F2 SWAP1 DUP5 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1630 SWAP1 DUP5 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x1642 DUP6 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x166F DUP5 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1665 DUP9 DUP11 PUSH2 0x1779 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x167C DUP7 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x169F DUP5 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x118B DUP9 DUP12 PUSH2 0x1779 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xDE5AA493A93D4351631C1991A0AEECFD52D6B51CF1B61F1A3C48F97E26808653 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174A PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x1758 DUP5 DUP5 PUSH1 0x0 DUP8 MLOAD PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x959 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP4 DUP4 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 DUP7 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x17DA JUMPI PUSH2 0x17CD DUP6 DUP6 PUSH2 0x1ACF JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x9BB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1252 DUP5 DUP5 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1839 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18B6 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x18BD JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x18EA JUMPI POP PUSH2 0x18EA DUP5 DUP5 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x987 DUP4 DUP4 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1980 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x199A JUMPI PUSH1 0x0 PUSH2 0x1991 PUSH2 0xFBE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x19A4 DUP5 DUP5 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x1 SUB PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19BF JUMPI PUSH2 0x19BF PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 PUSH2 0x19DF PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x1A00 DUP7 DUP7 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x1A0A SWAP2 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH2 0x1A1A PUSH1 0x1 DUP5 PUSH2 0x1F0A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1A2A JUMPI PUSH2 0x1A2A PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A48 JUMPI PUSH2 0x1A48 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP8 DUP3 PUSH1 0x0 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI POP DUP1 MLOAD DUP9 LT JUMPDEST ISZERO PUSH2 0x1A79 JUMPI POP PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x18BD SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP9 LT PUSH2 0x1A99 JUMPI PUSH2 0x1A8D DUP10 DUP10 DUP6 DUP10 PUSH2 0x1953 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x1A8D DUP10 DUP10 DUP10 DUP7 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABC PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP4 DUP4 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP4 DUP4 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x987 DUP4 DUP4 PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x987 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1B52 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x959 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1C43 JUMPI PUSH1 0x0 PUSH2 0x1B7E PUSH1 0x1 DUP4 PUSH2 0x1F0A JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1B92 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BB2 JUMPI PUSH2 0x1BB2 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1BD5 JUMPI PUSH2 0x1BD5 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1C08 JUMPI PUSH2 0x1C08 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x959 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x959 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x987 DUP3 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CCF JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CA1 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D70 DUP7 DUP3 DUP8 ADD PUSH2 0x1CDC JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1D83 SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA8 DUP4 PUSH2 0x1C4D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1DCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DD8 DUP8 PUSH2 0x1C4D JUMP JUMPDEST SWAP6 POP PUSH2 0x1DE6 PUSH1 0x20 DUP9 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0F DUP11 DUP4 DUP12 ADD PUSH2 0x1CDC JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E91 DUP5 PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP PUSH2 0x1E9F PUSH1 0x20 DUP6 ADD PUSH2 0x1C4D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1F03 JUMPI PUSH2 0x1F03 PUSH2 0x1EDB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x1EDB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x1EDB JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 SLT PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP3 AND DUP3 ISZERO DUP3 AND OR ISZERO PUSH2 0x1F50 JUMPI PUSH2 0x1F50 PUSH2 0x1EDB JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F79 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x1F5F JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1252 PUSH2 0x1F97 DUP4 DUP7 PUSH2 0x1F58 JUMP JUMPDEST DUP5 PUSH2 0x1F58 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FD1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0xAC9 JUMPI PUSH2 0xAC9 PUSH2 0x1EDB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xC06304A66358D9FB4208594C02A6 DUP12 EXP SWAP16 SWAP9 0xF6 GASPRICE MULMOD 0xF9 LT SWAP3 PUSH9 0x6CDA72E806B064736F PUSH13 0x63430008110033000000000000 ", "sha1": "6ec2ff9daf4346d76e149ee6f4499653c6ff5211", "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.17;\n\nimport \"./NFTVault.sol\";\nimport \"../../libraries/DataTypes.sol\";\nimport \"../../libraries/ScaledMath.sol\";\nimport \"../../libraries/Merkle.sol\";\nimport \"../../libraries/VotingPowerHistory.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract FoundingFrogVault is NFTVault, EIP712 {\n    using Merkle for Merkle.Root;\n    using VotingPowerHistory for VotingPowerHistory.History;\n\n    mapping(address => bool) private _claimed;\n\n    bytes32 private immutable _TYPE_HASH =\n        keccak256(\"Proof(address account,uint128 multiplier,bytes32[] proof)\");\n    Merkle.Root private merkleRoot;\n\n    constructor(\n        address _owner,\n        uint256 _sumVotingPowers,\n        bytes32 _merkleRoot\n    ) EIP712(\"FoundingFrogVault\", \"1\") NFTVault(_owner) {\n        sumVotingPowers = _sumVotingPowers;\n        merkleRoot = Merkle.Root(_merkleRoot);\n    }\n\n    function claimNFT(\n        address nftOwner,\n        uint128 multiplier,\n        bytes32[] calldata proof,\n        bytes calldata signature\n    ) external {\n        require(\n            multiplier >= 1e18 && multiplier <= 20e18,\n            \"multiplier must be greater or equal than 1e18 and lower or equal than 20e18\"\n        );\n\n        bytes32 hash = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _TYPE_HASH,\n                    nftOwner,\n                    multiplier,\n                    _encodeProof(proof)\n                )\n            )\n        );\n        address claimant = ECDSA.recover(hash, signature);\n        require(claimant == nftOwner, \"invalid signature\");\n\n        require(!_claimed[nftOwner], \"NFT already claimed\");\n\n        bytes32 node = keccak256(abi.encodePacked(nftOwner, multiplier));\n        require(merkleRoot.isProofValid(node, proof), \"invalid proof\");\n\n        _claimed[nftOwner] = true;\n\n        VotingPowerHistory.Record memory current = history.currentRecord(\n            msg.sender\n        );\n        history.updateVotingPower(\n            msg.sender,\n            current.baseVotingPower + ScaledMath.ONE,\n            multiplier,\n            current.netDelegatedVotes\n        );\n    }\n\n    function _encodeProof(\n        bytes32[] memory proof\n    ) internal pure returns (bytes32) {\n        bytes memory proofB;\n        for (uint256 i = 0; i < proof.length; i++) {\n            proofB = bytes.concat(proofB, abi.encode(proof[i]));\n        }\n        return keccak256(proofB);\n    }\n}\n", "sourceMap": "385:2178:18:-:0;;;629:70;582:117;;742:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2464:602:8;;;;;;;;;;;-1:-1:-1;;;2464:602:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:8;;;;;;-1:-1:-1;;;;;334:14:14;;;;2550:22:8;;;;;2606:25;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;2464:602;;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;690:25:37;;;731:18;;;724:34;;;774:18;;;767:34;;;3686:13:8;817:18:37;;;810:34;3709:4:8;860:19:37;;;853:61;3606:7:8;;662:19:37;;3642:73:8;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;;907:15:18::2;:34:::0;;;;964:24:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;951:10:::2;:37:::0;-1:-1:-1;385:2178:18;;-1:-1:-1;385:2178:18;14:412:37;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:37;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;351:25;416:2;401:18;;;395:25;327:5;;351:25;;-1:-1:-1;395:25:37;14:412;-1:-1:-1;;;14:412:37:o;431:489::-;385:2178:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/vaults/FoundingFrogVault.sol", "type": "contract", "deployment": {"address": "0x0444406774408CfD278d3C592C604EB34326A366", "chainid": "137", "blockHeight": 44801805}}